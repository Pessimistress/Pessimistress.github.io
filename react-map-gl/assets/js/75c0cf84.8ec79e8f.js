"use strict";(self.webpackChunkreact_map_gl_website=self.webpackChunkreact_map_gl_website||[]).push([[2005],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(r),f=o,d=u["".concat(i,".").concat(f)]||u[f]||m[f]||l;return r?n.createElement(d,a(a({ref:t},s),{},{components:r})):n.createElement(d,a({ref:t},s))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,a=new Array(l);a[0]=f;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[u]="string"==typeof e?e:o,a[1]=c;for(var p=2;p<l;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},2785:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>p,toc:()=>u});var n=r(7462),o=r(3366),l=(r(7294),r(3905)),a=["components"],c={},i="FullscreenControl",p={unversionedId:"api-reference/fullscreen-control",id:"api-reference/fullscreen-control",title:"FullscreenControl",description:"React component that wraps FullscreenControl.",source:"@site/../docs/api-reference/fullscreen-control.md",sourceDirName:"api-reference",slug:"/api-reference/fullscreen-control",permalink:"/react-map-gl/docs/api-reference/fullscreen-control",draft:!1,editUrl:"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/fullscreen-control.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"AttributionControl",permalink:"/react-map-gl/docs/api-reference/attribution-control"},next:{title:"GeolocateControl",permalink:"/react-map-gl/docs/api-reference/geolocate-control"}},s={},u=[{value:"Properties",id:"properties",level:2},{value:"<code>containerId</code>: string",id:"containerid",level:4},{value:"<code>position</code>: &#39;top-right&#39; | &#39;top-left&#39; | &#39;bottom-right&#39; | &#39;bottom-left&#39;",id:"position",level:4},{value:"<code>style</code>: CSSProperties",id:"style",level:4},{value:"Source",id:"source",level:2}],m={toc:u},f="wrapper";function d(e){var t=e.components,r=(0,o.Z)(e,a);return(0,l.kt)(f,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"fullscreencontrol"},"FullscreenControl"),(0,l.kt)("p",null,"React component that wraps ",(0,l.kt)("a",{parentName:"p",href:"https://docs.mapbox.com/mapbox-gl-js/api/markers/#fullscreencontrol"},"FullscreenControl"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import * as React from 'react';\nimport Map, {FullscreenControl} from 'react-map-gl';\n\nfunction App() {\n  return <Map\n    mapLib={import('mapbox-gl')}\n    initialViewState={{\n      longitude: -100,\n      latitude: 40,\n      zoom: 3.5\n    }}\n    mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n  >\n    <FullscreenControl />\n  </Map>;\n}\n")),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("p",null,"Note that the following properties are not reactive. They are only used when the component first mounts."),(0,l.kt)("h4",{id:"containerid"},(0,l.kt)("inlineCode",{parentName:"h4"},"containerId"),": string"),(0,l.kt)("p",null,"Id of the DOM element which should be made full screen. By default, the map container element will be made full screen."),(0,l.kt)("h4",{id:"position"},(0,l.kt)("inlineCode",{parentName:"h4"},"position"),": 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left'"),(0,l.kt)("p",null,"Default: ",(0,l.kt)("inlineCode",{parentName:"p"},"'top-right'")),(0,l.kt)("p",null,"Placement of the control relative to the map."),(0,l.kt)("h4",{id:"style"},(0,l.kt)("inlineCode",{parentName:"h4"},"style"),": CSSProperties"),(0,l.kt)("p",null,"CSS style override that applies to the control's container."),(0,l.kt)("h2",{id:"source"},"Source"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/visgl/react-map-gl/tree/7.0-release/src/components/fullscreen-control.ts"},"fullscreen-control.ts")))}d.isMDXComponent=!0}}]);