(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[8782],{32900:(e,t,n)=>{"use strict";n.d(t,{Z:()=>d});var i=n(15804),o=n(51355);const r=new Uint16Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]),s=new Float32Array([-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1]),a=new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0]),l=new Float32Array([0,0,1,0,1,1,0,1,1,0,1,1,0,1,0,0,0,1,0,0,1,0,1,1,1,1,0,1,0,0,1,0,1,0,1,1,0,1,0,0,0,0,1,0,1,1,0,1]),c={POSITION:{size:3,value:new Float32Array(s)},NORMAL:{size:3,value:new Float32Array(a)},TEXCOORD_0:{size:2,value:new Float32Array(l)}};class d extends i.Z{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{id:t=(0,o.hQ)("cube-geometry")}=e;super({...e,id:t,indices:{size:1,value:new Uint16Array(r)},attributes:{...c,...e.attributes}})}}},3905:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>d,kt:()=>g});var i=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),p=c(n),h=o,g=p["".concat(l,".").concat(h)]||p[h]||u[h]||r;return n?i.createElement(g,s(s({ref:t},d),{},{components:n})):i.createElement(g,s({ref:t},d))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=h;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[p]="string"==typeof e?e:o,s[1]=a;for(var c=2;c<r;c++)s[c]=n[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},93932:(e,t,n)=>{"use strict";n.d(t,{Z:()=>w});var i=n(62833);const o=()=>{},r=2,s=3,a=e=>e,l=1;class c{constructor(e){this._onTransitionUpdate=e=>{const{time:t,settings:{interpolator:n,startProps:i,endProps:o,duration:r,easing:s}}=e,a=s(t/r),l=n.interpolateProps(i,o,a);this.propsInTransition=this.getControllerState({...this.props,...l}).getViewportProps(),this.onViewStateChange({viewState:this.propsInTransition,oldViewState:this.props})},this.getControllerState=e.getControllerState,this.propsInTransition=null,this.transition=new i.Z(e.timeline),this.onViewStateChange=e.onViewStateChange||o,this.onStateChange=e.onStateChange||o}finalize(){this.transition.cancel()}getViewportInTransition(){return this.propsInTransition}processViewStateChange(e){let t=!1;const n=this.props;if(this.props=e,!n||this._shouldIgnoreViewportChange(n,e))return!1;if(this._isTransitionEnabled(e)){let i=n;if(this.transition.inProgress){const{interruption:e,endProps:t}=this.transition.settings;i={...n,...e===r?t:this.propsInTransition||n}}this._triggerTransition(i,e),t=!0}else this.transition.cancel();return t}updateTransition(){this.transition.update()}_isTransitionEnabled(e){const{transitionDuration:t,transitionInterpolator:n}=e;return(t>0||"auto"===t)&&Boolean(n)}_isUpdateDueToCurrentTransition(e){return!(!this.transition.inProgress||!this.propsInTransition)&&this.transition.settings.interpolator.arePropsEqual(e,this.propsInTransition)}_shouldIgnoreViewportChange(e,t){return this.transition.inProgress?this.transition.settings.interruption===s||this._isUpdateDueToCurrentTransition(t):!this._isTransitionEnabled(t)||t.transitionInterpolator.arePropsEqual(e,t)}_triggerTransition(e,t){const n=this.getControllerState(e),i=this.getControllerState(t).shortestPathFrom(n),o=t.transitionInterpolator,r=o.getDuration?o.getDuration(e,t):t.transitionDuration;if(0===r)return;const s=o.initializeProps(e,i);this.propsInTransition={};const c={duration:r,easing:t.transitionEasing||a,interpolator:o,interruption:t.transitionInterruption||l,startProps:s.start,endProps:s.end,onStart:t.onTransitionStart,onUpdate:this._onTransitionUpdate,onInterrupt:this._onTransitionEnd(t.onTransitionInterrupt),onEnd:this._onTransitionEnd(t.onTransitionEnd)};this.transition.start(c),this.onStateChange({inTransition:!0}),this.updateTransition()}_onTransitionEnd(e){return t=>{this.propsInTransition=null,this.onStateChange({inTransition:!1,isZooming:!1,isPanning:!1,isRotating:!1}),null==e||e(t)}}}var d=n(60499);const p={transitionDuration:0},u=e=>1-(1-e)*(1-e),h=["wheel"],g=["panstart","panmove","panend"],f=["pinchstart","pinchmove","pinchend"],m=["tripanstart","tripanmove","tripanend"],y=["doubletap"],v=["keydown"],_={};class w{constructor(e){this.state={},this._events={},this._interactionState={isDragging:!1},this._customEvents=[],this._eventStartBlocked=null,this._panMove=!1,this.invertPan=!1,this.dragMode="rotate",this.inertia=0,this.scrollZoom=!0,this.dragPan=!0,this.dragRotate=!0,this.doubleClickZoom=!0,this.touchZoom=!0,this.touchRotate=!1,this.keyboard=!0,this.transitionManager=new c({...e,getControllerState:e=>new this.ControllerState(e),onViewStateChange:this._onTransition.bind(this),onStateChange:this._setInteractionState.bind(this)}),this.handleEvent=this.handleEvent.bind(this),this.eventManager=e.eventManager,this.onViewStateChange=e.onViewStateChange||(()=>{}),this.onStateChange=e.onStateChange||(()=>{}),this.makeViewport=e.makeViewport}set events(e){this.toggleEvents(this._customEvents,!1),this.toggleEvents(e,!0),this._customEvents=e,this.props&&this.setProps(this.props)}finalize(){for(const t in this._events){var e;if(this._events[t])null==(e=this.eventManager)||e.off(t,this.handleEvent)}this.transitionManager.finalize()}handleEvent(e){this._controllerState=void 0;const t=this._eventStartBlocked;switch(e.type){case"panstart":return!t&&this._onPanStart(e);case"panmove":return this._onPan(e);case"panend":return this._onPanEnd(e);case"pinchstart":return!t&&this._onPinchStart(e);case"pinchmove":return this._onPinch(e);case"pinchend":return this._onPinchEnd(e);case"tripanstart":return!t&&this._onTriplePanStart(e);case"tripanmove":return this._onTriplePan(e);case"tripanend":return this._onTriplePanEnd(e);case"doubletap":return this._onDoubleTap(e);case"wheel":return this._onWheel(e);case"keydown":return this._onKeyDown(e);default:return!1}}get controllerState(){return this._controllerState=this._controllerState||new this.ControllerState({makeViewport:this.makeViewport,...this.props,...this.state}),this._controllerState}getCenter(e){const{x:t,y:n}=this.props,{offsetCenter:i}=e;return[i.x-t,i.y-n]}isPointInBounds(e,t){const{width:n,height:i}=this.props;if(t&&t.handled)return!1;const o=e[0]>=0&&e[0]<=n&&e[1]>=0&&e[1]<=i;return o&&t&&t.stopPropagation(),o}isFunctionKeyPressed(e){const{srcEvent:t}=e;return Boolean(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)}isDragging(){return this._interactionState.isDragging||!1}blockEvents(e){const t=setTimeout((()=>{this._eventStartBlocked===t&&(this._eventStartBlocked=null)}),e);this._eventStartBlocked=t}setProps(e){e.dragMode&&(this.dragMode=e.dragMode),this.props=e,"transitionInterpolator"in e||(e.transitionInterpolator=this._getTransitionProps().transitionInterpolator),this.transitionManager.processViewStateChange(e);const{inertia:t}=e;this.inertia=Number.isFinite(t)?t:!0===t?300:0;const{scrollZoom:n=!0,dragPan:i=!0,dragRotate:o=!0,doubleClickZoom:r=!0,touchZoom:s=!0,touchRotate:a=!1,keyboard:l=!0}=e,c=Boolean(this.onViewStateChange);this.toggleEvents(h,c&&n),this.toggleEvents(g,c&&(i||o)),this.toggleEvents(f,c&&(s||a)),this.toggleEvents(m,c&&a),this.toggleEvents(y,c&&r),this.toggleEvents(v,c&&l),this.scrollZoom=n,this.dragPan=i,this.dragRotate=o,this.doubleClickZoom=r,this.touchZoom=s,this.touchRotate=a,this.keyboard=l}updateTransition(){this.transitionManager.updateTransition()}toggleEvents(e,t){this.eventManager&&e.forEach((e=>{this._events[e]!==t&&(this._events[e]=t,t?this.eventManager.on(e,this.handleEvent):this.eventManager.off(e,this.handleEvent))}))}updateViewport(e,t,n){void 0===t&&(t=null),void 0===n&&(n={});const i={...e.getViewportProps(),...t},o=this.controllerState!==e;if(this.state=e.getState(),this._setInteractionState(n),o){const e=this.controllerState&&this.controllerState.getViewportProps();this.onViewStateChange&&this.onViewStateChange({viewState:i,interactionState:this._interactionState,oldViewState:e})}}_onTransition(e){this.onViewStateChange({...e,interactionState:this._interactionState})}_setInteractionState(e){Object.assign(this._interactionState,e),this.onStateChange(this._interactionState)}_onPanStart(e){const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;let n=this.isFunctionKeyPressed(e)||e.rightButton||!1;(this.invertPan||"pan"===this.dragMode)&&(n=!n);const i=this.controllerState[n?"panStart":"rotateStart"]({pos:t});return this._panMove=n,this.updateViewport(i,p,{isDragging:!0}),!0}_onPan(e){return!!this.isDragging()&&(this._panMove?this._onPanMove(e):this._onPanRotate(e))}_onPanEnd(e){return!!this.isDragging()&&(this._panMove?this._onPanMoveEnd(e):this._onPanRotateEnd(e))}_onPanMove(e){if(!this.dragPan)return!1;const t=this.getCenter(e),n=this.controllerState.pan({pos:t});return this.updateViewport(n,p,{isDragging:!0,isPanning:!0}),!0}_onPanMoveEnd(e){const{inertia:t}=this;if(this.dragPan&&t&&e.velocity){const n=this.getCenter(e),i=[n[0]+e.velocityX*t/2,n[1]+e.velocityY*t/2],o=this.controllerState.pan({pos:i}).panEnd();this.updateViewport(o,{...this._getTransitionProps(),transitionDuration:t,transitionEasing:u},{isDragging:!1,isPanning:!0})}else{const e=this.controllerState.panEnd();this.updateViewport(e,null,{isDragging:!1,isPanning:!1})}return!0}_onPanRotate(e){if(!this.dragRotate)return!1;const t=this.getCenter(e),n=this.controllerState.rotate({pos:t});return this.updateViewport(n,p,{isDragging:!0,isRotating:!0}),!0}_onPanRotateEnd(e){const{inertia:t}=this;if(this.dragRotate&&t&&e.velocity){const n=this.getCenter(e),i=[n[0]+e.velocityX*t/2,n[1]+e.velocityY*t/2],o=this.controllerState.rotate({pos:i}).rotateEnd();this.updateViewport(o,{...this._getTransitionProps(),transitionDuration:t,transitionEasing:u},{isDragging:!1,isRotating:!0})}else{const e=this.controllerState.rotateEnd();this.updateViewport(e,null,{isDragging:!1,isRotating:!1})}return!0}_onWheel(e){if(!this.scrollZoom)return!1;e.srcEvent.preventDefault();const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;const{speed:n=.01,smooth:i=!1}=!0===this.scrollZoom?{}:this.scrollZoom,{delta:o}=e;let r=2/(1+Math.exp(-Math.abs(o*n)));o<0&&0!==r&&(r=1/r);const s=this.controllerState.zoom({pos:t,scale:r});return this.updateViewport(s,{...this._getTransitionProps({around:t}),transitionDuration:i?250:1},{isZooming:!0,isPanning:!0}),!0}_onTriplePanStart(e){const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;const n=this.controllerState.rotateStart({pos:t});return this.updateViewport(n,p,{isDragging:!0}),!0}_onTriplePan(e){if(!this.touchRotate)return!1;if(!this.isDragging())return!1;const t=this.getCenter(e);t[0]-=e.deltaX;const n=this.controllerState.rotate({pos:t});return this.updateViewport(n,p,{isDragging:!0,isRotating:!0}),!0}_onTriplePanEnd(e){if(!this.isDragging())return!1;const{inertia:t}=this;if(this.touchRotate&&t&&e.velocityY){const n=this.getCenter(e),i=[n[0],n[1]+=e.velocityY*t/2],o=this.controllerState.rotate({pos:i});this.updateViewport(o,{...this._getTransitionProps(),transitionDuration:t,transitionEasing:u},{isDragging:!1,isRotating:!0}),this.blockEvents(t)}else{const e=this.controllerState.rotateEnd();this.updateViewport(e,null,{isDragging:!1,isRotating:!1})}return!0}_onPinchStart(e){const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;const n=this.controllerState.zoomStart({pos:t}).rotateStart({pos:t});return _._startPinchRotation=e.rotation,_._lastPinchEvent=e,this.updateViewport(n,p,{isDragging:!0}),!0}_onPinch(e){if(!this.touchZoom&&!this.touchRotate)return!1;if(!this.isDragging())return!1;let t=this.controllerState;if(this.touchZoom){const{scale:n}=e,i=this.getCenter(e);t=t.zoom({pos:i,scale:n})}if(this.touchRotate){const{rotation:n}=e;t=t.rotate({deltaAngleX:_._startPinchRotation-n})}return this.updateViewport(t,p,{isDragging:!0,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:this.touchRotate}),_._lastPinchEvent=e,!0}_onPinchEnd(e){if(!this.isDragging())return!1;const{inertia:t}=this,{_lastPinchEvent:n}=_;if(this.touchZoom&&t&&n&&e.scale!==n.scale){const i=this.getCenter(e);let o=this.controllerState.rotateEnd();const r=Math.log2(e.scale),s=(r-Math.log2(n.scale))/(e.deltaTime-n.deltaTime),a=Math.pow(2,r+s*t/2);o=o.zoom({pos:i,scale:a}).zoomEnd(),this.updateViewport(o,{...this._getTransitionProps({around:i}),transitionDuration:t,transitionEasing:u},{isDragging:!1,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:!1}),this.blockEvents(t)}else{const e=this.controllerState.zoomEnd().rotateEnd();this.updateViewport(e,null,{isDragging:!1,isPanning:!1,isZooming:!1,isRotating:!1})}return _._startPinchRotation=null,_._lastPinchEvent=null,!0}_onDoubleTap(e){if(!this.doubleClickZoom)return!1;const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;const n=this.isFunctionKeyPressed(e),i=this.controllerState.zoom({pos:t,scale:n?.5:2});return this.updateViewport(i,this._getTransitionProps({around:t}),{isZooming:!0,isPanning:!0}),this.blockEvents(100),!0}_onKeyDown(e){if(!this.keyboard)return!1;const t=this.isFunctionKeyPressed(e),{zoomSpeed:n,moveSpeed:i,rotateSpeedX:o,rotateSpeedY:r}=!0===this.keyboard?{}:this.keyboard,{controllerState:s}=this;let a;const l={};switch(e.srcEvent.code){case"Minus":a=t?s.zoomOut(n).zoomOut(n):s.zoomOut(n),l.isZooming=!0;break;case"Equal":a=t?s.zoomIn(n).zoomIn(n):s.zoomIn(n),l.isZooming=!0;break;case"ArrowLeft":t?(a=s.rotateLeft(o),l.isRotating=!0):(a=s.moveLeft(i),l.isPanning=!0);break;case"ArrowRight":t?(a=s.rotateRight(o),l.isRotating=!0):(a=s.moveRight(i),l.isPanning=!0);break;case"ArrowUp":t?(a=s.rotateUp(r),l.isRotating=!0):(a=s.moveUp(i),l.isPanning=!0);break;case"ArrowDown":t?(a=s.rotateDown(r),l.isRotating=!0):(a=s.moveDown(i),l.isPanning=!0);break;default:return!1}return this.updateViewport(a,this._getTransitionProps(),l),!0}_getTransitionProps(e){const{transition:t}=this;return t&&t.transitionInterpolator?e?{...t,transitionInterpolator:new d.Z({...e,...t.transitionInterpolator.opts,makeViewport:this.controllerState.makeViewport})}:t:p}}},26810:(e,t,n)=>{"use strict";n.d(t,{U:()=>c,Z:()=>d});var i=n(28835),o=n(93932),r=n(28793),s=n(92797),a=n(13405),l=n(60499);class c extends r.Z{constructor(e){const{width:t,height:n,latitude:i,longitude:o,zoom:r,bearing:s=0,pitch:l=0,altitude:c=1.5,position:d=[0,0,0],maxZoom:p=20,minZoom:u=0,maxPitch:h=60,minPitch:g=0,startPanLngLat:f,startZoomLngLat:m,startRotatePos:y,startBearing:v,startPitch:_,startZoom:w,normalize:b=!0}=e;(0,a.Z)(Number.isFinite(o)),(0,a.Z)(Number.isFinite(i)),(0,a.Z)(Number.isFinite(r)),super({width:t,height:n,latitude:i,longitude:o,zoom:r,bearing:s,pitch:l,altitude:c,maxZoom:p,minZoom:u,maxPitch:h,minPitch:g,normalize:b,position:d},{startPanLngLat:f,startZoomLngLat:m,startRotatePos:y,startBearing:v,startPitch:_,startZoom:w}),this.makeViewport=e.makeViewport}panStart(e){let{pos:t}=e;return this._getUpdatedState({startPanLngLat:this._unproject(t)})}pan(e){let{pos:t,startPos:n}=e;const i=this.getState().startPanLngLat||this._unproject(n);if(!i)return this;const o=this.makeViewport(this.getViewportProps()).panByPosition(i,t);return this._getUpdatedState(o)}panEnd(){return this._getUpdatedState({startPanLngLat:null})}rotateStart(e){let{pos:t}=e;return this._getUpdatedState({startRotatePos:t,startBearing:this.getViewportProps().bearing,startPitch:this.getViewportProps().pitch})}rotate(e){let{pos:t,deltaAngleX:n=0,deltaAngleY:i=0}=e;const{startRotatePos:o,startBearing:r,startPitch:s}=this.getState();if(!o||void 0===r||void 0===s)return this;let a;return a=t?this._getNewRotation(t,o,s,r):{bearing:r+n,pitch:s+i},this._getUpdatedState(a)}rotateEnd(){return this._getUpdatedState({startBearing:null,startPitch:null})}zoomStart(e){let{pos:t}=e;return this._getUpdatedState({startZoomLngLat:this._unproject(t),startZoom:this.getViewportProps().zoom})}zoom(e){let{pos:t,startPos:n,scale:o}=e,{startZoom:r,startZoomLngLat:s}=this.getState();if(s||(r=this.getViewportProps().zoom,s=this._unproject(n)||this._unproject(t)),!s)return this;const{maxZoom:a,minZoom:l}=this.getViewportProps();let c=r+Math.log2(o);c=(0,i.uZ)(c,l,a);const d=this.makeViewport({...this.getViewportProps(),zoom:c});return this._getUpdatedState({zoom:c,...d.panByPosition(s,t)})}zoomEnd(){return this._getUpdatedState({startZoomLngLat:null,startZoom:null})}zoomIn(e){return void 0===e&&(e=2),this._zoomFromCenter(e)}zoomOut(e){return void 0===e&&(e=2),this._zoomFromCenter(1/e)}moveLeft(e){return void 0===e&&(e=100),this._panFromCenter([e,0])}moveRight(e){return void 0===e&&(e=100),this._panFromCenter([-e,0])}moveUp(e){return void 0===e&&(e=100),this._panFromCenter([0,e])}moveDown(e){return void 0===e&&(e=100),this._panFromCenter([0,-e])}rotateLeft(e){return void 0===e&&(e=15),this._getUpdatedState({bearing:this.getViewportProps().bearing-e})}rotateRight(e){return void 0===e&&(e=15),this._getUpdatedState({bearing:this.getViewportProps().bearing+e})}rotateUp(e){return void 0===e&&(e=10),this._getUpdatedState({pitch:this.getViewportProps().pitch+e})}rotateDown(e){return void 0===e&&(e=10),this._getUpdatedState({pitch:this.getViewportProps().pitch-e})}shortestPathFrom(e){const t=e.getViewportProps(),n={...this.getViewportProps()},{bearing:i,longitude:o}=n;return Math.abs(i-t.bearing)>180&&(n.bearing=i<0?i+360:i-360),Math.abs(o-t.longitude)>180&&(n.longitude=o<0?o+360:o-360),n}applyConstraints(e){const{maxZoom:t,minZoom:n,zoom:o}=e;e.zoom=(0,i.uZ)(o,n,t);const{maxPitch:r,minPitch:a,pitch:l}=e;e.pitch=(0,i.uZ)(l,a,r);const{normalize:c=!0}=e;return c&&Object.assign(e,(0,s.QA)(e)),e}_zoomFromCenter(e){const{width:t,height:n}=this.getViewportProps();return this.zoom({pos:[t/2,n/2],scale:e})}_panFromCenter(e){const{width:t,height:n}=this.getViewportProps();return this.pan({startPos:[t/2,n/2],pos:[t/2+e[0],n/2+e[1]]})}_getUpdatedState(e){return new this.constructor({makeViewport:this.makeViewport,...this.getViewportProps(),...this.getState(),...e})}_unproject(e){const t=this.makeViewport(this.getViewportProps());return e&&t.unproject(e)}_getNewRotation(e,t,n,o){const r=e[0]-t[0],s=e[1]-t[1],a=e[1],l=t[1],{width:c,height:d}=this.getViewportProps(),p=r/c;let u=0;s>0?Math.abs(d-l)>5&&(u=s/(l-d)*1.2):s<0&&l>5&&(u=1-a/l),u=(0,i.uZ)(u,-1,1);const{minPitch:h,maxPitch:g}=this.getViewportProps();let f=n;return u>0?f=n+u*(g-n):u<0&&(f=n-u*(h-n)),{pitch:f,bearing:o+180*p}}}class d extends o.Z{constructor(){super(...arguments),this.ControllerState=c,this.transition={transitionDuration:300,transitionInterpolator:new l.Z({transitionProps:{compare:["longitude","latitude","zoom","bearing","pitch","position"],required:["longitude","latitude","zoom"]}})},this.dragMode="pan"}setProps(e){e.position=e.position||[0,0,0];const t=this.props;super.setProps(e);(!t||t.height!==e.height)&&this.updateViewport(new this.ControllerState({makeViewport:this.makeViewport,...e,...this.state}))}}},28793:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});class i{constructor(e,t){this._viewportProps=this.applyConstraints(e),this._state=t}getViewportProps(){return this._viewportProps}getState(){return this._state}}},14503:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s,z:()=>r});var i=n(89745);let o={};function r(e){o=e}function s(e,t,n,r){i.Z.level>0&&o[e]&&o[e].call(null,t,n,r)}},35503:(e,t,n)=>{"use strict";n.d(t,{M:()=>s});const i=[255,255,255],o=1;let r=0;class s{constructor(e){void 0===e&&(e={}),this.type="ambient";const{color:t=i}=e,{intensity:n=o}=e;this.id=e.id||"ambient-"+r++,this.color=t,this.intensity=n}}},42697:(e,t,n)=>{"use strict";n.d(t,{O:()=>l});var i=n(59122);const o=[255,255,255],r=1,s=[0,0,-1];let a=0;class l{constructor(e){void 0===e&&(e={}),this.type="directional";const{color:t=o}=e,{intensity:n=r}=e,{direction:l=s}=e,{_shadow:c=!1}=e;this.id=e.id||"directional-"+a++,this.color=t,this.intensity=n,this.type="directional",this.direction=new i.Z(l).normalize().toArray(),this.shadow=c}getProjectedLight(e){return this}}},6192:(e,t,n)=>{"use strict";n.d(t,{Z:()=>S});var i=n(74797),o=n(43970),r=n(35503),s=n(42697),a=n(76450),l=n(59122),c=n(5259),d=n(40984),p=n(79762),u=n(7092);class h extends c.Z{constructor(e,t){super(e,t),this.shadowMap=new o.Z(e,{width:1,height:1,parameters:{10241:9729,10240:9729,10242:33071,10243:33071}}),this.depthBuffer=new d.Z(e,{format:33189,width:1,height:1}),this.fbo=new p.Z(e,{id:"shadowmap",width:1,height:1,attachments:{36064:this.shadowMap,36096:this.depthBuffer}})}render(e){const t=this.fbo;(0,u.s8)(this.gl,{depthRange:[0,1],depthTest:!0,blend:!1,clearColor:[1,1,1,1]},(()=>{const n=e.viewports[0],i=(0,u.w)(this.gl),o=n.width*i,r=n.height*i;o===t.width&&r===t.height||t.resize({width:o,height:r}),super.render({...e,target:t,pass:"shadow"})}))}shouldDrawLayer(e){return!1!==e.props.shadowEnabled}getModuleParameters(){return{drawToShadowMap:!0}}delete(){this.fbo&&(this.fbo.delete(),this.fbo=null),this.shadowMap&&(this.shadowMap.delete(),this.shadowMap=null),this.depthBuffer&&(this.depthBuffer.delete(),this.depthBuffer=null)}}var g=n(43631),f=n(73782),m=n(66508),y=n(92797);const v=(0,m.Z)((function(e){let{viewport:t,center:n}=e;return new a.Z(t.viewProjectionMatrix).invert().transform(n)})),_=(0,m.Z)((function(e){let{viewport:t,shadowMatrices:n}=e;const i=[],o=t.pixelUnprojectionMatrix,r=t.isGeospatial?void 0:1,s=[[0,0,r],[t.width,0,r],[0,t.height,r],[t.width,t.height,r],[0,0,-1],[t.width,0,-1],[0,t.height,-1],[t.width,t.height,-1]].map((e=>function(e,t){const[n,i,o]=e,r=(0,y.CT)([n,i,o],t);if(Number.isFinite(o))return r;return[r[0],r[1],0]}(e,o)));for(const c of n){const e=c.clone().translate(new l.Z(t.center).negate()),n=s.map((t=>e.transform(t))),o=(new a.Z).ortho({left:Math.min(...n.map((e=>e[0]))),right:Math.max(...n.map((e=>e[0]))),bottom:Math.min(...n.map((e=>e[1]))),top:Math.max(...n.map((e=>e[1]))),near:Math.min(...n.map((e=>-e[2]))),far:Math.max(...n.map((e=>-e[2])))});i.push(o.multiplyRight(c))}return i})),w=[0,0,0,1],b=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0];const P={name:"shadow",dependencies:[f.Z],vs:"\nconst int max_lights = 2;\nuniform mat4 shadow_uViewProjectionMatrices[max_lights];\nuniform vec4 shadow_uProjectCenters[max_lights];\nuniform bool shadow_uDrawShadowMap;\nuniform bool shadow_uUseShadowMap;\nuniform int shadow_uLightId;\nuniform float shadow_uLightCount;\n\nvarying vec3 shadow_vPosition[max_lights];\n\nvec4 shadow_setVertexPosition(vec4 position_commonspace) {\n  if (shadow_uDrawShadowMap) {\n    return project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[shadow_uLightId], shadow_uProjectCenters[shadow_uLightId]);\n  }\n  if (shadow_uUseShadowMap) {\n    for (int i = 0; i < max_lights; i++) {\n      if(i < int(shadow_uLightCount)) {\n        vec4 shadowMap_position = project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[i], shadow_uProjectCenters[i]);\n        shadow_vPosition[i] = (shadowMap_position.xyz / shadowMap_position.w + 1.0) / 2.0;\n      }\n    }\n  }\n  return gl_Position;\n}\n",fs:"\nconst int max_lights = 2;\nuniform bool shadow_uDrawShadowMap;\nuniform bool shadow_uUseShadowMap;\nuniform sampler2D shadow_uShadowMap0;\nuniform sampler2D shadow_uShadowMap1;\nuniform vec4 shadow_uColor;\nuniform float shadow_uLightCount;\n\nvarying vec3 shadow_vPosition[max_lights];\n\nconst vec4 bitPackShift = vec4(1.0, 255.0, 65025.0, 16581375.0);\nconst vec4 bitUnpackShift = 1.0 / bitPackShift;\nconst vec4 bitMask = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0,  0.0);\n\nfloat shadow_getShadowWeight(vec3 position, sampler2D shadowMap) {\n  vec4 rgbaDepth = texture2D(shadowMap, position.xy);\n\n  float z = dot(rgbaDepth, bitUnpackShift);\n  return smoothstep(0.001, 0.01, position.z - z);\n}\n\nvec4 shadow_filterShadowColor(vec4 color) {\n  if (shadow_uDrawShadowMap) {\n    vec4 rgbaDepth = fract(gl_FragCoord.z * bitPackShift);\n    rgbaDepth -= rgbaDepth.gbaa * bitMask;\n    return rgbaDepth;\n  }\n  if (shadow_uUseShadowMap) {\n    float shadowAlpha = 0.0;\n    shadowAlpha += shadow_getShadowWeight(shadow_vPosition[0], shadow_uShadowMap0);\n    if(shadow_uLightCount > 1.0) {\n      shadowAlpha += shadow_getShadowWeight(shadow_vPosition[1], shadow_uShadowMap1);\n    }\n    shadowAlpha *= shadow_uColor.a / shadow_uLightCount;\n    float blendedAlpha = shadowAlpha + color.a * (1.0 - shadowAlpha);\n\n    return vec4(\n      mix(color.rgb, shadow_uColor.rgb, shadowAlpha / blendedAlpha),\n      blendedAlpha\n    );\n  }\n  return color;\n}\n",inject:{"vs:DECKGL_FILTER_GL_POSITION":"\n    position = shadow_setVertexPosition(geometry.position);\n    ","fs:DECKGL_FILTER_COLOR":"\n    color = shadow_filterShadowColor(color);\n    "},getUniforms:function(e,t){return void 0===e&&(e={}),void 0===t&&(t={}),"viewport"in e&&(e.drawToShadowMap||e.shadowMaps&&e.shadowMaps.length>0)?function(e,t){const{shadowEnabled:n=!0}=e;if(!n||!e.shadowMatrices||!e.shadowMatrices.length)return{shadow_uDrawShadowMap:!1,shadow_uUseShadowMap:!1};const i={shadow_uDrawShadowMap:Boolean(e.drawToShadowMap),shadow_uUseShadowMap:!!e.shadowMaps&&e.shadowMaps.length>0,shadow_uColor:e.shadowColor||w,shadow_uLightId:e.shadowLightId||0,shadow_uLightCount:e.shadowMatrices.length},o=v({viewport:e.viewport,center:t.project_uCenter}),r=[],s=_({shadowMatrices:e.shadowMatrices,viewport:e.viewport}).slice();for(let a=0;a<e.shadowMatrices.length;a++){const n=s[a],i=n.clone().translate(new l.Z(e.viewport.center).negate());t.project_uCoordinateSystem===g.Df.LNGLAT&&t.project_uProjectionMode===g.zG.WEB_MERCATOR?(s[a]=i,r[a]=o):(s[a]=n.clone().multiplyRight(b),r[a]=i.transform(o))}for(let a=0;a<s.length;a++)i["shadow_uViewProjectionMatrices["+a+"]"]=s[a],i["shadow_uProjectCenters["+a+"]"]=r[a],e.shadowMaps&&e.shadowMaps.length>0?i["shadow_uShadowMap"+a]=e.shadowMaps[a]:i["shadow_uShadowMap"+a]=e.dummyShadowMap;return i}(e,t):{}}},x={color:[255,255,255],intensity:1},k=[{color:[255,255,255],intensity:1,direction:[-1,3,-1]},{color:[255,255,255],intensity:.9,direction:[1,-8,-2.5]}],C=[0,0,0,200/255];class S{constructor(e){void 0===e&&(e={}),this.id="lighting-effect",this.shadowColor=C,this.shadowPasses=[],this.shadowMaps=[],this.dummyShadowMap=null,this.setProps(e)}setProps(e){this.ambientLight=null,this.directionalLights=[],this.pointLights=[];for(const t in e){const n=e[t];switch(n.type){case"ambient":this.ambientLight=n;break;case"directional":this.directionalLights.push(n);break;case"point":this.pointLights.push(n)}}this._applyDefaultLights(),this.shadow=this.directionalLights.some((e=>e.shadow)),this.props=e}preRender(e,t){let{layers:n,layerFilter:r,viewports:s,onViewportActive:a,views:l}=t;if(this.shadow){this.shadowMatrices=this._calculateMatrices(),0===this.shadowPasses.length&&this._createShadowPasses(e),this.programManager||(this.programManager=i.Z.getDefaultProgramManager(e),P&&this.programManager.addDefaultModule(P)),this.dummyShadowMap||(this.dummyShadowMap=new o.Z(e,{width:1,height:1}));for(let e=0;e<this.shadowPasses.length;e++){this.shadowPasses[e].render({layers:n,layerFilter:r,viewports:s,onViewportActive:a,views:l,moduleParameters:{shadowLightId:e,dummyShadowMap:this.dummyShadowMap,shadowMatrices:this.shadowMatrices}})}}}getModuleParameters(e){const t=this.shadow?{shadowMaps:this.shadowMaps,dummyShadowMap:this.dummyShadowMap,shadowColor:this.shadowColor,shadowMatrices:this.shadowMatrices}:{};return t.lightSources={ambientLight:this.ambientLight,directionalLights:this.directionalLights.map((t=>t.getProjectedLight({layer:e}))),pointLights:this.pointLights.map((t=>t.getProjectedLight({layer:e})))},t}cleanup(){for(const e of this.shadowPasses)e.delete();this.shadowPasses.length=0,this.shadowMaps.length=0,this.dummyShadowMap&&(this.dummyShadowMap.delete(),this.dummyShadowMap=null),this.shadow&&this.programManager&&(this.programManager.removeDefaultModule(P),this.programManager=null)}_calculateMatrices(){const e=[];for(const t of this.directionalLights){const n=(new a.Z).lookAt({eye:new l.Z(t.direction).negate()});e.push(n)}return e}_createShadowPasses(e){for(let t=0;t<this.directionalLights.length;t++){const n=new h(e);this.shadowPasses[t]=n,this.shadowMaps[t]=n.shadowMap}}_applyDefaultLights(){const{ambientLight:e,pointLights:t,directionalLights:n}=this;e||0!==t.length||0!==n.length||(this.ambientLight=new r.M(x),this.directionalLights.push(new s.O(k[0]),new s.O(k[1])))}}},52747:(e,t,n)=>{"use strict";n.d(t,{Z:()=>T});var i=n(19227),o=n(83757),r=n(80241);class s{constructor(e,t){this.opts=t,this.source=e}get value(){return this.source.value}getValue(){const e=this.source.getBuffer(),t=this.getAccessor();if(e)return[e,t];const{value:n}=this.source,{size:i}=t;let o=n;if(n&&n.length!==i){o=new Float32Array(i);const e=t.elementOffset||0;for(let t=0;t<i;++t)o[t]=n[e+t]}return o}getAccessor(){return{...this.source.getAccessor(),...this.opts}}}var a=n(67258),l=n(4563),c=n(89745);function d(e){return e.stride||e.size*e.bytesPerElement}function p(e,t){t.offset&&c.Z.removed("shaderAttribute.offset","vertexOffset, elementOffset")();const n=d(e),i=(void 0!==t.vertexOffset?t.vertexOffset:e.vertexOffset||0)*n+(t.elementOffset||0)*e.bytesPerElement+(e.offset||0);return{...t,offset:i,stride:n}}class u{constructor(e,t,n){this.gl=e,this.id=t.id||"",this.size=t.size||1;const r=t.logicalType||t.type,s=5130===r;let a,{defaultValue:l}=t;l=Number.isFinite(l)?[l]:l||new Array(this.size).fill(0),a=s?5126:!r&&t.isIndexed?e&&(0,i.U6)(e,o.h.ELEMENT_INDEX_UINT32)?5125:5123:r||5126;let c=function(e){switch(e){case 5126:return Float32Array;case 5130:return Float64Array;case 5123:case 33635:case 32819:case 32820:return Uint16Array;case 5125:return Uint32Array;case 5121:return Uint8ClampedArray;case 5120:return Int8Array;case 5122:return Int16Array;case 5124:return Int32Array;default:throw new Error("Unknown GL type")}}(r||a||5126);this.doublePrecision=s,s&&!1===t.fp64&&(c=Float32Array),this.value=null,this.settings={...t,defaultType:c,defaultValue:l,logicalType:r,type:a,size:this.size,bytesPerElement:c.BYTES_PER_ELEMENT},this.state={...n,externalBuffer:null,bufferAccessor:this.settings,allocatedValue:null,numInstances:0,bounds:null,constant:!1},this._buffer=null}get isConstant(){return this.state.constant}get buffer(){if(!this._buffer){const{isIndexed:e,type:t}=this.settings;this._buffer=new r.Z(this.gl,{id:this.id,target:e?34963:34962,accessor:{type:t}})}return this._buffer}get byteOffset(){const e=this.getAccessor();return e.vertexOffset?e.vertexOffset*d(e):0}get numInstances(){return this.state.numInstances}set numInstances(e){this.state.numInstances=e}delete(){this._buffer&&(this._buffer.delete(),this._buffer=null),a.Z.release(this.state.allocatedValue)}getShaderAttributes(e,t){if(this.doublePrecision){const n={},i=this.value instanceof Float64Array,o=function(e,t){const n=p(e,t);return{high:n,low:{...n,offset:n.offset+4*e.size}}}(this.getAccessor(),t||{});return n[e]=new s(this,o.high),n[e+"64Low"]=i?new s(this,o.low):new Float32Array(this.size),n}if(t){const n=p(this.getAccessor(),t);return{[e]:new s(this,n)}}return{[e]:this}}getBuffer(){return this.state.constant?null:this.state.externalBuffer||this._buffer}getValue(){return this.state.constant?this.value:[this.getBuffer(),this.getAccessor()]}getAccessor(){return this.state.bufferAccessor}getBounds(){if(this.state.bounds)return this.state.bounds;let e=null;if(this.state.constant&&this.value){const t=Array.from(this.value);e=[t,t]}else{const{value:t,numInstances:n,size:i}=this,o=n*i;if(t&&o&&t.length>=o){const n=new Array(i).fill(1/0),r=new Array(i).fill(-1/0);for(let e=0;e<o;)for(let o=0;o<i;o++){const i=t[e++];i<n[o]&&(n[o]=i),i>r[o]&&(r[o]=i)}e=[n,r]}}return this.state.bounds=e,e}setData(e){const{state:t}=this;let n;n=ArrayBuffer.isView(e)?{value:e}:e instanceof r.Z?{buffer:e}:e;const i={...this.settings,...n};if(t.bufferAccessor=i,t.bounds=null,n.constant){let e=n.value;e=this._normalizeValue(e,[],0),this.settings.normalized&&(e=this.normalizeConstant(e));if(!(!t.constant||!this._areValuesEqual(e,this.value)))return!1;t.externalBuffer=null,t.constant=!0,this.value=e}else if(n.buffer){const e=n.buffer;t.externalBuffer=e,t.constant=!1,this.value=n.value||null;const o=n.value instanceof Float64Array;i.type=n.type||e.accessor.type,i.bytesPerElement=e.accessor.BYTES_PER_ELEMENT*(o?2:1),i.stride=d(i)}else if(n.value){this._checkExternalBuffer(n);let e=n.value;t.externalBuffer=null,t.constant=!1,this.value=e,i.bytesPerElement=e.BYTES_PER_ELEMENT,i.stride=d(i);const{buffer:o,byteOffset:r}=this;this.doublePrecision&&e instanceof Float64Array&&(e=(0,l.TK)(e,i));const s=e.byteLength+r+2*i.stride;o.byteLength<s&&o.reallocate(s),o.setAccessor(null),o.subData({data:e,offset:r}),i.type=n.type||o.accessor.type}return!0}updateSubBuffer(e){void 0===e&&(e={}),this.state.bounds=null;const t=this.value,{startOffset:n=0,endOffset:i}=e;this.buffer.subData({data:this.doublePrecision&&t instanceof Float64Array?(0,l.TK)(t,{size:this.size,startIndex:n,endIndex:i}):t.subarray(n,i),offset:n*t.BYTES_PER_ELEMENT+this.byteOffset})}allocate(e,t){void 0===t&&(t=!1);const{state:n}=this,i=n.allocatedValue,o=a.Z.allocate(i,e+1,{size:this.size,type:this.settings.defaultType,copy:t});this.value=o;const{buffer:r,byteOffset:s}=this;return r.byteLength<o.byteLength+s&&(r.reallocate(o.byteLength+s),t&&i&&r.subData({data:i instanceof Float64Array?(0,l.TK)(i,this):i,offset:s})),n.allocatedValue=o,n.constant=!1,n.externalBuffer=null,n.bufferAccessor=this.settings,!0}_checkExternalBuffer(e){const{value:t}=e;if(!ArrayBuffer.isView(t))throw new Error("Attribute "+this.id+" value is not TypedArray");const n=this.settings.defaultType;let i=!1;if(this.doublePrecision&&(i=t.BYTES_PER_ELEMENT<4),i)throw new Error("Attribute "+this.id+" does not support "+t.constructor.name);t instanceof n||!this.settings.normalized||"normalized"in e||c.Z.warn("Attribute "+this.id+" is normalized")()}normalizeConstant(e){switch(this.settings.type){case 5120:return new Float32Array(e).map((e=>(e+128)/255*2-1));case 5122:return new Float32Array(e).map((e=>(e+32768)/65535*2-1));case 5121:return new Float32Array(e).map((e=>e/255));case 5123:return new Float32Array(e).map((e=>e/65535));default:return e}}_normalizeValue(e,t,n){const{defaultValue:i,size:o}=this.settings;if(Number.isFinite(e))return t[n]=e,t;if(!e)return t[n]=i[0],t;switch(o){case 4:t[n+3]=Number.isFinite(e[3])?e[3]:i[3];case 3:t[n+2]=Number.isFinite(e[2])?e[2]:i[2];case 2:t[n+1]=Number.isFinite(e[1])?e[1]:i[1];case 1:t[n+0]=Number.isFinite(e[0])?e[0]:i[0];break;default:let r=o;for(;--r>=0;)t[n+r]=Number.isFinite(e[r])?e[r]:i[r]}return t}_areValuesEqual(e,t){if(!e||!t)return!1;const{size:n}=this;for(let i=0;i<n;i++)if(e[i]!==t[i])return!1;return!0}}var h=n(13405),g=n(37944),f=n(32332);const m=[],y=[[0,1/0]];var v=n(98489);class _ extends u{constructor(e,t){super(e,t,{startIndices:null,lastExternalBuffer:null,binaryValue:null,binaryAccessor:null,needsUpdate:!0,needsRedraw:!1,updateRanges:y}),this.constant=!1,this.settings.update=t.update||(t.accessor?this._autoUpdater:void 0),Object.seal(this.settings),Object.seal(this.state),this._validateAttributeUpdaters()}get startIndices(){return this.state.startIndices}set startIndices(e){this.state.startIndices=e}needsUpdate(){return this.state.needsUpdate}needsRedraw(e){let{clearChangedFlags:t=!1}=void 0===e?{}:e;const n=this.state.needsRedraw;return this.state.needsRedraw=n&&!t,n}getUpdateTriggers(){const{accessor:e}=this.settings;return[this.id].concat("function"!=typeof e&&e||[])}supportsTransition(){return Boolean(this.settings.transition)}getTransitionSetting(e){if(!e||!this.supportsTransition())return null;const{accessor:t}=this.settings,n=this.settings.transition,i=Array.isArray(t)?e[t.find((t=>e[t]))]:e[t];return(0,v.M0)(i,n)}setNeedsUpdate(e,t){if(void 0===e&&(e=this.id),this.state.needsUpdate=this.state.needsUpdate||e,this.setNeedsRedraw(e),t){const{startRow:e=0,endRow:n=1/0}=t;this.state.updateRanges=function(e,t){if(e===y)return e;if(t[0]<0&&(t[0]=0),t[0]>=t[1])return e;const n=[],i=e.length;let o=0;for(let r=0;r<i;r++){const i=e[r];i[1]<t[0]?(n.push(i),o=r+1):i[0]>t[1]?n.push(i):t=[Math.min(i[0],t[0]),Math.max(i[1],t[1])]}return n.splice(o,0,t),n}(this.state.updateRanges,[e,n])}else this.state.updateRanges=y}clearNeedsUpdate(){this.state.needsUpdate=!1,this.state.updateRanges=m}setNeedsRedraw(e){void 0===e&&(e=this.id),this.state.needsRedraw=this.state.needsRedraw||e}allocate(e){const{state:t,settings:n}=this;return!n.noAlloc&&(!!n.update&&(super.allocate(e,t.updateRanges!==y),!0))}updateBuffer(e){let{numInstances:t,data:n,props:i,context:o}=e;if(!this.needsUpdate())return!1;const{state:{updateRanges:r},settings:{update:s,noAlloc:a}}=this;let l=!0;if(s){for(const[e,a]of r)s.call(o,this,{data:n,startRow:e,endRow:a,props:i,numInstances:t});if(this.value)if(this.constant||this.buffer.byteLength<this.value.byteLength+this.byteOffset)this.setData({value:this.value,constant:this.constant}),this.constant=!1;else for(const[e,n]of r){const i=Number.isFinite(e)?this.getVertexOffset(e):0,o=Number.isFinite(n)?this.getVertexOffset(n):a||!Number.isFinite(t)?this.value.length:t*this.size;super.updateSubBuffer({startOffset:i,endOffset:o})}else;this._checkAttributeArray()}else l=!1;return this.clearNeedsUpdate(),this.setNeedsRedraw(),l}setConstantValue(e){if(void 0===e||"function"==typeof e)return!1;return this.setData({constant:!0,value:e})&&this.setNeedsRedraw(),this.clearNeedsUpdate(),!0}setExternalBuffer(e){const{state:t}=this;return e?(this.clearNeedsUpdate(),t.lastExternalBuffer===e||(t.lastExternalBuffer=e,this.setNeedsRedraw(),this.setData(e)),!0):(t.lastExternalBuffer=null,!1)}setBinaryValue(e,t){void 0===t&&(t=null);const{state:n,settings:i}=this;if(!e)return n.binaryValue=null,n.binaryAccessor=null,!1;if(i.noAlloc)return!1;if(n.binaryValue===e)return this.clearNeedsUpdate(),!0;n.binaryValue=e,this.setNeedsRedraw();if(i.transform||t!==this.startIndices){ArrayBuffer.isView(e)&&(e={value:e});const o=e;(0,h.Z)(ArrayBuffer.isView(o.value),"invalid "+i.accessor);const r=Boolean(o.size)&&o.size!==this.size;return n.binaryAccessor=(0,g.jr)(o.value,{size:o.size||this.size,stride:o.stride,offset:o.offset,startIndices:t,nested:r}),!1}return this.clearNeedsUpdate(),this.setData(e),!0}getVertexOffset(e){const{startIndices:t}=this;return(t?e<t.length?t[e]:this.numInstances:e)*this.size}getShaderAttributes(){const e=this.settings.shaderAttributes||{[this.id]:null},t={};for(const n in e)Object.assign(t,super.getShaderAttributes(n,e[n]));return t}_autoUpdater(e,t){let{data:n,startRow:i,endRow:o,props:r,numInstances:s}=t;if(e.constant)return;const{settings:a,state:l,value:c,size:d,startIndices:p}=e,{accessor:u,transform:m}=a,y=l.binaryAccessor||("function"==typeof u?u:r[u]);(0,h.Z)("function"==typeof y,'accessor "'+u+'" is not a function');let v=e.getVertexOffset(i);const{iterable:_,objectInfo:w}=(0,g.jB)(n,i,o);for(const h of _){w.index++;let t=y(h,w);if(m&&(t=m.call(this,t)),p){const n=(w.index<p.length-1?p[w.index+1]:s)-p[w.index];if(t&&Array.isArray(t[0])){let n=v;for(const i of t)e._normalizeValue(i,c,n),n+=d}else t&&t.length>d?c.set(t,v):(e._normalizeValue(t,w.target,0),(0,f.k)({target:c,source:w.target,start:v,count:n}));v+=n*d}else e._normalizeValue(t,c,v),v+=d}}_validateAttributeUpdaters(){const{settings:e}=this;if(!(e.noAlloc||"function"==typeof e.update))throw new Error("Attribute "+this.id+" missing update or accessor")}_checkAttributeArray(){const{value:e}=this,t=Math.min(4,this.size);if(e&&e.length>=t){let n=!0;switch(t){case 4:n=n&&Number.isFinite(e[3]);case 3:n=n&&Number.isFinite(e[2]);case 2:n=n&&Number.isFinite(e[1]);case 1:n=n&&Number.isFinite(e[0]);break;default:n=!1}if(!n)throw new Error("Illegal attribute generated for "+this.id)}}}var w=n(14503),b=n(50031),P=n(62833);const x="\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nuniform float time;\nattribute ATTRIBUTE_TYPE aFrom;\nattribute ATTRIBUTE_TYPE aTo;\nvarying ATTRIBUTE_TYPE vCurrent;\n\nvoid main(void) {\n  vCurrent = mix(aFrom, aTo, time);\n  gl_Position = vec4(0.0);\n}\n";var k=n(88163),C=n(43970),S=n(79762);const N={interpolation:class{constructor(e){let{gl:t,attribute:n,timeline:i}=e;this.type="interpolation",this.gl=t,this.transition=new P.Z(i),this.attribute=n,this.attributeInTransition=new _(t,n.settings),this.currentStartIndices=n.startIndices,this.currentLength=0,this.transform=function(e,t){const n=(0,v.w)(t.size);return new b.Z(e,{vs:x,defines:{ATTRIBUTE_TYPE:n},varyings:["vCurrent"]})}(t,n);const o={byteLength:0,usage:35050};this.buffers=[new r.Z(t,o),new r.Z(t,o)]}get inProgress(){return this.transition.inProgress}start(e,t){if(e.duration<=0)return void this.transition.cancel();this.settings=e;const{gl:n,buffers:i,attribute:o}=this;(0,v.DY)(i);const r={numInstances:t,attribute:o,fromLength:this.currentLength,fromStartIndices:this.currentStartIndices,getData:e.enter};for(const s of i)(0,v.IV)({buffer:s,...r});this.currentStartIndices=o.startIndices,this.currentLength=(0,v.pi)(o,t),this.attributeInTransition.setData({buffer:i[1],value:o.value}),this.transition.start(e),this.transform.update({elementCount:Math.floor(this.currentLength/o.size),sourceBuffers:{aFrom:i[0],aTo:(0,v.AQ)(n,o)},feedbackBuffers:{vCurrent:i[1]}})}update(){const e=this.transition.update();if(e){const{duration:e,easing:t}=this.settings,{time:n}=this.transition;let i=n/e;t&&(i=t(i)),this.transform.run({uniforms:{time:i}})}return e}cancel(){this.transition.cancel(),this.transform.delete();for(const e of this.buffers)e.delete();this.buffers.length=0}},spring:class{constructor(e){let{gl:t,attribute:n,timeline:i}=e;this.type="spring",this.gl=t,this.type="spring",this.transition=new P.Z(i),this.attribute=n,this.attributeInTransition=new _(t,{...n.settings,normalized:!1}),this.currentStartIndices=n.startIndices,this.currentLength=0,this.texture=function(e){return new C.Z(e,{data:new Uint8Array(4),format:6408,type:5121,border:0,mipmaps:!1,dataFormat:6408,width:1,height:1})}(t),this.framebuffer=function(e,t){return new S.Z(e,{id:"spring-transition-is-transitioning-framebuffer",width:1,height:1,attachments:{36064:t}})}(t,this.texture),this.transform=function(e,t,n){const i=(0,v.w)(t.size);return new b.Z(e,{framebuffer:n,vs:"\n#define SHADER_NAME spring-transition-vertex-shader\n\n#define EPSILON 0.00001\n\nuniform float stiffness;\nuniform float damping;\nattribute ATTRIBUTE_TYPE aPrev;\nattribute ATTRIBUTE_TYPE aCur;\nattribute ATTRIBUTE_TYPE aTo;\nvarying ATTRIBUTE_TYPE vNext;\nvarying float vIsTransitioningFlag;\n\nATTRIBUTE_TYPE getNextValue(ATTRIBUTE_TYPE cur, ATTRIBUTE_TYPE prev, ATTRIBUTE_TYPE dest) {\n  ATTRIBUTE_TYPE velocity = cur - prev;\n  ATTRIBUTE_TYPE delta = dest - cur;\n  ATTRIBUTE_TYPE spring = delta * stiffness;\n  ATTRIBUTE_TYPE damper = velocity * -1.0 * damping;\n  return spring + damper + velocity + cur;\n}\n\nvoid main(void) {\n  bool isTransitioning = length(aCur - aPrev) > EPSILON || length(aTo - aCur) > EPSILON;\n  vIsTransitioningFlag = isTransitioning ? 1.0 : 0.0;\n\n  vNext = getNextValue(aCur, aPrev, aTo);\n  gl_Position = vec4(0, 0, 0, 1);\n  gl_PointSize = 100.0;\n}\n",fs:"\n#define SHADER_NAME spring-transition-is-transitioning-fragment-shader\n\nvarying float vIsTransitioningFlag;\n\nvoid main(void) {\n  if (vIsTransitioningFlag == 0.0) {\n    discard;\n  }\n  gl_FragColor = vec4(1.0);\n}",defines:{ATTRIBUTE_TYPE:i},varyings:["vNext"]})}(t,n,this.framebuffer);const o={byteLength:0,usage:35050};this.buffers=[new r.Z(t,o),new r.Z(t,o),new r.Z(t,o)]}get inProgress(){return this.transition.inProgress}start(e,t){const{gl:n,buffers:i,attribute:o}=this,r={numInstances:t,attribute:o,fromLength:this.currentLength,fromStartIndices:this.currentStartIndices,getData:e.enter};for(const s of i)(0,v.IV)({buffer:s,...r});this.settings=e,this.currentStartIndices=o.startIndices,this.currentLength=(0,v.pi)(o,t),this.attributeInTransition.setData({buffer:i[1],value:o.value}),this.transition.start({...e,duration:1/0}),this.transform.update({elementCount:Math.floor(this.currentLength/o.size),sourceBuffers:{aTo:(0,v.AQ)(n,o)}})}update(){const{buffers:e,transform:t,framebuffer:n,transition:i}=this;if(!i.update())return!1;const o=this.settings;t.update({sourceBuffers:{aPrev:e[0],aCur:e[1]},feedbackBuffers:{vNext:e[2]}}),t.run({framebuffer:n,discard:!1,clearRenderTarget:!0,uniforms:{stiffness:o.stiffness,damping:o.damping},parameters:{depthTest:!1,blend:!0,viewport:[0,0,1,1],blendFunc:[1,1],blendEquation:[32776,32776]}}),(0,v.DY)(e),this.attributeInTransition.setData({buffer:e[1],value:this.attribute.value});return(0,k.z6)(n)[0]>0||i.end(),!0}cancel(){this.transition.cancel(),this.transform.delete();for(const e of this.buffers)e.delete();this.buffers.length=0,this.texture.delete(),this.framebuffer.delete()}}};class M{constructor(e,t){let{id:n,timeline:i}=t;this.id=n,this.gl=e,this.timeline=i,this.transitions={},this.needsRedraw=!1,this.numInstances=1,this.isSupported=b.Z.isSupported(e)}finalize(){for(const e in this.transitions)this._removeTransition(e)}update(e){let{attributes:t,transitions:n,numInstances:i}=e;this.numInstances=i||1;for(const o in t){const e=t[o],i=e.getTransitionSetting(n);i&&this._updateAttribute(o,e,i)}for(const o in this.transitions){const e=t[o];e&&e.getTransitionSetting(n)||this._removeTransition(o)}}hasAttribute(e){const t=this.transitions[e];return t&&t.inProgress}getAttributes(){const e={};for(const t in this.transitions){const n=this.transitions[t];n.inProgress&&(e[t]=n.attributeInTransition)}return e}run(){if(!this.isSupported||0===this.numInstances)return!1;for(const t in this.transitions){this.transitions[t].update()&&(this.needsRedraw=!0)}const e=this.needsRedraw;return this.needsRedraw=!1,e}_removeTransition(e){this.transitions[e].cancel(),delete this.transitions[e]}_updateAttribute(e,t,n){const i=this.transitions[e];let o=!i||i.type!==n.type;if(o){if(!this.isSupported)return void c.Z.warn("WebGL2 not supported by this browser. Transition for "+e+" is disabled.")();i&&this._removeTransition(e);const r=N[n.type];r?this.transitions[e]=new r({attribute:t,timeline:this.timeline,gl:this.gl}):(c.Z.error("unsupported transition type '"+n.type+"'")(),o=!1)}(o||t.needsRedraw())&&(this.needsRedraw=!0,this.transitions[e].start(n,this.numInstances))}}const L="attributeManager.invalidate";class T{constructor(e,t){let{id:n="attribute-manager",stats:i,timeline:o}=void 0===t?{}:t;this.id=n,this.gl=e,this.attributes={},this.updateTriggers={},this.needsRedraw=!0,this.userData={},this.stats=i,this.attributeTransitionManager=new M(e,{id:n+"-transitions",timeline:o}),Object.seal(this)}finalize(){for(const e in this.attributes)this.attributes[e].delete();this.attributeTransitionManager.finalize()}getNeedsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});const t=this.needsRedraw;return this.needsRedraw=this.needsRedraw&&!e.clearRedrawFlags,t&&this.id}setNeedsRedraw(){this.needsRedraw=!0}add(e){this._add(e)}addInstanced(e){this._add(e,{instanced:1})}remove(e){for(const t of e)void 0!==this.attributes[t]&&(this.attributes[t].delete(),delete this.attributes[t])}invalidate(e,t){const n=this._invalidateTrigger(e,t);(0,w.Z)(L,this,e,n)}invalidateAll(e){for(const t in this.attributes)this.attributes[t].setNeedsUpdate(t,e);(0,w.Z)(L,this,"all")}update(e){let{data:t,numInstances:n,startIndices:i=null,transitions:o,props:r={},buffers:s={},context:a={}}=e,l=!1;(0,w.Z)("attributeManager.updateStart",this),this.stats&&this.stats.get("Update Attributes").timeStart();for(const d in this.attributes){const e=this.attributes[d],o=e.settings.accessor;e.startIndices=i,e.numInstances=n,r[d]&&c.Z.removed("props."+d,"data.attributes."+d)(),e.setExternalBuffer(s[d])||e.setBinaryValue("string"==typeof o?s[o]:void 0,t.startIndices)||"string"==typeof o&&!s[o]&&e.setConstantValue(r[o])||e.needsUpdate()&&(l=!0,this._updateAttribute({attribute:e,numInstances:n,data:t,props:r,context:a})),this.needsRedraw=this.needsRedraw||e.needsRedraw()}l&&(0,w.Z)("attributeManager.updateEnd",this,n),this.stats&&this.stats.get("Update Attributes").timeEnd(),this.attributeTransitionManager.update({attributes:this.attributes,numInstances:n,transitions:o})}updateTransition(){const{attributeTransitionManager:e}=this,t=e.run();return this.needsRedraw=this.needsRedraw||t,t}getAttributes(){return this.attributes}getChangedAttributes(e){void 0===e&&(e={clearChangedFlags:!1});const{attributes:t,attributeTransitionManager:n}=this,i={...n.getAttributes()};for(const o in t){const r=t[o];r.needsRedraw(e)&&!n.hasAttribute(o)&&(i[o]=r)}return i}getShaderAttributes(e,t){void 0===t&&(t={}),e||(e=this.getAttributes());const n={};for(const i in e)t[i]||Object.assign(n,e[i].getShaderAttributes());return n}_add(e,t){void 0===t&&(t={});for(const n in e){const i=e[n];this.attributes[n]=this._createAttribute(n,i,t)}this._mapUpdateTriggersToAttributes()}_createAttribute(e,t,n){const i={...t,id:e,size:(t.isIndexed?1:t.size)||1,divisor:n.instanced?1:t.divisor||0};return new _(this.gl,i)}_mapUpdateTriggersToAttributes(){const e={};for(const t in this.attributes){this.attributes[t].getUpdateTriggers().forEach((n=>{e[n]||(e[n]=[]),e[n].push(t)}))}this.updateTriggers=e}_invalidateTrigger(e,t){const{attributes:n,updateTriggers:i}=this,o=i[e];return o&&o.forEach((e=>{const i=n[e];i&&i.setNeedsUpdate(i.id,t)})),o}_updateAttribute(e){const{attribute:t,numInstances:n}=e;if((0,w.Z)("attribute.updateStart",t),t.constant)return void t.setConstantValue(t.value);t.allocate(n)&&(0,w.Z)("attribute.allocate",t,n);t.updateBuffer(e)&&(this.needsRedraw=!0,(0,w.Z)("attribute.updateEnd",t,n))}}},98489:(e,t,n)=>{"use strict";function i(e){const{source:t,target:n,start:i=0,size:o,getData:r}=e,s=e.end||n.length,a=t.length,l=s-i;if(a>l)return void n.set(t.subarray(0,l),i);if(n.set(t,i),!r)return;let c=a;for(;c<l;){const e=r(c,t);for(let t=0;t<o;t++)n[i+c]=e[t]||0,c++}}n.d(t,{DY:()=>l,pi:()=>c,w:()=>a,AQ:()=>s,M0:()=>r,IV:()=>d});const o={interpolation:{duration:0,easing:e=>e},spring:{stiffness:.05,damping:.5}};function r(e,t){if(!e)return null;Number.isFinite(e)&&(e={type:"interpolation",duration:e});const n=e.type||"interpolation";return{...o[n],...t,...e,type:n}}function s(e,t){const n=t.getBuffer();return n?[n,{divisor:0,size:t.size,normalized:t.settings.normalized}]:t.value}function a(e){switch(e){case 1:return"float";case 2:return"vec2";case 3:return"vec3";case 4:return"vec4";default:throw new Error('No defined attribute type for size "'+e+'"')}}function l(e){e.push(e.shift())}function c(e,t){const{doublePrecision:n,settings:i,value:o,size:r}=e,s=n&&o instanceof Float64Array?2:1;return(i.noAlloc?o.length:t*r)*s}function d(e){let{buffer:t,numInstances:n,attribute:o,fromLength:r,fromStartIndices:s,getData:a=(e=>e)}=e;const l=o.doublePrecision&&o.value instanceof Float64Array?2:1,d=o.size*l,p=o.byteOffset,u=o.startIndices,h=s&&u,g=c(o,n),f=o.isConstant;if(!h&&r>=g)return;const m=f?o.value:o.getBuffer().getData({srcByteOffset:p});if(o.settings.normalized&&!f){const e=a;a=(t,n)=>o.normalizeConstant(e(t,n))}const y=f?(e,t)=>a(m,t):(e,t)=>a(m.subarray(e,e+d),t),v=t.getData({length:r}),_=new Float32Array(g);!function(e){let{source:t,target:n,size:o,getData:r,sourceStartIndices:s,targetStartIndices:a}=e;if(!Array.isArray(a))return i({source:t,target:n,size:o,getData:r}),n;let l=0,c=0;const d=r&&((e,t)=>r(e+c,t)),p=Math.min(s.length,a.length);for(let u=1;u<p;u++){const e=s[u]*o,r=a[u]*o;i({source:t.subarray(l,e),target:n,start:c,end:r,size:o,getData:d}),l=e,c=r}c<n.length&&i({source:[],target:n,start:c,size:o,getData:d})}({source:v,target:_,sourceStartIndices:s,targetStartIndices:u,size:d,getData:y}),t.byteLength<_.byteLength+p&&t.reallocate(_.byteLength+p),t.subData({data:_,offset:p})}},19871:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var i=n(47251),o=n(14503),r=n(32332),s=n(65663);class a extends i.Z{get isComposite(){return!0}get isLoaded(){return super.isLoaded&&this.getSubLayers().every((e=>e.isLoaded))}getSubLayers(){return this.internalState&&this.internalState.subLayers||[]}initializeState(e){}setState(e){super.setState(e),this.setNeedsUpdate()}getPickingInfo(e){let{info:t}=e;const{object:n}=t;return n&&n.__source&&n.__source.parent&&n.__source.parent.id===this.id?(t.object=n.__source.object,t.index=n.__source.index,t):t}filterSubLayer(e){return!0}shouldRenderSubLayer(e,t){return t&&t.length}getSubLayerClass(e,t){const{_subLayerProps:n}=this.props;return n&&n[e]&&n[e].type||t}getSubLayerRow(e,t,n){return e.__source={parent:this,object:t,index:n},e}getSubLayerAccessor(e){if("function"==typeof e){const t={index:-1,data:this.props.data,target:[]};return(n,i)=>n&&n.__source?(t.index=n.__source.index,e(n.__source.object,t)):e(n,i)}return e}getSubLayerProps(e){var t;void 0===e&&(e={});const{opacity:n,pickable:i,visible:o,parameters:r,getPolygonOffset:a,highlightedObjectIndex:l,autoHighlight:c,highlightColor:d,coordinateSystem:p,coordinateOrigin:u,wrapLongitude:h,positionFormat:g,modelMatrix:f,extensions:m,fetch:y,operation:v,_subLayerProps:_}=this.props,w={id:"",updateTriggers:{},opacity:n,pickable:i,visible:o,parameters:r,getPolygonOffset:a,highlightedObjectIndex:l,autoHighlight:c,highlightColor:d,coordinateSystem:p,coordinateOrigin:u,wrapLongitude:h,positionFormat:g,modelMatrix:f,extensions:m,fetch:y,operation:v},b=_&&e.id&&_[e.id],P=b&&b.updateTriggers,x=e.id||"sublayer";if(b){const t=this.props[s.Wb],n=e.type?e.type._propTypes:{};for(const e in b){const i=n[e]||t[e];i&&"accessor"===i.type&&(b[e]=this.getSubLayerAccessor(b[e]))}}Object.assign(w,e,b),w.id=this.props.id+"-"+x,w.updateTriggers={all:null==(t=this.props.updateTriggers)?void 0:t.all,...e.updateTriggers,...P};for(const s of m){const e=s.getSubLayerProps.call(this,s);e&&Object.assign(w,e,{updateTriggers:Object.assign(w.updateTriggers,e.updateTriggers)})}return w}_updateAutoHighlight(e){for(const t of this.getSubLayers())t.updateAutoHighlight(e)}_getAttributeManager(){return null}_postUpdate(e,t){let n=this.internalState.subLayers;const i=!n||this.needsUpdate();if(i){const e=this.renderLayers();n=(0,r.x)(e,Boolean),this.internalState.subLayers=n}(0,o.Z)("compositeLayer.renderLayers",this,i,n);for(const o of n)o.parent=this}}a.layerName="CompositeLayer"},43631:(e,t,n)=>{"use strict";n.d(t,{Df:()=>o,FP:()=>a,iI:()=>s,zG:()=>r});var i=n(89745);const o={DEFAULT:-1,LNGLAT:1,METER_OFFSETS:2,LNGLAT_OFFSETS:3,CARTESIAN:0};Object.defineProperty(o,"IDENTITY",{get:()=>(i.Z.deprecated("COORDINATE_SYSTEM.IDENTITY","COORDINATE_SYSTEM.CARTESIAN")(),0)});const r={WEB_MERCATOR:1,GLOBE:2,WEB_MERCATOR_AUTO_OFFSET:4,IDENTITY:0},s={common:0,meters:1,pixels:2},a={click:{handler:"onClick"},panstart:{handler:"onDragStart"},panmove:{handler:"onDrag"},panend:{handler:"onDragEnd"}}},23148:(e,t,n)=>{"use strict";n.d(t,{Z:()=>Q});var i=n(26236),o=n(65663),r=n(89745),s=n(14503),a=n(32332),l=n(23881),c=n(96742);class d{constructor(e,t,n){this._loadCount=0,this._subscribers=new Set,this.id=e,this.context=n,this.setData(t)}subscribe(e){this._subscribers.add(e)}unsubscribe(e){this._subscribers.delete(e)}inUse(){return this._subscribers.size>0}delete(){}getData(){return this.isLoaded?this._error?Promise.reject(this._error):this._content:this._loader.then((()=>this.getData()))}setData(e,t){if(e===this._data&&!t)return;this._data=e;const n=++this._loadCount;let i=e;"string"==typeof e&&(i=(0,c.z)(e)),i instanceof Promise?(this.isLoaded=!1,this._loader=i.then((e=>{this._loadCount===n&&(this.isLoaded=!0,this._error=void 0,this._content=e)})).catch((e=>{this._loadCount===n&&(this.isLoaded=!0,this._error=e||!0)}))):(this.isLoaded=!0,this._error=void 0,this._content=e);for(const o of this._subscribers)o.onChange(this.getData())}}class p{constructor(e){let{gl:t,protocol:n}=e;this.protocol=n||"resource://",this._context={gl:t,resourceManager:this},this._resources={},this._consumers={},this._pruneRequest=null}contains(e){return!!e.startsWith(this.protocol)||e in this._resources}add(e){let{resourceId:t,data:n,forceUpdate:i=!1,persistent:o=!0}=e,r=this._resources[t];r?r.setData(n,i):(r=new d(t,n,this._context),this._resources[t]=r),r.persistent=o}remove(e){const t=this._resources[e];t&&(t.delete(),delete this._resources[e])}unsubscribe(e){let{consumerId:t}=e;const n=this._consumers[t];if(n){for(const e in n){const t=n[e],i=this._resources[t.resourceId];i&&i.unsubscribe(t)}delete this._consumers[t],this.prune()}}subscribe(e){let{resourceId:t,onChange:n,consumerId:i,requestId:o="default"}=e;const{_resources:r,protocol:s}=this;t.startsWith(s)&&(t=t.replace(s,""),r[t]||this.add({resourceId:t,data:null,persistent:!1}));const a=r[t];if(this._track(i,o,a,n),a)return a.getData()}prune(){this._pruneRequest||(this._pruneRequest=setTimeout((()=>this._prune()),0))}finalize(){for(const e in this._resources)this._resources[e].delete()}_track(e,t,n,i){const o=this._consumers,r=o[e]=o[e]||{},s=r[t]||{},a=s.resourceId&&this._resources[s.resourceId];a&&(a.unsubscribe(s),this.prune()),n&&(r[t]=s,s.onChange=i,s.resourceId=n.id,n.subscribe(s))}_prune(){this._pruneRequest=null;for(const e of Object.keys(this._resources)){const t=this._resources[e];t.persistent||t.inUse()||(t.delete(),delete this._resources[e])}}}var u=n(48332),h=n(74797);const g=[n(73782).Z],f=["vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)","vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)","vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)","fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)"];function m(e){const t=h.Z.getDefaultProgramManager(e);for(const n of g)t.addDefaultModule(n);for(const n of f)t.addShaderHook(n);return t}class y{constructor(e,t){let{deck:n,stats:o,viewport:r,timeline:a}=void 0===t?{}:t;this._lastRenderedLayers=[],this._needsRedraw=!1,this._needsUpdate=!1,this._nextLayers=null,this._debug=!1,this.activateViewport=e=>{(0,s.Z)("layerManager.activateViewport",this,e),e&&(this.context.viewport=e)},this.layers=[],this.resourceManager=new p({gl:e,protocol:"deck://"}),this.context={mousePosition:null,userData:{},layerManager:this,gl:e,deck:n,programManager:e&&m(e),stats:o||new l.Z({id:"deck.gl"}),viewport:r||new u.Z({id:"DEFAULT-INITIAL-VIEWPORT"}),timeline:a||new i.T,resourceManager:this.resourceManager,onError:void 0},Object.seal(this)}finalize(){this.resourceManager.finalize();for(const e of this.layers)this._finalizeLayer(e)}needsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});let t=this._needsRedraw;e.clearRedrawFlags&&(this._needsRedraw=!1);for(const n of this.layers){const i=n.getNeedsRedraw(e);t=t||i}return t}needsUpdate(){return this._nextLayers&&this._nextLayers!==this._lastRenderedLayers?"layers changed":this._needsUpdate}setNeedsRedraw(e){this._needsRedraw=this._needsRedraw||e}setNeedsUpdate(e){this._needsUpdate=this._needsUpdate||e}getLayers(e){let{layerIds:t}=void 0===e?{}:e;return t?this.layers.filter((e=>t.find((t=>0===e.id.indexOf(t))))):this.layers}setProps(e){"debug"in e&&(this._debug=e.debug),"userData"in e&&(this.context.userData=e.userData),"layers"in e&&(this._nextLayers=e.layers),"onError"in e&&(this.context.onError=e.onError)}setLayers(e,t){(0,s.Z)("layerManager.setLayers",this,t,e),this._lastRenderedLayers=e;const n=(0,a.x)(e,Boolean);for(const i of n)i.context=this.context;this._updateLayers(this.layers,n)}updateLayers(){const e=this.needsUpdate();e&&(this.setNeedsRedraw("updating layers: "+e),this.setLayers(this._nextLayers||this._lastRenderedLayers,e)),this._nextLayers=null}_handleError(e,t,n){n.raiseError(t,e+" of "+n)}_updateLayers(e,t){const n={};for(const s of e)n[s.id]?r.Z.warn("Multiple old layers with same id "+s.id)():n[s.id]=s;const i=[];this._updateSublayersRecursively(t,n,i),this._finalizeOldLayers(n);let o=!1;for(const r of i)if(r.hasUniformTransition()){o="Uniform transition in "+r;break}this._needsUpdate=o,this.layers=i}_updateSublayersRecursively(e,t,n){for(const o of e){o.context=this.context;const e=t[o.id];null===e&&r.Z.warn("Multiple new layers with same id "+o.id)(),t[o.id]=null;let s=null;try{this._debug&&e!==o&&o.validateProps(),e?(this._transferLayerState(e,o),this._updateLayer(o)):this._initializeLayer(o),n.push(o),s=o.isComposite?o.getSubLayers():null}catch(i){this._handleError("matching",i,o)}s&&this._updateSublayersRecursively(s,t,n)}}_finalizeOldLayers(e){for(const t in e){const n=e[t];n&&this._finalizeLayer(n)}}_initializeLayer(e){try{e._initialize(),e.lifecycle=o.dt.INITIALIZED}catch(t){this._handleError("initialization",t,e)}}_transferLayerState(e,t){t._transferState(e),t.lifecycle=o.dt.MATCHED,t!==e&&(e.lifecycle=o.dt.AWAITING_GC)}_updateLayer(e){try{e._update()}catch(t){this._handleError("update",t,e)}}_finalizeLayer(e){this._needsRedraw=this._needsRedraw||"finalized "+e,e.lifecycle=o.dt.AWAITING_FINALIZATION;try{e._finalize(),e.lifecycle=o.dt.FINALIZED}catch(t){this._handleError("finalization",t,e)}}}var v=n(77607);class _{constructor(e){this.views=[],this.width=100,this.height=100,this.viewState={},this.controllers={},this.timeline=e.timeline,this._viewports=[],this._viewportMap={},this._isUpdating=!1,this._needsRedraw="First render",this._needsUpdate="Initialize",this._eventManager=e.eventManager,this._eventCallbacks={onViewStateChange:e.onViewStateChange,onInteractionStateChange:e.onInteractionStateChange},Object.seal(this),this.setProps(e)}finalize(){for(const e in this.controllers){const t=this.controllers[e];t&&t.finalize()}this.controllers={}}needsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});const t=this._needsRedraw;return e.clearRedrawFlags&&(this._needsRedraw=!1),t}setNeedsUpdate(e){this._needsUpdate=this._needsUpdate||e,this._needsRedraw=this._needsRedraw||e}updateViewStates(){for(const e in this.controllers){const t=this.controllers[e];t&&t.updateTransition()}}getViewports(e){return e?this._viewports.filter((t=>t.containsPixel(e))):this._viewports}getViews(){const e={};return this.views.forEach((t=>{e[t.id]=t})),e}getView(e){return this.views.find((t=>t.id===e))}getViewState(e){const t="string"==typeof e?this.getView(e):e,n=t&&this.viewState[t.getViewStateId()]||this.viewState;return t?t.filterViewState(n):n}getViewport(e){return this._viewportMap[e]}unproject(e,t){const n=this.getViewports(),i={x:e[0],y:e[1]};for(let o=n.length-1;o>=0;--o){const r=n[o];if(r.containsPixel(i)){const n=e.slice();return n[0]-=r.x,n[1]-=r.y,r.unproject(n,t)}}return null}setProps(e){e.views&&this._setViews(e.views),e.viewState&&this._setViewState(e.viewState),("width"in e||"height"in e)&&this._setSize(e.width,e.height),this._isUpdating||this._update()}_update(){this._isUpdating=!0,this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports()),this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports()),this._isUpdating=!1}_setSize(e,t){e===this.width&&t===this.height||(this.width=e,this.height=t,this.setNeedsUpdate("Size changed"))}_setViews(e){e=(0,a.x)(e,Boolean);this._diffViews(e,this.views)&&this.setNeedsUpdate("views changed"),this.views=e}_setViewState(e){if(e){!(0,v.v)(e,this.viewState,1)&&this.setNeedsUpdate("viewState changed"),this.viewState=e}else r.Z.warn("missing `viewState` or `initialViewState`")()}_onViewStateChange(e,t){this._eventCallbacks.onViewStateChange&&this._eventCallbacks.onViewStateChange({...t,viewId:e})}_createController(e,t){return new(0,t.type)({timeline:this.timeline,eventManager:this._eventManager,onViewStateChange:this._onViewStateChange.bind(this,t.id),onStateChange:this._eventCallbacks.onInteractionStateChange,makeViewport:t=>{var n;return null==(n=this.getView(e.id))?void 0:n.makeViewport({viewState:t,width:this.width,height:this.height})}})}_updateController(e,t,n,i){const o=e.controller;if(o){const r={...t,...o,id:e.id,x:n.x,y:n.y,width:n.width,height:n.height};return i||(i=this._createController(e,r)),i&&i.setProps(r),i}return null}_rebuildViewports(){const{views:e}=this,t=this.controllers;this._viewports=[],this.controllers={};let n=!1;for(let i=e.length;i--;){const o=e[i],r=this.getViewState(o),s=o.makeViewport({viewState:r,width:this.width,height:this.height});let a=t[o.id];const l=Boolean(o.controller);l&&!a&&(n=!0),!n&&l||!a||(a.finalize(),a=null),this.controllers[o.id]=this._updateController(o,r,s,a),this._viewports.unshift(s)}for(const i in t){const e=t[i];e&&!this.controllers[i]&&e.finalize()}this._buildViewportMap()}_buildViewportMap(){this._viewportMap={},this._viewports.forEach((e=>{e.id&&(this._viewportMap[e.id]=this._viewportMap[e.id]||e)}))}_diffViews(e,t){return e.length!==t.length||e.some(((n,i)=>!e[i].equals(t[i])))}}var w=n(6362),b=n(6192);const P=new b.Z;class x{constructor(){this._resolvedEffects=[],this._defaultEffects=[],this.effects=[],this._needsRedraw="Initial render",this._setEffects([])}addDefaultEffect(e){const t=this._defaultEffects;if(!t.find((t=>t.id===e.id))){const n=t.findIndex((t=>{return n=e,(null!=(i=t.order)?i:1/0)-(null!=(o=n.order)?o:1/0)>0;var n,i,o}));n<0?t.push(e):t.splice(n,0,e),this._setEffects(this.effects)}}setProps(e){"effects"in e&&(e.effects.length===this.effects.length&&(0,v.v)(e.effects,this.effects,1)||this._setEffects(e.effects))}needsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});const t=this._needsRedraw;return e.clearRedrawFlags&&(this._needsRedraw=!1),t}getEffects(){return this._resolvedEffects}_setEffects(e){const t={};for(const i of this.effects)t[i.id]=i;const n=[];for(const i of e){const e=t[i.id];e&&e!==i?e.setProps?(e.setProps(i.props),n.push(e)):(e.cleanup(),n.push(i)):n.push(i),delete t[i.id]}for(const i in t)t[i].cleanup();this.effects=n,this._resolvedEffects=n.concat(this._defaultEffects),e.some((e=>e instanceof b.Z))||this._resolvedEffects.push(P),this._needsRedraw="effects changed"}finalize(){for(const e of this._resolvedEffects)e.cleanup();this.effects.length=0,this._resolvedEffects.length=0,this._defaultEffects.length=0}}var k=n(5259);class C extends k.Z{shouldDrawLayer(e){const{operation:t}=e.props;return t.includes("draw")||t.includes("terrain")}}var S=n(87264),N=n(79762);class M{constructor(e){this.gl=e,this.layerFilter=null,this.drawPickingColors=!1,this.drawLayersPass=new C(e),this.pickLayersPass=new S.Z(e),this.renderCount=0,this._needsRedraw="Initial render",this.renderBuffers=[],this.lastPostProcessEffect=null}setProps(e){this.layerFilter!==e.layerFilter&&(this.layerFilter=e.layerFilter,this._needsRedraw="layerFilter changed"),this.drawPickingColors!==e.drawPickingColors&&(this.drawPickingColors=e.drawPickingColors,this._needsRedraw="drawPickingColors changed")}renderLayers(e){const t=this.drawPickingColors?this.pickLayersPass:this.drawLayersPass,n={layerFilter:this.layerFilter,isPicking:this.drawPickingColors,...e,target:e.target||N.Z.getDefaultFramebuffer(this.gl)};n.effects&&this._preRender(n.effects,n);const i=this.lastPostProcessEffect?this.renderBuffers[0]:n.target,o=t.render({...n,target:i});n.effects&&this._postRender(n.effects,n),this.renderCount++,(0,s.Z)("deckRenderer.renderLayers",this,o,e)}needsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});const t=this._needsRedraw;return e.clearRedrawFlags&&(this._needsRedraw=!1),t}finalize(){const{renderBuffers:e}=this;for(const t of e)t.delete();e.length=0}_preRender(e,t){this.lastPostProcessEffect=null,t.preRenderStats=t.preRenderStats||{};for(const n of e)t.preRenderStats[n.id]=n.preRender(this.gl,t),n.postRender&&(this.lastPostProcessEffect=n.id);this.lastPostProcessEffect&&this._resizeRenderBuffers()}_resizeRenderBuffers(){const{renderBuffers:e}=this;0===e.length&&e.push(new N.Z(this.gl),new N.Z(this.gl));for(const t of e)t.resize()}_postRender(e,t){const{renderBuffers:n}=this,i={...t,inputBuffer:n[0],swapBuffer:n[1],target:null};for(const o of e)if(o.postRender){if(o.id===this.lastPostProcessEffect){i.target=t.target,o.postRender(this.gl,i);break}const e=o.postRender(this.gl,i);i.inputBuffer=e,i.swapBuffer=e===n[0]?n[1]:n[0]}}}var L=n(43970),T=n(7092),E=n(88163);const A={pickedColor:null,pickedObjectIndex:-1};function I(e){let{pickedColors:t,decodePickingColor:n,deviceX:i,deviceY:o,deviceRadius:s,deviceRect:a}=e;const{x:l,y:c,width:d,height:p}=a;let u=s*s,h=-1,g=0;for(let r=0;r<p;r++){const e=r+c-o,n=e*e;if(n>u)g+=4*d;else for(let o=0;o<d;o++){if(t[g+3]-1>=0){const e=o+l-i,t=e*e+n;t<=u&&(u=t,h=g)}g+=4}}if(h>=0){const e=t.slice(h,h+4),i=n(e);if(i){const t=Math.floor(h/4/d),n=h/4-t*d;return{...i,pickedColor:e,pickedX:l+n,pickedY:c+t}}r.Z.error("Picked non-existent layer. Is picking buffer corrupt?")()}return A}function O(e){let t,{pickInfo:n,viewports:i,pixelRatio:o,x:r,y:s,z:a}=e,l=i[0];if(i.length>1&&(l=function(e,t){for(let n=e.length-1;n>=0;n--){const i=e[n];if(i.containsPixel(t))return i}return e[0]}((null==n?void 0:n.pickedViewports)||i,{x:r,y:s})),l){const e=[r-l.x,s-l.y];void 0!==a&&(e[2]=a),t=l.unproject(e)}return{color:null,layer:null,viewport:l,index:-1,picked:!1,x:r,y:s,pixel:[r,s],coordinate:t,devicePixel:n&&"pickedX"in n?[n.pickedX,n.pickedY]:void 0,pixelRatio:o}}function R(e){const{pickInfo:t,lastPickedInfo:n,mode:i,layers:o}=e,{pickedColor:r,pickedLayer:s,pickedObjectIndex:a}=t,l=s?[s]:[];if("hover"===i){const e=n.index,t=n.layerId,i=s?s.props.id:null;if(i!==t||a!==e){if(i!==t){const e=o.find((e=>e.props.id===t));e&&l.unshift(e)}n.layerId=i,n.index=a,n.info=null}}const c=O(e),d=new Map;return d.set(null,c),l.forEach((e=>{let t={...c};e===s&&(t.color=r,t.index=a,t.picked=!0),t=z({layer:e,info:t,mode:i});const o=t.layer;e===s&&"hover"===i&&(n.info=t),d.set(o.id,t),"hover"===i&&o.updateAutoHighlight(t)})),d}function z(e){let{layer:t,info:n,mode:i}=e;for(;t&&n;){const e=n.layer||null;n.sourceLayer=e,n.layer=t,n=t.getPickingInfo({info:n,mode:i,sourceLayer:e}),t=t.parent}return n}class j{constructor(e){this._pickable=!0,this.gl=e,this.pickLayersPass=new S.Z(e),this.lastPickedInfo={index:-1,layerId:null,info:null}}setProps(e){"layerFilter"in e&&(this.layerFilter=e.layerFilter),"_pickable"in e&&(this._pickable=e._pickable)}finalize(){this.pickingFBO&&this.pickingFBO.delete(),this.depthFBO&&(this.depthFBO.color.delete(),this.depthFBO.delete())}pickObject(e){return this._pickClosestObject(e)}pickObjects(e){return this._pickVisibleObjects(e)}getLastPickedObject(e,t){let{x:n,y:i,layers:o,viewports:r}=e;void 0===t&&(t=this.lastPickedInfo.info);const s=t&&t.layer&&t.layer.id,a=t&&t.viewport&&t.viewport.id,l=s?o.find((e=>e.id===s)):null,c=a&&r.find((e=>e.id===a))||r[0],d=c&&c.unproject([n-c.x,i-c.y]),p={x:n,y:i,viewport:c,coordinate:d,layer:l};return{...t,...p}}_resizeBuffer(){var e,t;const{gl:n}=this;if(!this.pickingFBO&&(this.pickingFBO=new N.Z(n),N.Z.isSupported(n,{colorBufferFloat:!0}))){const e=new N.Z(n);e.attach({36064:new L.Z(n,{format:(0,T.D0)(n)?34836:6408,type:5126})}),this.depthFBO=e}null==(e=this.pickingFBO)||e.resize({width:n.canvas.width,height:n.canvas.height}),null==(t=this.depthFBO)||t.resize({width:n.canvas.width,height:n.canvas.height})}_getPickable(e){if(!1===this._pickable)return null;const t=e.filter((e=>this.pickLayersPass.shouldDrawLayer(e)&&!e.isComposite));return t.length?t:null}_pickClosestObject(e){let{layers:t,views:n,viewports:i,x:o,y:r,radius:s=0,depth:a=1,mode:l="query",unproject3D:c,onViewportActive:d,effects:p}=e;const u=this._getPickable(t),h=(0,T.w)(this.gl);if(!u)return{result:[],emptyInfo:O({viewports:i,x:o,y:r,pixelRatio:h})};this._resizeBuffer();const g=(0,T.JY)(this.gl,[o,r],!0),f=[g.x+Math.floor(g.width/2),g.y+Math.floor(g.height/2)],m=Math.round(s*h),{width:y,height:v}=this.pickingFBO,_=this._getPickingRect({deviceX:f[0],deviceY:f[1],deviceRadius:m,deviceWidth:y,deviceHeight:v}),w={x:o-s,y:r-s,width:2*s+1,height:2*s+1};let b;const P=[],x=new Set;for(let k=0;k<a;k++){let e,t;if(_){e=I({...this._drawAndSample({layers:u,views:n,viewports:i,onViewportActive:d,deviceRect:_,cullRect:w,effects:p,pass:"picking:"+l}),deviceX:f[0],deviceY:f[1],deviceRadius:m,deviceRect:_})}else e={pickedColor:null,pickedObjectIndex:-1};if(e.pickedLayer&&c&&this.depthFBO){const{pickedColors:o}=this._drawAndSample({layers:[e.pickedLayer],views:n,viewports:i,onViewportActive:d,deviceRect:{x:e.pickedX,y:e.pickedY,width:1,height:1},cullRect:w,effects:p,pass:"picking:"+l+":z"},!0);o[3]&&(t=o[0])}e.pickedLayer&&k+1<a&&(x.add(e.pickedLayer),e.pickedLayer.disablePickingIndex(e.pickedObjectIndex)),b=R({pickInfo:e,lastPickedInfo:this.lastPickedInfo,mode:l,layers:u,viewports:i,x:o,y:r,z:t,pixelRatio:h});for(const n of b.values())n.layer&&P.push(n);if(!e.pickedColor)break}for(const k of x)k.restorePickingColors();return{result:P,emptyInfo:b.get(null)}}_pickVisibleObjects(e){let{layers:t,views:n,viewports:i,x:o,y:s,width:a=1,height:l=1,mode:c="query",maxObjects:d=null,onViewportActive:p,effects:u}=e;const h=this._getPickable(t);if(!h)return[];this._resizeBuffer();const g=(0,T.w)(this.gl),f=(0,T.JY)(this.gl,[o,s],!0),m=f.x,y=f.y+f.height,v=(0,T.JY)(this.gl,[o+a,s+l],!0),_=v.x+v.width,w=v.y,b={x:m,y:w,width:_-m,height:y-w},P=function(e){let{pickedColors:t,decodePickingColor:n}=e;const i=new Map;if(t)for(let o=0;o<t.length;o+=4)if(t[o+3]-1>=0){const e=t.slice(o,o+4),s=e.join(",");if(!i.has(s)){const t=n(e);t?i.set(s,{...t,color:e}):r.Z.error("Picked non-existent layer. Is picking buffer corrupt?")()}}return Array.from(i.values())}(this._drawAndSample({layers:h,views:n,viewports:i,onViewportActive:p,deviceRect:b,cullRect:{x:o,y:s,width:a,height:l},effects:u,pass:"picking:"+c})),x=new Map,k=Number.isFinite(d);for(let r=0;r<P.length&&!(k&&d&&x.size>=d);r++){const e=P[r];let t={color:e.pickedColor,layer:null,index:e.pickedObjectIndex,picked:!0,x:o,y:s,pixelRatio:g};t=z({layer:e.pickedLayer,info:t,mode:c}),x.has(t.object)||x.set(t.object,t)}return Array.from(x.values())}_drawAndSample(e,t){let{layers:n,views:i,viewports:o,onViewportActive:r,deviceRect:s,cullRect:a,effects:l,pass:c}=e;void 0===t&&(t=!1);const d=t?this.depthFBO:this.pickingFBO,p={layers:n,layerFilter:this.layerFilter,views:i,viewports:o,onViewportActive:r,pickingFBO:d,deviceRect:s,cullRect:a,effects:l,pass:c,pickZ:t,preRenderStats:{}};for(const v of l)v.useInPicking&&(p.preRenderStats[v.id]=v.preRender(this.gl,p));const{decodePickingColor:u}=this.pickLayersPass.render(p),{x:h,y:g,width:f,height:m}=s,y=new(t?Float32Array:Uint8Array)(f*m*4);return(0,E.z6)(d,{sourceX:h,sourceY:g,sourceWidth:f,sourceHeight:m,target:y}),{pickedColors:y,decodePickingColor:u}}_getPickingRect(e){let{deviceX:t,deviceY:n,deviceRadius:i,deviceWidth:o,deviceHeight:r}=e;const s=Math.max(0,t-i),a=Math.max(0,n-i),l=Math.min(o,t+i+1)-s,c=Math.min(r,n+i+1)-a;return l<=0||c<=0?null:{x:s,y:a,width:l,height:c}}}const F={zIndex:"1",position:"absolute",pointerEvents:"none",color:"#a0a7b4",backgroundColor:"#29323c",padding:"10px",top:"0",left:"0",display:"none"};class D{constructor(e){this.el=null,this.isVisible=!1;const t=e.parentElement;t&&(this.el=document.createElement("div"),this.el.className="deck-tooltip",Object.assign(this.el.style,F),t.appendChild(this.el))}setTooltip(e,t,n){const i=this.el;if(i){if("string"==typeof e)i.innerText=e;else{if(!e)return this.isVisible=!1,void(i.style.display="none");e.text&&(i.innerText=e.text),e.html&&(i.innerHTML=e.html),e.className&&(i.className=e.className),Object.assign(i.style,e.style)}this.isVisible=!0,i.style.display="block",i.style.transform="translate("+t+"px, "+n+"px)"}}remove(){this.el&&(this.el.remove(),this.el=null)}}var U=n(67258),Z=n(28119),V=n(17074);const B={id:"JSON",name:"JSON",module:"",version:"",options:{},extensions:["json","geojson"],mimeTypes:["application/json","application/geo+json"],testText:function(e){const t=e[0],n=e[e.length-1];return"{"===t&&"}"===n||"["===t&&"]"===n},parseTextSync:JSON.parse};const W=function(){const e="0.0.0",t=globalThis.deck&&globalThis.deck.VERSION;if(t&&t!==e)throw new Error("deck.gl - multiple versions detected: "+t+" vs "+e);return t||(r.Z.log(1,"deck.gl "+e)(),globalThis.deck={...globalThis.deck,VERSION:e,version:e,log:r.Z,_registerLoggers:s.z},(0,Z.fh)([B,[V.S,{imagebitmap:{premultiplyAlpha:"none"}}]])),e}();var G=n(9749),H=n(28775),K=n(65259),q=n(10437),Y=n(13405),J=n(43631);function X(){}const $={id:"",width:"100%",height:"100%",style:null,viewState:null,initialViewState:null,pickingRadius:0,layerFilter:null,glOptions:{},parameters:{},parent:null,gl:null,canvas:null,layers:[],effects:[],views:null,controller:null,useDevicePixels:!0,touchAction:"none",eventRecognizerOptions:{},_framebuffer:null,_animate:!1,_pickable:!0,_typedArrayManagerProps:{},_customRender:null,onWebGLInitialized:X,onResize:X,onViewStateChange:X,onInteractionStateChange:X,onBeforeRender:X,onAfterRender:X,onLoad:X,onError:e=>r.Z.error(e.message)(),onHover:null,onClick:null,onDragStart:null,onDrag:null,onDragEnd:null,_onMetrics:null,getCursor:e=>{let{isDragging:t}=e;return t?"grabbing":"grab"},getTooltip:null,debug:!1,drawPickingColors:!1};class Q{constructor(e){this.width=0,this.height=0,this.userData={},this.canvas=null,this.viewManager=null,this.layerManager=null,this.effectManager=null,this.deckRenderer=null,this.deckPicker=null,this.eventManager=null,this.tooltip=null,this._lastPointerDownInfo=null,this._onPointerMove=e=>{const{_pickRequest:t}=this;if("pointerleave"===e.type)t.x=-1,t.y=-1,t.radius=0;else{if(e.leftButton||e.rightButton)return;{const n=e.offsetCenter;if(!n)return;t.x=n.x,t.y=n.y,t.radius=this.props.pickingRadius}}this.layerManager&&(this.layerManager.context.mousePosition={x:t.x,y:t.y}),t.event=e},this._onEvent=e=>{const t=J.FP[e.type],n=e.offsetCenter;if(!t||!n||!this.layerManager)return;const i=this.layerManager.getLayers(),o=this.deckPicker.getLastPickedObject({x:n.x,y:n.y,layers:i,viewports:this.getViewports(n)},this._lastPointerDownInfo),{layer:r}=o,s=r&&(r[t.handler]||r.props[t.handler]),a=this.props[t.handler];let l=!1;s&&(l=s.call(r,o,e)),!l&&a&&a(o,e)},this._onPointerDown=e=>{const t=e.offsetCenter,n=this._pick("pickObject","pickObject Time",{x:t.x,y:t.y,radius:this.props.pickingRadius});this._lastPointerDownInfo=n.result[0]||n.emptyInfo},this.props={...$,...e},e=this.props,this._needsRedraw="Initial render",this._pickRequest={mode:"hover",x:-1,y:-1,radius:0,event:null},this.cursorState={isHovering:!1,isDragging:!1},e.viewState&&e.initialViewState&&r.Z.warn("View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.")(),"IE"===(0,G.Z)()&&r.Z.warn("IE 11 is not supported")(),this.viewState=e.initialViewState,e.gl||"undefined"!=typeof document&&(this.canvas=this._createCanvas(e)),this.animationLoop=this._createAnimationLoop(e),this.stats=new l.Z({id:"deck.gl"}),this.metrics={fps:0,setPropsTime:0,updateAttributesTime:0,framesRedrawn:0,pickTime:0,pickCount:0,gpuTime:0,gpuTimePerFrame:0,cpuTime:0,cpuTimePerFrame:0,bufferMemory:0,textureMemory:0,renderbufferMemory:0,gpuMemory:0},this._metricsCounter=0,this.setProps(e),e._typedArrayManagerProps&&U.Z.setOptions(e._typedArrayManagerProps),this.animationLoop.start()}finalize(){var e,t,n,i,o,r,s,a;(this.animationLoop.stop(),this.animationLoop=null,this._lastPointerDownInfo=null,null==(e=this.layerManager)||e.finalize(),this.layerManager=null,null==(t=this.viewManager)||t.finalize(),this.viewManager=null,null==(n=this.effectManager)||n.finalize(),this.effectManager=null,null==(i=this.deckRenderer)||i.finalize(),this.deckRenderer=null,null==(o=this.deckPicker)||o.finalize(),this.deckPicker=null,null==(r=this.eventManager)||r.destroy(),this.eventManager=null,null==(s=this.tooltip)||s.remove(),this.tooltip=null,this.props.canvas||this.props.gl||!this.canvas)||(null==(a=this.canvas.parentElement)||a.removeChild(this.canvas),this.canvas=null)}setProps(e){this.stats.get("setProps Time").timeStart(),"onLayerHover"in e&&r.Z.removed("onLayerHover","onHover")(),"onLayerClick"in e&&r.Z.removed("onLayerClick","onClick")(),e.initialViewState&&!(0,v.v)(this.props.initialViewState,e.initialViewState,1)&&(this.viewState=e.initialViewState),Object.assign(this.props,e),this._setCanvasSize(this.props);const t=Object.create(this.props);Object.assign(t,{views:this._getViews(),width:this.width,height:this.height,viewState:this._getViewState()}),this.animationLoop.setProps(t),this.layerManager&&(this.viewManager.setProps(t),this.layerManager.activateViewport(this.getViewports()[0]),this.layerManager.setProps(t),this.effectManager.setProps(t),this.deckRenderer.setProps(t),this.deckPicker.setProps(t)),this.stats.get("setProps Time").timeEnd()}needsRedraw(e){if(void 0===e&&(e={clearRedrawFlags:!1}),!this.layerManager)return!1;if(this.props._animate)return"Deck._animate";let t=this._needsRedraw;e.clearRedrawFlags&&(this._needsRedraw=!1);const n=this.viewManager.needsRedraw(e),i=this.layerManager.needsRedraw(e),o=this.effectManager.needsRedraw(e),r=this.deckRenderer.needsRedraw(e);return t=t||n||i||o||r,t}redraw(e){if(!this.layerManager)return;let t=this.needsRedraw({clearRedrawFlags:!0});t=e||t,t&&(this.stats.get("Redraw Count").incrementCount(),this.props._customRender?this.props._customRender(t):this._drawLayers(t))}get isInitialized(){return null!==this.viewManager}getViews(){return(0,Y.Z)(this.viewManager),this.viewManager.views}getViewports(e){return(0,Y.Z)(this.viewManager),this.viewManager.getViewports(e)}pickObject(e){const t=this._pick("pickObject","pickObject Time",e).result;return t.length?t[0]:null}pickMultipleObjects(e){return e.depth=e.depth||10,this._pick("pickObject","pickMultipleObjects Time",e).result}pickObjects(e){return this._pick("pickObjects","pickObjects Time",e)}_addResources(e,t){void 0===t&&(t=!1);for(const n in e)this.layerManager.resourceManager.add({resourceId:n,data:e[n],forceUpdate:t})}_removeResources(e){for(const t of e)this.layerManager.resourceManager.remove(t)}_addDefaultEffect(e){this.effectManager.addDefaultEffect(e)}_pick(e,t,n){(0,Y.Z)(this.deckPicker);const{stats:i}=this;i.get("Pick Count").incrementCount(),i.get(t).timeStart();const o=this.deckPicker[e]({layers:this.layerManager.getLayers(n),views:this.viewManager.getViews(),viewports:this.getViewports(n),onViewportActive:this.layerManager.activateViewport,effects:this.effectManager.getEffects(),...n});return i.get(t).timeEnd(),o}_createCanvas(e){let t=e.canvas;if("string"==typeof t&&(t=document.getElementById(t),(0,Y.Z)(t)),!t){t=document.createElement("canvas"),t.id=e.id||"deckgl-overlay";(e.parent||document.body).appendChild(t)}return Object.assign(t.style,e.style),t}_setCanvasSize(e){if(!this.canvas)return;const{width:t,height:n}=e;if(t||0===t){const e=Number.isFinite(t)?t+"px":t;this.canvas.style.width=e}if(n||0===n){var i;const t=Number.isFinite(n)?n+"px":n;this.canvas.style.position=(null==(i=e.style)?void 0:i.position)||"absolute",this.canvas.style.height=t}}_updateCanvasSize(){const{canvas:e}=this;if(!e)return;const t=e.clientWidth||e.width,n=e.clientHeight||e.height;var i;t===this.width&&n===this.height||(this.width=t,this.height=n,null==(i=this.viewManager)||i.setProps({width:t,height:n}),this.props.onResize({width:t,height:n}))}_createAnimationLoop(e){const{width:t,height:n,gl:i,glOptions:o,debug:r,onError:s,onBeforeRender:a,onAfterRender:l,useDevicePixels:c}=e;return new H.Z({width:t,height:n,useDevicePixels:c,autoResizeViewport:!1,gl:i,onCreateContext:e=>(0,T.s9)({...o,...e,canvas:this.canvas,debug:r,onContextLost:()=>this._onContextLost()}),onInitialize:e=>this._setGLContext(e.gl),onRender:this._onRenderFrame.bind(this),onBeforeRender:a,onAfterRender:l,onError:s})}_getViewState(){return this.props.viewState||this.viewState}_getViews(){let e=this.props.views||[new w.Z({id:"default-view"})];return e=Array.isArray(e)?e:[e],e.length&&this.props.controller&&(e[0].props.controller=this.props.controller),e}_onContextLost(){const{onError:e}=this.props;this.animationLoop&&e&&e(new Error("WebGL context is lost"))}_pickAndCallback(){const{_pickRequest:e}=this;if(e.event){const{result:n,emptyInfo:i}=this._pick("pickObject","pickObject Time",e);this.cursorState.isHovering=n.length>0;let o=i,r=!1;for(const s of n){var t;o=s,r=(null==(t=s.layer)?void 0:t.onHover(s,e.event))||r}if(!r&&this.props.onHover&&this.props.onHover(o,e.event),this.props.getTooltip&&this.tooltip){const e=this.props.getTooltip(o);this.tooltip.setTooltip(e,o.x,o.y)}e.event=null}}_updateCursor(){const e=this.props.parent||this.canvas;e&&(e.style.cursor=this.props.getCursor(this.cursorState))}_setGLContext(e){if(this.layerManager)return;this.canvas||(this.canvas=e.canvas,(0,T.yW)(e,{enable:!0,copyState:!0})),this.tooltip=new D(this.canvas),(0,T.dR)(e,{blend:!0,blendFunc:[770,771,1,771],polygonOffsetFill:!0,depthTest:!0,depthFunc:515}),this.props.onWebGLInitialized(e);const t=new i.T;t.play(),this.animationLoop.attachTimeline(t),this.eventManager=new q.Q(this.props.parent||e.canvas,{touchAction:this.props.touchAction,recognizerOptions:this.props.eventRecognizerOptions,events:{pointerdown:this._onPointerDown,pointermove:this._onPointerMove,pointerleave:this._onPointerMove}});for(const i in J.FP)this.eventManager.on(i,this._onEvent);this.viewManager=new _({timeline:t,eventManager:this.eventManager,onViewStateChange:this._onViewStateChange.bind(this),onInteractionStateChange:this._onInteractionStateChange.bind(this),views:this._getViews(),viewState:this._getViewState(),width:this.width,height:this.height});const n=this.viewManager.getViewports()[0];this.layerManager=new y(e,{deck:this,stats:this.stats,viewport:n,timeline:t}),this.effectManager=new x,this.deckRenderer=new M(e),this.deckPicker=new j(e),this.setProps(this.props),this._updateCanvasSize(),this.props.onLoad()}_drawLayers(e,t){const{gl:n}=this.layerManager.context;(0,T.dR)(n,this.props.parameters),this.props.onBeforeRender({gl:n}),this.deckRenderer.renderLayers({target:this.props._framebuffer,layers:this.layerManager.getLayers(),viewports:this.viewManager.getViewports(),onViewportActive:this.layerManager.activateViewport,views:this.viewManager.getViews(),pass:"screen",effects:this.effectManager.getEffects(),...t}),this.props.onAfterRender({gl:n})}_onRenderFrame(e){this._getFrameStats(),this._metricsCounter++%60==0&&(this._getMetrics(),this.stats.reset(),r.Z.table(4,this.metrics)(),this.props._onMetrics&&this.props._onMetrics(this.metrics)),this._updateCanvasSize(),this._updateCursor(),this.tooltip.isVisible&&this.viewManager.needsRedraw()&&this.tooltip.setTooltip(null),this.layerManager.updateLayers(),this._pickAndCallback(),this.redraw(),this.viewManager&&this.viewManager.updateViewStates()}_onViewStateChange(e){const t=this.props.onViewStateChange(e)||e.viewState;this.viewState&&(this.viewState={...this.viewState,[e.viewId]:t},this.props.viewState||this.viewManager&&this.viewManager.setProps({viewState:this.viewState}))}_onInteractionStateChange(e){this.cursorState.isDragging=e.isDragging||!1,this.props.onInteractionStateChange(e)}_getFrameStats(){const{stats:e}=this;e.get("frameRate").timeEnd(),e.get("frameRate").timeStart();const t=this.animationLoop.stats;e.get("GPU Time").addTime(t.get("GPU Time").lastTiming),e.get("CPU Time").addTime(t.get("CPU Time").lastTiming)}_getMetrics(){const{metrics:e,stats:t}=this;e.fps=t.get("frameRate").getHz(),e.setPropsTime=t.get("setProps Time").time,e.updateAttributesTime=t.get("Update Attributes").time,e.framesRedrawn=t.get("Redraw Count").count,e.pickTime=t.get("pickObject Time").time+t.get("pickMultipleObjects Time").time+t.get("pickObjects Time").time,e.pickCount=t.get("Pick Count").count,e.gpuTime=t.get("GPU Time").time,e.cpuTime=t.get("CPU Time").time,e.gpuTimePerFrame=t.get("GPU Time").getAverageTime(),e.cpuTimePerFrame=t.get("CPU Time").getAverageTime();const n=K.lR.get("Memory Usage");e.bufferMemory=n.get("Buffer Memory").count,e.textureMemory=n.get("Texture Memory").count,e.renderbufferMemory=n.get("Renderbuffer Memory").count,e.gpuMemory=n.get("GPU Memory").count}}Q.defaultProps=$,Q.VERSION=W},47251:(e,t,n)=>{"use strict";n.d(t,{Z:()=>ne});var i=n(43631),o=n(52747),r=n(98489),s=n(28835),a=n(62833);class l extends a.Z{get value(){return this._value}_onUpdate(){const{time:e,settings:{fromValue:t,toValue:n,duration:i,easing:o}}=this,r=o(e/i);this._value=(0,s.t7)(t,n,r)}}const c=1e-5;function d(e,t,n,i,o){const r=t-e;return(n-t)*o+-r*i+r+t}function p(e,t){if(Array.isArray(e)){let n=0;for(let i=0;i<e.length;i++){const o=e[i]-t[i];n+=o*o}return Math.sqrt(n)}return Math.abs(e-t)}class u extends a.Z{get value(){return this._currValue}_onUpdate(){const{fromValue:e,toValue:t,damping:n,stiffness:i}=this.settings,{_prevValue:o=e,_currValue:r=e}=this;let s=function(e,t,n,i,o){if(Array.isArray(n)){const r=[];for(let s=0;s<n.length;s++)r[s]=d(e[s],t[s],n[s],i,o);return r}return d(e,t,n,i,o)}(o,r,t,n,i);const a=p(s,t),l=p(s,r);a<c&&l<c&&(s=t,this.end()),this._prevValue=r,this._currValue=s}}var h=n(89745);const g={interpolation:l,spring:u};class f{constructor(e){this.transitions=new Map,this.timeline=e}get active(){return this.transitions.size>0}add(e,t,n,i){const{transitions:o}=this;if(o.has(e)){const n=o.get(e),{value:i=n.settings.fromValue}=n;t=i,this.remove(e)}if(!(i=(0,r.M0)(i)))return;const s=g[i.type];if(!s)return void h.Z.error("unsupported transition type '"+i.type+"'")();const a=new s(this.timeline);a.start({...i,fromValue:t,toValue:n}),o.set(e,a)}remove(e){const{transitions:t}=this;t.has(e)&&(t.get(e).cancel(),t.delete(e))}update(){const e={};for(const[t,n]of this.transitions)n.update(),e[t]=n.value,n.inProgress||this.remove(t);return e}clear(){for(const e of this.transitions.keys())this.remove(e)}}var m=n(65756),y=n(65663);const v="count(): argument not an object",_="count(): argument not a container";function w(e){if(null===(t=e)||"object"!=typeof t)throw new Error(v);var t;if("function"==typeof e.count)return e.count();if(Number.isFinite(e.size))return e.size;if(Number.isFinite(e.length))return e.length;if(function(e){return null!==e&&"object"==typeof e&&e.constructor===Object}(e))return Object.keys(e).length;throw new Error(_)}var b=n(14503),P=n(7092),x=n(13405),k=n(66508),C=n(16862),S=n(50961),N=n(67258),M=n(37944),L=n(43970);const T={10241:9987,10240:9729,10242:33071,10243:33071},E={};var A=n(77607);const I={boolean:{validate:(e,t)=>!0,equal:(e,t,n)=>Boolean(e)===Boolean(t)},number:{validate:(e,t)=>Number.isFinite(e)&&(!("max"in t)||e<=t.max)&&(!("min"in t)||e>=t.min)},color:{validate:(e,t)=>t.optional&&!e||j(e)&&(3===e.length||4===e.length),equal:(e,t,n)=>O(e,t)},accessor:{validate(e,t){const n=F(e);return"function"===n||n===F(t.value)},equal:(e,t,n)=>"function"==typeof t||O(e,t)},array:{validate:(e,t)=>t.optional&&!e||j(e),equal:(e,t,n)=>n.compare?O(e,t):e===t},object:{equal:(e,t,n)=>n.compare?(0,A.v)(e,t,n.depth||0):e===t},function:{validate:(e,t)=>t.optional&&!e||"function"==typeof e,equal:(e,t,n)=>!n.compare||e===t},data:{transform:(e,t,n)=>{const{dataTransform:i}=n.props;return i&&e?i(e):e}},image:{transform:(e,t,n)=>{const i=n.context;return i&&i.gl?function(e,t,n){if(t instanceof L.Z)return t;t.constructor&&"Object"!==t.constructor.name&&(t={data:t});let i=null;t.compressed&&(i={10241:t.data.length>1?9985:9729});const o=new L.Z(e,{...t,parameters:{...T,...i,...n}});return E[o.id]=!0,o}(i.gl,e,{...t.parameters,...n.props.textureParameters}):null},release:e=>{var t;(t=e)&&t instanceof L.Z&&E[t.id]&&(t.delete(),delete E[t.id])}}};function O(e,t){if(e===t)return!0;if(!j(e)||!j(t))return!1;const n=e.length;if(n!==t.length)return!1;for(let i=0;i<n;i++)if(e[i]!==t[i])return!1;return!0}function R(e,t){switch(F(t)){case"object":return z(e,t);case"array":return z(e,{type:"array",value:t,compare:!1});case"boolean":return z(e,{type:"boolean",value:t});case"number":return z(e,{type:"number",value:t});case"function":return z(e,{type:"function",value:t,compare:!0});default:return{name:e,type:"unknown",value:t}}}function z(e,t){return"type"in t?{name:e,...I[t.type],...t}:"value"in t?{name:e,type:F(t.value),...t}:{name:e,type:"object",value:t}}function j(e){return Array.isArray(e)||ArrayBuffer.isView(e)}function F(e){return j(e)?"array":null===e?"null":typeof e}const D="_mergedDefaultProps";function U(e,t){let n=D;if(t)for(const o of t){const e=o.constructor;e&&(n+=":"+(e.extensionName||e.name))}const i=B(e,n);return i||(e[n]=function(e,t){const n=e.prototype;if(!n)return null;const i=Object.getPrototypeOf(e),o=U(i),r=B(e,"defaultProps")||{},s=function(e){const t={},n={},i={};for(const[o,r]of Object.entries(e)){const e=null==r?void 0:r.deprecatedFor;if(e)i[o]=Array.isArray(e)?e:[e];else{const e=R(o,r);t[o]=e,n[o]=e.value}}return{propTypes:t,defaultProps:n,deprecatedProps:i}}(r),a=Object.assign(Object.create(null),o,s.defaultProps),l=Object.assign(Object.create(null),null==o?void 0:o[y.Wb],s.propTypes),c=Object.assign(Object.create(null),null==o?void 0:o[y.E7],s.deprecatedProps);for(const d of t){const e=U(d.constructor);e&&(Object.assign(a,e),Object.assign(l,e[y.Wb]),Object.assign(c,e[y.E7]))}(function(e,t){const n=function(e){const t=B(e,"layerName")||B(e,"componentName");t||h.Z.once(0,e.name+".componentName not specified")();return t||e.name}(t);Object.defineProperties(e,{id:{writable:!0,value:n}})})(a,e),function(e,t){const n={},i={};for(const o in t){const e=t[o],{name:r,value:s}=e;e.async&&(n[r]=s,i[r]=Z(r))}e[y.lY]=n,e[y.fO]={},Object.defineProperties(e,i)}(a,l),function(e,t){for(const n in t)Object.defineProperty(e,n,{enumerable:!1,set(e){const i=this.id+": "+n;for(const o of t[n])V(this,o)||(this[o]=e);h.Z.deprecated(i,t[n].join("/"))()}})}(a,c),a[y.Wb]=l,a[y.E7]=c,0!==t.length||V(e,"_propTypes")||(e._propTypes=l);return a}(e,t||[]))}function Z(e){return{enumerable:!0,set(t){"string"==typeof t||t instanceof Promise||(0,M.D0)(t)?this[y.fO][e]=t:this[y.bN][e]=t},get(){if(this[y.bN]){if(e in this[y.bN]){return this[y.bN][e]||this[y.lY][e]}if(e in this[y.fO]){const t=this[y.fm]&&this[y.fm].internalState;if(t&&t.hasAsyncProp(e))return t.getAsyncProp(e)||this[y.lY][e]}}return this[y.lY][e]}}}function V(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function B(e,t){return V(e,t)&&e[t]}let W=0;class G{constructor(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];this.props=function(e,t){let n;for(let r=t.length-1;r>=0;r--){const e=t[r];"extensions"in e&&(n=e.extensions)}const i=U(e.constructor,n),o=Object.create(i);o[y.fm]=e,o[y.fO]={},o[y.bN]={};for(let r=0;r<t.length;++r){const e=t[r];for(const t in e)o[t]=e[t]}return Object.freeze(o),o}(this,t),this.id=this.props.id,this.count=W++}clone(e){const{props:t}=this,n={};for(const i in t[y.lY])i in t[y.bN]?n[i]=t[y.bN][i]:i in t[y.fO]&&(n[i]=t[y.fO][i]);return new this.constructor({...t,...n,...e})}}G.componentName="Component",G.defaultProps={};const H=Object.freeze({});class K{constructor(e){this.component=e,this.asyncProps={},this.onAsyncPropUpdated=()=>{},this.oldProps=null,this.oldAsyncProps=null}finalize(){for(const e in this.asyncProps){const t=this.asyncProps[e];t&&t.type&&t.type.release&&t.type.release(t.resolvedValue,t.type,this.component)}this.asyncProps={},this.component=null,this.resetOldProps()}getOldProps(){return this.oldAsyncProps||this.oldProps||H}resetOldProps(){this.oldAsyncProps=null,this.oldProps=this.component?this.component.props:null}hasAsyncProp(e){return e in this.asyncProps}getAsyncProp(e){const t=this.asyncProps[e];return t&&t.resolvedValue}isAsyncPropLoading(e){if(e){const t=this.asyncProps[e];return Boolean(t&&t.pendingLoadCount>0&&t.pendingLoadCount!==t.resolvedLoadCount)}for(const t in this.asyncProps)if(this.isAsyncPropLoading(t))return!0;return!1}reloadAsyncProp(e,t){this._watchPromise(e,Promise.resolve(t))}setAsyncProps(e){this.component=e[y.fm]||this.component;const t=e[y.bN]||{},n=e[y.fO]||e,i=e[y.lY]||{};for(const o in t){const e=t[o];this._createAsyncPropData(o,i[o]),this._updateAsyncProp(o,e),t[o]=this.getAsyncProp(o)}for(const o in n){const e=n[o];this._createAsyncPropData(o,i[o]),this._updateAsyncProp(o,e)}}_fetch(e,t){return null}_onResolve(e,t){}_onError(e,t){}_updateAsyncProp(e,t){this._didAsyncInputValueChange(e,t)&&("string"==typeof t&&(t=this._fetch(e,t)),t instanceof Promise?this._watchPromise(e,t):(0,M.D0)(t)?this._resolveAsyncIterable(e,t):this._setPropValue(e,t))}_freezeAsyncOldProps(){if(!this.oldAsyncProps&&this.oldProps){this.oldAsyncProps=Object.create(this.oldProps);for(const e in this.asyncProps)Object.defineProperty(this.oldAsyncProps,e,{enumerable:!0,value:this.oldProps[e]})}}_didAsyncInputValueChange(e,t){const n=this.asyncProps[e];return t!==n.resolvedValue&&t!==n.lastValue&&(n.lastValue=t,!0)}_setPropValue(e,t){this._freezeAsyncOldProps();const n=this.asyncProps[e];n&&(t=this._postProcessValue(n,t),n.resolvedValue=t,n.pendingLoadCount++,n.resolvedLoadCount=n.pendingLoadCount)}_setAsyncPropValue(e,t,n){const i=this.asyncProps[e];i&&n>=i.resolvedLoadCount&&void 0!==t&&(this._freezeAsyncOldProps(),i.resolvedValue=t,i.resolvedLoadCount=n,this.onAsyncPropUpdated(e,t))}_watchPromise(e,t){const n=this.asyncProps[e];if(n){n.pendingLoadCount++;const i=n.pendingLoadCount;t.then((t=>{this.component&&(t=this._postProcessValue(n,t),this._setAsyncPropValue(e,t,i),this._onResolve(e,t))})).catch((t=>{this._onError(e,t)}))}}async _resolveAsyncIterable(e,t){if("data"!==e)return void this._setPropValue(e,t);const n=this.asyncProps[e];if(!n)return;n.pendingLoadCount++;const i=n.pendingLoadCount;let o=[],r=0;for await(const s of t){if(!this.component)return;const{dataTransform:t}=this.component.props;o=t?t(s,o):o.concat(s),Object.defineProperty(o,"__diff",{enumerable:!1,value:[{startRow:r,endRow:o.length}]}),r=o.length,this._setAsyncPropValue(e,o,i)}this._onResolve(e,o)}_postProcessValue(e,t){const n=e.type;return n&&this.component&&(n.release&&n.release(e.resolvedValue,n,this.component),n.transform)?n.transform(t,n,this.component):t}_createAsyncPropData(e,t){if(!this.asyncProps[e]){const n=this.component&&this.component.props[y.Wb];this.asyncProps[e]={type:n&&n[e],lastValue:null,resolvedValue:t,pendingLoadCount:0,resolvedLoadCount:0}}}}class q extends K{constructor(e){let{attributeManager:t,layer:n}=e;super(n),this.attributeManager=t,this.needsRedraw=!0,this.needsUpdate=!0,this.subLayers=null,this.usesPickingColorCache=!1}get layer(){return this.component}_fetch(e,t){const n=this.layer,i=null==n?void 0:n.props.fetch;return i?i(t,{propName:e,layer:n}):super._fetch(e,t)}_onResolve(e,t){const n=this.layer;if(n){const i=n.props.onDataLoad;"data"===e&&i&&i(t,{propName:e,layer:n})}}_onError(e,t){const n=this.layer;n&&n.raiseError(t,"loading "+e+" of "+this.layer)}}var Y=n(92797),J=n(96742);const X=2**24-1,$=Object.freeze([]),Q=(0,k.Z)((e=>{let{oldViewport:t,viewport:n}=e;return t.equals(n)}));let ee=new Uint8ClampedArray(0);const te={data:{type:"data",value:$,async:!0},dataComparator:{type:"function",value:null,compare:!1,optional:!0},_dataDiff:{type:"function",value:e=>e&&e.__diff,compare:!1,optional:!0},dataTransform:{type:"function",value:null,compare:!1,optional:!0},onDataLoad:{type:"function",value:null,compare:!1,optional:!0},onError:{type:"function",value:null,compare:!1,optional:!0},fetch:{type:"function",value:(e,t)=>{let{propName:n,layer:i,loaders:o,loadOptions:r,signal:s}=t;const{resourceManager:a}=i.context;var l;(r=r||i.getLoadOptions(),o=o||i.props.loaders,s)&&(r={...r,fetch:{...null==(l=r)?void 0:l.fetch,signal:s}});let c=a.contains(e);return c||r||(a.add({resourceId:e,data:(0,J.z)(e,o),persistent:!1}),c=!0),c?a.subscribe({resourceId:e,onChange:e=>{var t;return null==(t=i.internalState)?void 0:t.reloadAsyncProp(n,e)},consumerId:i.id,requestId:n}):(0,J.z)(e,o,r)},compare:!1},updateTriggers:{},visible:!0,pickable:!1,opacity:{type:"number",min:0,max:1,value:1},operation:"draw",onHover:{type:"function",value:null,compare:!1,optional:!0},onClick:{type:"function",value:null,compare:!1,optional:!0},onDragStart:{type:"function",value:null,compare:!1,optional:!0},onDrag:{type:"function",value:null,compare:!1,optional:!0},onDragEnd:{type:"function",value:null,compare:!1,optional:!0},coordinateSystem:i.Df.DEFAULT,coordinateOrigin:{type:"array",value:[0,0,0],compare:!0},modelMatrix:{type:"array",value:null,compare:!0,optional:!0},wrapLongitude:!1,positionFormat:"XYZ",colorFormat:"RGBA",parameters:{type:"object",value:{},optional:!0,compare:!0,depth:1},loadOptions:{type:"object",value:null,optional:!0,compare:!0,depth:3},transitions:null,extensions:[],loaders:{type:"array",value:[],optional:!0,compare:!0},getPolygonOffset:{type:"function",value:e=>{let{layerIndex:t}=e;return[0,100*-t]},compare:!1},highlightedObjectIndex:null,autoHighlight:!1,highlightColor:{type:"accessor",value:[0,0,128,128]}};class ne extends G{constructor(){super(...arguments),this.internalState=null,this.lifecycle=y.dt.NO_STATE,this.parent=null}get root(){let e=this;for(;e.parent;)e=e.parent;return e}toString(){return(this.constructor.layerName||this.constructor.name)+"({id: '"+this.props.id+"'})"}project(e){(0,x.Z)(this.internalState);const t=this.internalState.viewport||this.context.viewport,n=(0,S.T)(e,{viewport:t,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem}),[i,o,r]=(0,Y.aW)(n,t.pixelProjectionMatrix);return 2===e.length?[i,o]:[i,o,r]}unproject(e){(0,x.Z)(this.internalState);return(this.internalState.viewport||this.context.viewport).unproject(e)}projectPosition(e,t){(0,x.Z)(this.internalState);const n=this.internalState.viewport||this.context.viewport;return(0,S.D)(e,{viewport:n,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem,...t})}get isComposite(){return!1}setState(e){this.setChangeFlags({stateChanged:!0}),Object.assign(this.state,e),this.setNeedsRedraw()}setNeedsRedraw(){this.internalState&&(this.internalState.needsRedraw=!0)}setNeedsUpdate(){this.internalState&&(this.context.layerManager.setNeedsUpdate(String(this)),this.internalState.needsUpdate=!0)}get isLoaded(){return!!this.internalState&&!this.internalState.isAsyncPropLoading()}get wrapLongitude(){return this.props.wrapLongitude}isPickable(){return this.props.pickable&&this.props.visible}getModels(){return this.state&&(this.state.models||this.state.model&&[this.state.model])||[]}setModuleParameters(e){for(const t of this.getModels())t.updateModuleSettings(e)}getAttributeManager(){return this.internalState&&this.internalState.attributeManager}getCurrentLayer(){return this.internalState&&this.internalState.layer}getLoadOptions(){return this.props.loadOptions}use64bitPositions(){const{coordinateSystem:e}=this.props;return e===i.Df.DEFAULT||e===i.Df.LNGLAT||e===i.Df.CARTESIAN}onHover(e,t){return this.props.onHover&&this.props.onHover(e,t)||!1}onClick(e,t){return this.props.onClick&&this.props.onClick(e,t)||!1}nullPickingColor(){return[0,0,0]}encodePickingColor(e,t){return void 0===t&&(t=[]),t[0]=e+1&255,t[1]=e+1>>8&255,t[2]=e+1>>8>>8&255,t}decodePickingColor(e){(0,x.Z)(e instanceof Uint8Array);const[t,n,i]=e;return t+256*n+65536*i-1}getNumInstances(){return Number.isFinite(this.props.numInstances)?this.props.numInstances:this.state&&void 0!==this.state.numInstances?this.state.numInstances:w(this.props.data)}getStartIndices(){return this.props.startIndices?this.props.startIndices:this.state&&this.state.startIndices?this.state.startIndices:null}getBounds(){var e;const t=this.getAttributeManager();if(!t)return null;const{positions:n,instancePositions:i}=t.attributes;return null==(e=n||i)?void 0:e.getBounds()}getShaders(e){for(const t of this.props.extensions)e=(0,C.l)(e,t.getShaders.call(this,t));return e}shouldUpdateState(e){return e.changeFlags.propsOrDataChanged}updateState(e){const t=this.getAttributeManager(),{dataChanged:n}=e.changeFlags;if(n&&t)if(Array.isArray(n))for(const i of n)t.invalidateAll(i);else t.invalidateAll();if(t){const{props:n}=e,i=this.internalState.hasPickingBuffer,o=Number.isInteger(n.highlightedObjectIndex)||n.pickable||n.extensions.some((e=>e.getNeedsPickingBuffer.call(this,e)));if(i!==o){this.internalState.hasPickingBuffer=o;const{pickingColors:e,instancePickingColors:n}=t.attributes,i=e||n;i&&(o&&i.constant&&(i.constant=!1,t.invalidate(i.id)),i.value||o||(i.constant=!0,i.value=[0,0,0]))}}}finalizeState(e){for(const n of this.getModels())n.delete();const t=this.getAttributeManager();t&&t.finalize(),this.context&&this.context.resourceManager.unsubscribe({consumerId:this.id}),this.internalState&&(this.internalState.uniformTransitions.clear(),this.internalState.finalize())}draw(e){for(const t of this.getModels())t.draw(e)}getPickingInfo(e){let{info:t,mode:n,sourceLayer:i}=e;const{index:o}=t;return o>=0&&Array.isArray(this.props.data)&&(t.object=this.props.data[o]),t}raiseError(e,t){var n,i,o;(t&&(e.message=t+": "+e.message),null!=(n=(i=this.props).onError)&&n.call(i,e))||(null==(o=this.context)||null==o.onError||o.onError(e,this))}getNeedsRedraw(e){return void 0===e&&(e={clearRedrawFlags:!1}),this._getNeedsRedraw(e)}needsUpdate(){return!!this.internalState&&(this.internalState.needsUpdate||this.hasUniformTransition()||this.shouldUpdateState(this._getUpdateParams()))}hasUniformTransition(){var e;return(null==(e=this.internalState)?void 0:e.uniformTransitions.active)||!1}activateViewport(e){if(!this.internalState)return;const t=this.internalState.viewport;this.internalState.viewport=e,t&&Q({oldViewport:t,viewport:e})||(this.setChangeFlags({viewportChanged:!0}),this.isComposite?this.needsUpdate()&&this.setNeedsUpdate():this._update())}invalidateAttribute(e){void 0===e&&(e="all");const t=this.getAttributeManager();t&&("all"===e?t.invalidateAll():t.invalidate(e))}updateAttributes(e){for(const t of this.getModels())this._setModelAttributes(t,e)}_updateAttributes(){const e=this.getAttributeManager();if(!e)return;const t=this.props,n=this.getNumInstances(),i=this.getStartIndices();e.update({data:t.data,numInstances:n,startIndices:i,props:t,transitions:t.transitions,buffers:t.data.attributes,context:this});const o=e.getChangedAttributes({clearChangedFlags:!0});this.updateAttributes(o)}_updateAttributeTransition(){const e=this.getAttributeManager();e&&e.updateTransition()}_updateUniformTransition(){const{uniformTransitions:e}=this.internalState;if(e.active){const t=e.update(),n=Object.create(this.props);for(const e in t)Object.defineProperty(n,e,{value:t[e]});return n}return this.props}calculateInstancePickingColors(e,t){let{numInstances:n}=t;if(e.constant)return;const i=Math.floor(ee.length/3);if(this.internalState.usesPickingColorCache=!0,i<n){n>X&&h.Z.warn("Layer has too many data objects. Picking might not be able to distinguish all objects.")(),ee=N.Z.allocate(ee,n,{size:3,copy:!0,maxCount:Math.max(n,X)});const e=Math.floor(ee.length/3),t=[];for(let n=i;n<e;n++)this.encodePickingColor(n,t),ee[3*n+0]=t[0],ee[3*n+1]=t[1],ee[3*n+2]=t[2]}e.value=ee.subarray(0,3*n)}_setModelAttributes(e,t){const n=this.getAttributeManager(),i=e.userData.excludeAttributes||{},o=n.getShaderAttributes(t,i);e.setAttributes(o)}disablePickingIndex(e){this._disablePickingIndex(e)}_disablePickingIndex(e){const{pickingColors:t,instancePickingColors:n}=this.getAttributeManager().attributes,i=t||n;if(!i)return;const o=i.getVertexOffset(e),r=i.getVertexOffset(e+1);i.buffer.subData({data:new Uint8Array(r-o),offset:o})}restorePickingColors(){const{pickingColors:e,instancePickingColors:t}=this.getAttributeManager().attributes,n=e||t;n&&(this.internalState.usesPickingColorCache&&n.value.buffer!==ee.buffer&&(n.value=ee.subarray(0,n.value.length)),n.updateSubBuffer({startOffset:0}))}_initialize(){(0,x.Z)(!this.internalState),(0,x.Z)(Number.isFinite(this.props.coordinateSystem)),(0,b.Z)("layer.initialize",this);const e=this._getAttributeManager();e&&e.addInstanced({instancePickingColors:{type:5121,size:3,noAlloc:!0,update:this.calculateInstancePickingColors}}),this.internalState=new q({attributeManager:e,layer:this}),this._clearChangeFlags(),this.state={},Object.defineProperty(this.state,"attributeManager",{get:()=>(h.Z.deprecated("layer.state.attributeManager","layer.getAttributeManager()")(),e)}),this.internalState.uniformTransitions=new f(this.context.timeline),this.internalState.onAsyncPropUpdated=this._onAsyncPropUpdated.bind(this),this.internalState.setAsyncProps(this.props),this.initializeState(this.context);for(const t of this.props.extensions)t.initializeState.call(this,this.context,t);this.setChangeFlags({dataChanged:"init",propsChanged:"init",viewportChanged:!0,extensionsChanged:!0}),this._update()}_transferState(e){(0,b.Z)("layer.matched",this,this===e);const{state:t,internalState:n}=e;this!==e&&(this.internalState=n,this.state=t,this.internalState.setAsyncProps(this.props),this._diffProps(this.props,this.internalState.getOldProps()))}_update(){const e=this.needsUpdate();if((0,b.Z)("layer.update",this,e),!e)return;const t=this.props,n=this.context,i=this.internalState,o=n.viewport,r=this._updateUniformTransition();i.propsInTransition=r,n.viewport=i.viewport||o,this.props=r;try{const e=this._getUpdateParams(),t=this.getModels();if(n.gl)this.updateState(e);else try{this.updateState(e)}catch(s){}for(const n of this.props.extensions)n.updateState.call(this,e,n);const i=this.getModels()[0]!==t[0];this._postUpdate(e,i)}finally{n.viewport=o,this.props=t,this._clearChangeFlags(),i.needsUpdate=!1,i.resetOldProps()}}_finalize(){(0,b.Z)("layer.finalize",this),this.finalizeState(this.context);for(const e of this.props.extensions)e.finalizeState.call(this,this.context,e)}_drawLayer(e){let{moduleParameters:t=null,uniforms:n={},parameters:i={}}=e;this._updateAttributeTransition();const o=this.props,r=this.context;this.props=this.internalState.propsInTransition||o;const s=this.props.opacity;n.opacity=Math.pow(s,1/2.2);try{t&&this.setModuleParameters(t);const{getPolygonOffset:e}=this.props,o=e&&e(n)||[0,0];(0,P.dR)(r.gl,{polygonOffset:o}),(0,P.s8)(r.gl,i,(()=>{const e={moduleParameters:t,uniforms:n,parameters:i,context:r};for(const t of this.props.extensions)t.draw.call(this,e,t);this.draw(e)}))}finally{this.props=o}}getChangeFlags(){var e;return null==(e=this.internalState)?void 0:e.changeFlags}setChangeFlags(e){if(!this.internalState)return;const{changeFlags:t}=this.internalState;for(const i in e)if(e[i]){let n=!1;if("dataChanged"===i){const o=e[i],r=t[i];o&&Array.isArray(r)&&(t.dataChanged=Array.isArray(o)?r.concat(o):o,n=!0)}t[i]||(t[i]=e[i],n=!0),n&&(0,b.Z)("layer.changeFlag",this,i,e)}const n=Boolean(t.dataChanged||t.updateTriggersChanged||t.propsChanged||t.extensionsChanged);t.propsOrDataChanged=n,t.somethingChanged=n||t.viewportChanged||t.stateChanged}_clearChangeFlags(){this.internalState.changeFlags={dataChanged:!1,propsChanged:!1,updateTriggersChanged:!1,viewportChanged:!1,stateChanged:!1,extensionsChanged:!1,propsOrDataChanged:!1,somethingChanged:!1}}_diffProps(e,t){const n=(0,m.Yt)(e,t);if(n.updateTriggersChanged)for(const o in n.updateTriggersChanged)n.updateTriggersChanged[o]&&this.invalidateAttribute(o);if(n.transitionsChanged)for(const o in n.transitionsChanged){var i;this.internalState.uniformTransitions.add(o,t[o],e[o],null==(i=e.transitions)?void 0:i[o])}return this.setChangeFlags(n)}validateProps(){(0,m.eQ)(this.props)}updateAutoHighlight(e){this.props.autoHighlight&&!Number.isInteger(this.props.highlightedObjectIndex)&&this._updateAutoHighlight(e)}_updateAutoHighlight(e){const t={pickingSelectedColor:e.picked?e.color:null},{highlightColor:n}=this.props;e.picked&&"function"==typeof n&&(t.pickingHighlightColor=n(e)),this.setModuleParameters(t),this.setNeedsRedraw()}_getAttributeManager(){const e=this.context;return new o.Z(e.gl,{id:this.props.id,stats:e.stats,timeline:e.timeline})}_postUpdate(e,t){const{props:n,oldProps:i}=e;this.setNeedsRedraw(),this._updateAttributes();const{model:o}=this.state;null==o||o.setInstanceCount(this.getNumInstances());const{autoHighlight:r,highlightedObjectIndex:s,highlightColor:a}=n;if(t||i.autoHighlight!==r||i.highlightedObjectIndex!==s||i.highlightColor!==a){const e={};r||(e.pickingSelectedColor=null),Array.isArray(a)&&(e.pickingHighlightColor=a),(t||s!==i.highlightedObjectIndex)&&(e.pickingSelectedColor=Number.isFinite(s)&&s>=0?this.encodePickingColor(s):null),this.setModuleParameters(e)}}_getUpdateParams(){return{props:this.props,oldProps:this.internalState.getOldProps(),context:this.context,changeFlags:this.internalState.changeFlags}}_getNeedsRedraw(e){if(!this.internalState)return!1;let t=!1;t=t||this.internalState.needsRedraw&&this.id;const n=this.getAttributeManager(),i=!!n&&n.getNeedsRedraw(e);if(t=t||i,t)for(const o of this.props.extensions)o.onNeedsRedraw.call(this,o);return this.internalState.needsRedraw=this.internalState.needsRedraw&&!e.clearRedrawFlags,t}_onAsyncPropUpdated(){this._diffProps(this.props,this.internalState.getOldProps()),this.setNeedsUpdate()}}ne.defaultProps=te,ne.layerName="Layer"},65663:(e,t,n)=>{"use strict";n.d(t,{E7:()=>s,Wb:()=>r,bN:()=>c,dt:()=>i,fO:()=>l,fm:()=>o,lY:()=>a});const i={NO_STATE:"Awaiting state",MATCHED:"Matched. State transferred from previous layer",INITIALIZED:"Initialized",AWAITING_GC:"Discarded. Awaiting garbage collection",AWAITING_FINALIZATION:"No longer matched. Awaiting garbage collection",FINALIZED:"Finalized! Awaiting garbage collection"},o=Symbol.for("component"),r=Symbol.for("propTypes"),s=Symbol.for("deprecatedProps"),a=Symbol.for("asyncPropDefaults"),l=Symbol.for("asyncPropOriginal"),c=Symbol.for("asyncPropResolved")},65756:(e,t,n)=>{"use strict";n.d(t,{Yt:()=>r,eQ:()=>o,tg:()=>a});var i=n(65663);function o(e){const t=e[i.Wb];for(const n in t){const i=t[n],{validate:o}=i;if(o&&!o(e[n],i))throw new Error("Invalid prop "+n+": "+e[n])}}function r(e,t){const n=a({newProps:e,oldProps:t,propTypes:e[i.Wb],ignoreProps:{data:null,updateTriggers:null,extensions:null,transitions:null}}),o=function(e,t){if(null===t)return"oldProps is null, initial diff";let n=!1;const{dataComparator:i,_dataDiff:o}=e;i?i(e.data,t.data)||(n="Data comparator detected a change"):e.data!==t.data&&(n="A new data container was supplied");n&&o&&(n=o(e.data,t.data)||n);return n}(e,t);let r=!1;return o||(r=function(e,t){if(null===t)return{all:!0};if("all"in e.updateTriggers){if(d(e,t,"all"))return{all:!0}}const n={};let i=!1;for(const o in e.updateTriggers)if("all"!==o){d(e,t,o)&&(n[o]=!0,i=!0)}return!!i&&n}(e,t)),{dataChanged:o,propsChanged:n,updateTriggersChanged:r,extensionsChanged:c(e,t),transitionsChanged:s(e,t)}}function s(e,t){if(!e.transitions)return!1;const n={},o=e[i.Wb];let r=!1;for(const i in e.transitions){const s=o[i],a=s&&s.type;("number"===a||"color"===a||"array"===a)&&l(e[i],t[i],s)&&(n[i]=!0,r=!0)}return!!r&&n}function a(e){let{newProps:t,oldProps:n,ignoreProps:i={},propTypes:o={},triggerName:r="props"}=e;if(n===t)return!1;if("object"!=typeof t||null===t)return r+" changed shallowly";if("object"!=typeof n||null===n)return r+" changed shallowly";for(const s of Object.keys(t))if(!(s in i)){if(!(s in n))return r+"."+s+" added";const e=l(t[s],n[s],o[s]);if(e)return r+"."+s+" "+e}for(const s of Object.keys(n))if(!(s in i)){if(!(s in t))return r+"."+s+" dropped";if(!Object.hasOwnProperty.call(t,s)){const e=l(t[s],n[s],o[s]);if(e)return r+"."+s+" "+e}}return!1}function l(e,t,n){let i=n&&n.equal;return i&&!i(e,t,n)?"changed deeply":i||(i=e&&t&&e.equals,!i||i.call(e,t))?i||t===e?null:"changed shallowly":"changed deeply"}function c(e,t){if(null===t)return!0;const n=t.extensions,{extensions:i}=e;if(i===n)return!1;if(!n||!i)return!0;if(i.length!==n.length)return!0;for(let o=0;o<i.length;o++)if(!i[o].equals(n[o]))return!0;return!1}function d(e,t,n){let i=e.updateTriggers[n];i=null==i?{}:i;let o=t.updateTriggers[n];o=null==o?{}:o;return a({oldProps:o,newProps:i,triggerName:n})}},5259:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});class i{constructor(e,t){void 0===t&&(t={id:"pass"});const{id:n}=t;this.id=n,this.gl=e,this.props={...t}}setProps(e){Object.assign(this.props,e)}render(e){}cleanup(){}}var o=n(7092),r=n(97581);class s extends i{constructor(){super(...arguments),this._lastRenderIndex=-1}render(e){const t=this.gl;return(0,o.dR)(t,{framebuffer:e.target}),this._drawLayers(e)}_drawLayers(e){const{target:t,moduleParameters:n,viewports:i,views:r,onViewportActive:s,clearStack:a=!0,clearCanvas:l=!0}=e;e.pass=e.pass||"unknown";const c=this.gl;l&&function(e,t){const n=t?t.width:e.drawingBufferWidth,i=t?t.height:e.drawingBufferHeight;(0,o.dR)(e,{viewport:[0,0,n,i]}),e.clear(16640)}(c,t),a&&(this._lastRenderIndex=-1);const d=[];for(const o of i){const i=r&&r[o.id];null==s||s(o);const a=this._getDrawLayerParams(o,e),l=o.subViewports||[o];for(const o of l){const r=this._drawLayersInViewport(c,{target:t,moduleParameters:n,viewport:o,view:i,pass:e.pass,layers:e.layers},a);d.push(r)}}return d}_getDrawLayerParams(e,t,n){let{layers:i,pass:o,isPicking:r=!1,layerFilter:s,cullRect:l,effects:c,moduleParameters:d}=t;void 0===n&&(n=!1);const p=[],u=a(this._lastRenderIndex+1),h={layer:i[0],viewport:e,isPicking:r,renderPass:o,cullRect:l},g={};for(let a=0;a<i.length;a++){const t=i[a],r=this._shouldDrawLayer(t,h,s,g),l={shouldDrawLayer:r};r&&!n&&(l.layerRenderIndex=u(t,r),l.moduleParameters=this._getModuleParameters(t,c,o,d),l.layerParameters=this.getLayerParameters(t,a,e)),p[a]=l}return p}_drawLayersInViewport(e,t,n){let{layers:i,moduleParameters:s,pass:a,target:l,viewport:c,view:d}=t;const p=function(e,t){let{moduleParameters:n,target:i,viewport:r}=t;const s=i&&"default-framebuffer"!==i.id,a=n&&n.devicePixelRatio||(0,o.w)(e),l=s?i.height:e.drawingBufferHeight,c=r;return[c.x*a,l-(c.y+c.height)*a,c.width*a,c.height*a]}(e,{moduleParameters:s,target:l,viewport:c});if(d&&d.props.clear){const t=!0===d.props.clear?{color:!0,depth:!0}:d.props.clear;(0,o.s8)(e,{scissorTest:!0,scissor:p},(()=>(0,r.Z)(e,t)))}const u={totalCount:i.length,visibleCount:0,compositeCount:0,pickableCount:0};(0,o.dR)(e,{viewport:p});for(let o=0;o<i.length;o++){const e=i[o],{shouldDrawLayer:t,layerRenderIndex:r,moduleParameters:s,layerParameters:l}=n[o];if(t&&e.props.pickable&&u.pickableCount++,e.isComposite)u.compositeCount++;else if(t){u.visibleCount++,this._lastRenderIndex=Math.max(this._lastRenderIndex,r),s.viewport=c;try{e._drawLayer({moduleParameters:s,uniforms:{layerIndex:r},parameters:l})}catch(h){e.raiseError(h,"drawing "+e+" to "+a)}}}return u}shouldDrawLayer(e){return!0}getModuleParameters(e,t){return null}getLayerParameters(e,t,n){return e.props.parameters}_shouldDrawLayer(e,t,n,i){if(!(e.props.visible&&this.shouldDrawLayer(e)))return!1;t.layer=e;let o=e.parent;for(;o;){if(!o.props.visible||!o.filterSubLayer(t))return!1;t.layer=o,o=o.parent}if(n){const e=t.layer.id;if(e in i||(i[e]=n(t)),!i[e])return!1}return e.activateViewport(t.viewport),!0}_getModuleParameters(e,t,n,i){var r;const s=Object.assign(Object.create((null==(r=e.internalState)?void 0:r.propsInTransition)||e.props),{autoWrapLongitude:e.wrapLongitude,viewport:e.context.viewport,mousePosition:e.context.mousePosition,pickingActive:0,devicePixelRatio:(0,o.w)(this.gl)});if(t)for(const o of t)Object.assign(s,null==o.getModuleParameters?void 0:o.getModuleParameters(e));return Object.assign(s,this.getModuleParameters(e,t),i)}}function a(e,t){void 0===e&&(e=0),void 0===t&&(t={});const n={},i=(o,r)=>{const s=o.props._offset,l=o.id,c=o.parent&&o.parent.id;let d;if(c&&!(c in t)&&i(o.parent,!1),c in n){const e=n[c]=n[c]||a(t[c],t);d=e(o,r),n[l]=e}else Number.isFinite(s)?(d=s+(t[c]||0),n[l]=null):d=e;return r&&d>=e&&(e=d+1),t[l]=d,d};return i}},87264:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var i=n(5259),o=n(7092),r=n(89745);const s={blendFunc:[1,0,32771,0],blendEquation:32774};class a extends i.Z{constructor(){super(...arguments),this._colorEncoderState=null}render(e){return"pickingFBO"in e?this._drawPickingBuffer(e):super.render(e)}_drawPickingBuffer(e){let{layers:t,layerFilter:n,views:i,viewports:r,onViewportActive:a,pickingFBO:c,deviceRect:{x:d,y:p,width:u,height:h},cullRect:g,effects:f,pass:m="picking",pickZ:y,moduleParameters:v}=e;const _=this.gl;this.pickZ=y;const w=this._resetColorEncoder(y),b=(0,o.s8)(_,{scissorTest:!0,scissor:[d,p,u,h],clearColor:[0,0,0,0],depthMask:!0,depthTest:!0,depthRange:[0,1],colorMask:[!0,!0,!0,!0],...s,blend:!y},(()=>super.render({target:c,layers:t,layerFilter:n,views:i,viewports:r,onViewportActive:a,cullRect:g,effects:null==f?void 0:f.filter((e=>e.useInPicking)),pass:m,isPicking:!0,moduleParameters:v})));this._colorEncoderState=null;return{decodePickingColor:w&&l.bind(null,w),stats:b}}shouldDrawLayer(e){const{pickable:t,operation:n}=e.props;return t&&n.includes("draw")||n.includes("terrain")}getModuleParameters(){return{pickingActive:1,pickingAttribute:this.pickZ,lightSources:{}}}getLayerParameters(e,t,n){const i={...e.props.parameters},{pickable:o,operation:a}=e.props;return this._colorEncoderState?o&&a.includes("draw")&&(Object.assign(i,s),i.blend=!0,i.blendColor=function(e,t,n){const{byLayer:i,byAlpha:o}=e;let s,a=i.get(t);a?(a.viewports.push(n),s=a.a):(s=i.size+1,s<=255?(a={a:s,layer:t,viewports:[n]},i.set(t,a),o[s]=a):(r.Z.warn("Too many pickable layers, only picking the first 255")(),s=0));return[0,0,0,s/255]}(this._colorEncoderState,e,n)):i.blend=!1,a.includes("terrain")&&(i.blend=!1),i}_resetColorEncoder(e){return this._colorEncoderState=e?null:{byLayer:new Map,byAlpha:[]},this._colorEncoderState}}function l(e,t){const n=e.byAlpha[t[3]];return n&&{pickedLayer:n.layer,pickedViewports:n.viewports,pickedObjectIndex:n.layer.decodePickingColor(t)}}},71693:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});const i={inject:{"vs:DECKGL_FILTER_GL_POSITION":"\n    // for picking depth values\n    picking_setPickingAttribute(position.z / position.w);\n  ","vs:DECKGL_FILTER_COLOR":"\n  picking_setPickingColor(geometry.pickingColor);\n  ","fs:#decl":"\nuniform bool picking_uAttribute;\n  ","fs:DECKGL_FILTER_COLOR":{order:99,injection:"\n  // use highlight color if this fragment belongs to the selected object.\n  color = picking_filterHighlightColor(color);\n\n  // use picking color if rendering to picking FBO.\n  color = picking_filterPickingColor(color);\n    "}},...n(98254).q}},50961:(e,t,n)=>{"use strict";n.d(t,{D:()=>u,T:()=>p});var i=n(43631),o=n(66084),r=n(11199),s=n(98333),a=n(77160),l=n(92797);const c=[0,0,0];function d(e,t,n){void 0===n&&(n=!1);const i=t.projectPosition(e);if(n&&t instanceof r.Z){const[n,o,r=0]=e,s=t.getDistanceScales([n,o]);i[2]=r*s.unitsPerMeter[2]}return i}function p(e,t){let{viewport:n,modelMatrix:o,coordinateSystem:r,coordinateOrigin:a,offsetMode:c}=t,[p,u,h=0]=e;switch(o&&([p,u,h]=s.fF([],[p,u,h,1],o)),r){case i.Df.LNGLAT:return d([p,u,h],n,c);case i.Df.LNGLAT_OFFSETS:return d([p+a[0],u+a[1],h+(a[2]||0)],n,c);case i.Df.METER_OFFSETS:return d((0,l.eG)(a,[p,u,h]),n,c);case i.Df.CARTESIAN:default:return n.isGeospatial?[p+a[0],u+a[1],h+a[2]]:n.projectPosition([p,u,h])}}function u(e,t){const{viewport:n,coordinateSystem:r,coordinateOrigin:s,modelMatrix:l,fromCoordinateSystem:d,fromCoordinateOrigin:u}=function(e){const{viewport:t,modelMatrix:n,coordinateOrigin:o}=e;let{coordinateSystem:r,fromCoordinateSystem:s,fromCoordinateOrigin:a}=e;return r===i.Df.DEFAULT&&(r=t.isGeospatial?i.Df.LNGLAT:i.Df.CARTESIAN),void 0===s&&(s=r),void 0===a&&(a=o),{viewport:t,coordinateSystem:r,coordinateOrigin:o,modelMatrix:n,fromCoordinateSystem:s,fromCoordinateOrigin:a}}(t),{autoOffset:h=!0}=t,{geospatialOrigin:g=c,shaderCoordinateOrigin:f=c,offsetMode:m=!1}=h?(0,o.v)(n,r,s):{},y=p(e,{viewport:n,modelMatrix:l,coordinateSystem:d,coordinateOrigin:u,offsetMode:m});if(m){const e=n.projectPosition(g||f);a.lu(y,y,e)}return y}},73782:(e,t,n)=>{"use strict";n.d(t,{Z:()=>d});var i=n(97678);const o="#define SMOOTH_EDGE_RADIUS 0.5",r={name:"geometry",vs:"\n"+o+"\n\nstruct VertexGeometry {\n  vec4 position;\n  vec3 worldPosition;\n  vec3 worldPositionAlt;\n  vec3 normal;\n  vec2 uv;\n  vec3 pickingColor;\n} geometry = VertexGeometry(\n  vec4(0.0, 0.0, 1.0, 0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec2(0.0),\n  vec3(0.0)\n);\n",fs:"\n"+o+"\n\nstruct FragmentGeometry {\n  vec2 uv;\n} geometry;\n\nfloat smoothedge(float edge, float x) {\n  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);\n}\n"};var s=n(43631);const a=Object.keys(s.Df).map((e=>"const int COORDINATE_SYSTEM_"+e+" = "+s.Df[e]+";")).join("")+"\n"+Object.keys(s.zG).map((e=>"const int PROJECTION_MODE_"+e+" = "+s.zG[e]+";")).join("")+"\n"+Object.keys(s.iI).map((e=>"const int UNIT_"+e.toUpperCase()+" = "+s.iI[e]+";")).join("")+"\n\nuniform int project_uCoordinateSystem;\nuniform int project_uProjectionMode;\nuniform float project_uScale;\nuniform bool project_uWrapLongitude;\nuniform vec3 project_uCommonUnitsPerMeter;\nuniform vec3 project_uCommonUnitsPerWorldUnit;\nuniform vec3 project_uCommonUnitsPerWorldUnit2;\nuniform vec4 project_uCenter;\nuniform mat4 project_uModelMatrix;\nuniform mat4 project_uViewProjectionMatrix;\nuniform vec2 project_uViewportSize;\nuniform float project_uDevicePixelRatio;\nuniform float project_uFocalDistance;\nuniform vec3 project_uCameraPosition;\nuniform vec3 project_uCoordinateOrigin;\nuniform vec3 project_uCommonOrigin;\nuniform bool project_uPseudoMeters;\n\nconst float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / (PI * 2.0);\nconst vec3 ZERO_64_LOW = vec3(0.0);\nconst float EARTH_RADIUS = 6370972.0;\nconst float GLOBE_RADIUS = 256.0;\nfloat project_size_at_latitude(float lat) {\n  float y = clamp(lat, -89.9, 89.9);\n  return 1.0 / cos(radians(y));\n}\n\nfloat project_size() {\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR &&\n    project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT &&\n    project_uPseudoMeters == false) {\n    \n    if (geometry.position.w == 0.0) {\n      return project_size_at_latitude(geometry.worldPosition.y);\n    }\n  \n    float y = geometry.position.y / TILE_SIZE * 2.0 - 1.0;\n    float y2 = y * y;\n    float y4 = y2 * y2;\n    float y6 = y4 * y2;\n    return 1.0 + 4.9348 * y2 + 4.0587 * y4 + 1.5642 * y6;\n  }\n  return 1.0;\n}\n\nfloat project_size_at_latitude(float meters, float lat) {\n  return meters * project_uCommonUnitsPerMeter.z * project_size_at_latitude(lat);\n}\nfloat project_size(float meters) {\n  return meters * project_uCommonUnitsPerMeter.z * project_size();\n}\n\nvec2 project_size(vec2 meters) {\n  return meters * project_uCommonUnitsPerMeter.xy * project_size();\n}\n\nvec3 project_size(vec3 meters) {\n  return meters * project_uCommonUnitsPerMeter * project_size();\n}\n\nvec4 project_size(vec4 meters) {\n  return vec4(meters.xyz * project_uCommonUnitsPerMeter, meters.w);\n}\nmat3 project_get_orientation_matrix(vec3 up) {\n  vec3 uz = normalize(up);\n  vec3 ux = abs(uz.z) == 1.0 ? vec3(1.0, 0.0, 0.0) : normalize(vec3(uz.y, -uz.x, 0));\n  vec3 uy = cross(uz, ux);\n  return mat3(ux, uy, uz);\n}\n\nbool project_needs_rotation(vec3 commonPosition, out mat3 transform) {\n  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {\n    transform = project_get_orientation_matrix(commonPosition);\n    return true;\n  }\n  return false;\n}\nvec3 project_normal(vec3 vector) {\n  vec4 normal_modelspace = project_uModelMatrix * vec4(vector, 0.0);\n  vec3 n = normalize(normal_modelspace.xyz * project_uCommonUnitsPerMeter);\n  mat3 rotation;\n  if (project_needs_rotation(geometry.position.xyz, rotation)) {\n    n = rotation * n;\n  }\n  return n;\n}\n\nvec4 project_offset_(vec4 offset) {\n  float dy = offset.y;\n  vec3 commonUnitsPerWorldUnit = project_uCommonUnitsPerWorldUnit + project_uCommonUnitsPerWorldUnit2 * dy;\n  return vec4(offset.xyz * commonUnitsPerWorldUnit, offset.w);\n}\nvec2 project_mercator_(vec2 lnglat) {\n  float x = lnglat.x;\n  if (project_uWrapLongitude) {\n    x = mod(x + 180., 360.0) - 180.;\n  }\n  float y = clamp(lnglat.y, -89.9, 89.9);\n  return vec2(\n    radians(x) + PI,\n    PI + log(tan_fp32(PI * 0.25 + radians(y) * 0.5))\n  ) * WORLD_SCALE;\n}\n\nvec3 project_globe_(vec3 lnglatz) {\n  float lambda = radians(lnglatz.x);\n  float phi = radians(lnglatz.y);\n  float cosPhi = cos(phi);\n  float D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;\n\n  return vec3(\n    sin(lambda) * cosPhi,\n    -cos(lambda) * cosPhi,\n    sin(phi)\n  ) * D;\n}\nvec4 project_position(vec4 position, vec3 position64Low) {\n  vec4 position_world = project_uModelMatrix * position;\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR) {\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4(\n        project_mercator_(position_world.xy),\n        project_size_at_latitude(position_world.z, position_world.y),\n        position_world.w\n      );\n    }\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {\n      position_world.xyz += project_uCoordinateOrigin;\n    }\n  }\n  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4(\n        project_globe_(position_world.xyz),\n        position_world.w\n      );\n    }\n  }\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      if (abs(position_world.y - project_uCoordinateOrigin.y) > 0.25) {\n        return vec4(\n          project_mercator_(position_world.xy) - project_uCommonOrigin.xy,\n          project_size(position_world.z),\n          position_world.w\n        );\n      }\n    }\n  }\n  if (project_uProjectionMode == PROJECTION_MODE_IDENTITY ||\n    (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&\n    (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\n     project_uCoordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {\n    position_world.xyz -= project_uCoordinateOrigin;\n  }\n  return project_offset_(position_world + project_uModelMatrix * vec4(position64Low, 0.0));\n}\n\nvec4 project_position(vec4 position) {\n  return project_position(position, ZERO_64_LOW);\n}\n\nvec3 project_position(vec3 position, vec3 position64Low) {\n  vec4 projected_position = project_position(vec4(position, 1.0), position64Low);\n  return projected_position.xyz;\n}\n\nvec3 project_position(vec3 position) {\n  vec4 projected_position = project_position(vec4(position, 1.0), ZERO_64_LOW);\n  return projected_position.xyz;\n}\n\nvec2 project_position(vec2 position) {\n  vec4 projected_position = project_position(vec4(position, 0.0, 1.0), ZERO_64_LOW);\n  return projected_position.xy;\n}\n\nvec4 project_common_position_to_clipspace(vec4 position, mat4 viewProjectionMatrix, vec4 center) {\n  return viewProjectionMatrix * position + center;\n}\nvec4 project_common_position_to_clipspace(vec4 position) {\n  return project_common_position_to_clipspace(position, project_uViewProjectionMatrix, project_uCenter);\n}\nvec2 project_pixel_size_to_clipspace(vec2 pixels) {\n  vec2 offset = pixels / project_uViewportSize * project_uDevicePixelRatio * 2.0;\n  return offset * project_uFocalDistance;\n}\n\nfloat project_size_to_pixel(float meters) {\n  return project_size(meters) * project_uScale;\n}\nfloat project_size_to_pixel(float size, int unit) {\n  if (unit == UNIT_METERS) return project_size_to_pixel(size);\n  if (unit == UNIT_COMMON) return size * project_uScale;\n  return size;\n}\nfloat project_pixel_size(float pixels) {\n  return pixels / project_uScale;\n}\nvec2 project_pixel_size(vec2 pixels) {\n  return pixels / project_uScale;\n}\n";var l=n(66084);const c={};const d={name:"project",dependencies:[i.O,r],vs:a,getUniforms:function(e){return void 0===e&&(e=c),"viewport"in e?(0,l.C)(e):{}}}},66084:(e,t,n)=>{"use strict";n.d(t,{C:()=>g,v:()=>h});var i=n(85975),o=n(98333),r=n(43631),s=n(66508);const a=[0,0,0,0],l=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0],c=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],d=[0,0,0],p=[0,0,0],u=(0,s.Z)((function(e){let{viewport:t,devicePixelRatio:n,coordinateSystem:s,coordinateOrigin:p}=e;const{projectionCenter:u,viewProjectionMatrix:g,originCommon:f,cameraPosCommon:m,shaderCoordinateOrigin:y,geospatialOrigin:v}=function(e,t,n){const{viewMatrixUncentered:r,projectionMatrix:s}=e;let{viewMatrix:c,viewProjectionMatrix:d}=e,p=a,u=a,g=e.cameraPosition;const{geospatialOrigin:f,shaderCoordinateOrigin:m,offsetMode:y}=h(e,t,n);y&&(u=e.projectPosition(f||m),g=[g[0]-u[0],g[1]-u[1],g[2]-u[2]],u[3]=1,p=o.fF([],u,d),c=r||c,d=i.Jp([],s,c),d=i.Jp([],d,l));return{viewMatrix:c,viewProjectionMatrix:d,projectionCenter:p,originCommon:u,cameraPosCommon:g,shaderCoordinateOrigin:m,geospatialOrigin:f}}(t,s,p),_=t.getDistanceScales(),w=[t.width*n,t.height*n],b=o.fF([],[0,0,-t.focalDistance,1],t.projectionMatrix)[3]||1,P={project_uCoordinateSystem:s,project_uProjectionMode:t.projectionMode,project_uCoordinateOrigin:y,project_uCommonOrigin:f.slice(0,3),project_uCenter:u,project_uPseudoMeters:Boolean(t._pseudoMeters),project_uViewportSize:w,project_uDevicePixelRatio:n,project_uFocalDistance:b,project_uCommonUnitsPerMeter:_.unitsPerMeter,project_uCommonUnitsPerWorldUnit:_.unitsPerMeter,project_uCommonUnitsPerWorldUnit2:d,project_uScale:t.scale,project_uWrapLongitude:!1,project_uViewProjectionMatrix:g,project_uModelMatrix:c,project_uCameraPosition:m};if(v){const e=t.getDistanceScales(v);switch(s){case r.Df.METER_OFFSETS:P.project_uCommonUnitsPerWorldUnit=e.unitsPerMeter,P.project_uCommonUnitsPerWorldUnit2=e.unitsPerMeter2;break;case r.Df.LNGLAT:case r.Df.LNGLAT_OFFSETS:t._pseudoMeters||(P.project_uCommonUnitsPerMeter=e.unitsPerMeter),P.project_uCommonUnitsPerWorldUnit=e.unitsPerDegree,P.project_uCommonUnitsPerWorldUnit2=e.unitsPerDegree2;break;case r.Df.CARTESIAN:P.project_uCommonUnitsPerWorldUnit=[1,1,e.unitsPerMeter[2]],P.project_uCommonUnitsPerWorldUnit2=[0,0,e.unitsPerMeter2[2]]}}return P}));function h(e,t,n){void 0===n&&(n=p),n.length<3&&(n=[n[0],n[1],0]);let i,o=n,s=!0;switch(i=t===r.Df.LNGLAT_OFFSETS||t===r.Df.METER_OFFSETS?n:e.isGeospatial?[Math.fround(e.longitude),Math.fround(e.latitude),0]:null,e.projectionMode){case r.zG.WEB_MERCATOR:t!==r.Df.LNGLAT&&t!==r.Df.CARTESIAN||(i=[0,0,0],s=!1);break;case r.zG.WEB_MERCATOR_AUTO_OFFSET:t===r.Df.LNGLAT?o=i:t===r.Df.CARTESIAN&&(o=[Math.fround(e.center[0]),Math.fround(e.center[1]),0],i=e.unprojectPosition(o),o[0]-=n[0],o[1]-=n[1],o[2]-=n[2]);break;case r.zG.IDENTITY:o=e.position.map(Math.fround),o[2]=o[2]||0;break;case r.zG.GLOBE:s=!1,i=null;break;default:s=!1}return{geospatialOrigin:i,shaderCoordinateOrigin:o,offsetMode:s}}function g(e){let{viewport:t,devicePixelRatio:n=1,modelMatrix:i=null,coordinateSystem:o=r.Df.DEFAULT,coordinateOrigin:s=p,autoWrapLongitude:a=!1}=e;o===r.Df.DEFAULT&&(o=t.isGeospatial?r.Df.LNGLAT:r.Df.CARTESIAN);const l=u({viewport:t,devicePixelRatio:n,coordinateSystem:o,coordinateOrigin:s});return l.project_uWrapLongitude=a,l.project_uModelMatrix=i||c,l}},18056:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});const i={name:"project32",dependencies:[n(73782).Z],vs:"\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition\n) {\n  vec3 projectedPosition = project_position(position, position64Low);\n  mat3 rotation;\n  if (project_needs_rotation(projectedPosition, rotation)) {\n    // offset is specified as ENU\n    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe\n    offset = rotation * offset;\n  }\n  commonPosition = vec4(projectedPosition + offset, 1.0);\n  return project_common_position_to_clipspace(commonPosition);\n}\n\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset\n) {\n  vec4 commonPosition;\n  return project_position_to_clipspace(position, position64Low, offset, commonPosition);\n}\n"}},60499:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var i=n(4153),o=n(28835);const r=["longitude","latitude","zoom","bearing","pitch"],s=["longitude","latitude","zoom"];class a extends i.Z{constructor(e){void 0===e&&(e={});const t=Array.isArray(e)?e:e.transitionProps,n=Array.isArray(e)?{}:e;n.transitionProps=Array.isArray(t)?{compare:t,required:t}:t||{compare:r,required:s},super(n.transitionProps),this.opts=n}initializeProps(e,t){const n=super.initializeProps(e,t),{makeViewport:i,around:o}=this.opts;if(i&&o){const r=i(e),s=i(t),a=r.unproject(o);n.start.around=o,Object.assign(n.end,{around:s.project(a),aroundPosition:a,width:t.width,height:t.height})}return n}interpolateProps(e,t,n){const i={};for(const r of this._propsToExtract)i[r]=(0,o.t7)(e[r]||0,t[r]||0,n);if(t.aroundPosition&&this.opts.makeViewport){const r=this.opts.makeViewport({...t,...i});Object.assign(i,r.panByPosition(t.aroundPosition,(0,o.t7)(e.around,t.around,n)))}return i}}},4153:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});var i=n(28835),o=n(13405);class r{constructor(e){const{compare:t,extract:n,required:i}=e;this._propsToCompare=t,this._propsToExtract=n||t,this._requiredProps=i}arePropsEqual(e,t){for(const n of this._propsToCompare)if(!(n in e)||!(n in t)||!(0,i.fS)(e[n],t[n]))return!1;return!0}initializeProps(e,t){const n={},i={};for(const o of this._propsToExtract)(o in e||o in t)&&(n[o]=e[o],i[o]=t[o]);return this._checkRequiredProps(n),this._checkRequiredProps(i),{start:n,end:i}}getDuration(e,t){return t.transitionDuration}_checkRequiredProps(e){this._requiredProps&&this._requiredProps.forEach((t=>{const n=e[t];(0,o.Z)(Number.isFinite(n)||Array.isArray(n),t+" is required for transition")}))}}},62833:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});class i{constructor(e){this._inProgress=!1,this._handle=null,this._timeline=e,this.time=0,this.settings={duration:0}}get inProgress(){return this._inProgress}start(e){var t,n;this.cancel(),this.settings=e,this._inProgress=!0,null==(t=(n=this.settings).onStart)||t.call(n,this)}end(){var e,t;this._inProgress&&(this._timeline.removeChannel(this._handle),this._handle=null,this._inProgress=!1,null==(e=(t=this.settings).onEnd)||e.call(t,this))}cancel(){var e,t;this._inProgress&&(null==(e=(t=this.settings).onInterrupt)||e.call(t,this),this._timeline.removeChannel(this._handle),this._handle=null,this._inProgress=!1)}update(){var e,t;if(!this._inProgress)return!1;if(null===this._handle){const{_timeline:e,settings:t}=this;this._handle=e.addChannel({delay:e.getTime(),duration:t.duration})}return this.time=this._timeline.getTime(this._handle),this._onUpdate(),null==(e=(t=this.settings).onUpdate)||e.call(t,this),this._timeline.isFinished(this._handle)&&this.end(),!0}_onUpdate(){}}},13405:(e,t,n)=>{"use strict";function i(e,t){if(!e)throw new Error(t||"deck.gl: assertion failed.")}n.d(t,{Z:()=>i})},77607:(e,t,n)=>{"use strict";function i(e,t,n){if(e===t)return!0;if(!e||!t||Array.isArray(e)!==Array.isArray(t)||"object"!=typeof e||"object"!=typeof t)return!1;if(Array.isArray(t)){if(t.length!==e.length)return!1}else for(const i in t)if(!(i in e))return!1;for(const o in e)if(n){if(e[o]!==t[o]&&!i(e[o],t[o],n-1))return!1}else if(e[o]!==t[o])return!1;return!0}n.d(t,{v:()=>i})},32332:(e,t,n)=>{"use strict";function i(e,t){return void 0===t&&(t=()=>!0),Array.isArray(e)?o(e,t,[]):t(e)?[e]:[]}function o(e,t,n){let i=-1;for(;++i<e.length;){const r=e[i];Array.isArray(r)?o(r,t,n):t(r)&&n.push(r)}return n}function r(e){let{target:t,source:n,start:i=0,count:o=1}=e;const r=n.length,s=o*r;let a=0;for(let l=i;a<r;a++)t[l++]=n[a];for(;a<s;)a<s-a?(t.copyWithin(i+a,i,i+a),a*=2):(t.copyWithin(i+a,i,i+s-a),a=s);return t}n.d(t,{k:()=>r,x:()=>i})},37944:(e,t,n)=>{"use strict";n.d(t,{D0:()=>s,jB:()=>r,jr:()=>a});const i=[],o=[];function r(e,t,n){void 0===t&&(t=0),void 0===n&&(n=1/0);let r=i;const s={index:-1,data:e,target:[]};return e?"function"==typeof e[Symbol.iterator]?r=e:e.length>0&&(o.length=e.length,r=o):r=i,(t>0||Number.isFinite(n))&&(r=(Array.isArray(r)?r:Array.from(r)).slice(t,n),s.index=t-1),{iterable:r,objectInfo:s}}function s(e){return e&&e[Symbol.asyncIterator]}function a(e,t){const{size:n,stride:i,offset:o,startIndices:r,nested:s}=t,a=e.BYTES_PER_ELEMENT,l=i?i/a:n,c=o?o/a:0,d=Math.floor((e.length-c)/l);return(t,i)=>{let{index:o,target:a}=i;if(!r){const t=o*l+c;for(let i=0;i<n;i++)a[i]=e[t+i];return a}const p=r[o],u=r[o+1]||d;let h;if(s){h=new Array(u-p);for(let t=p;t<u;t++){const i=t*l+c;a=new Array(n);for(let t=0;t<n;t++)a[t]=e[i+t];h[t-p]=a}}else if(l===n)h=e.subarray(p*n+c,u*n+c);else{h=new e.constructor((u-p)*n);let t=0;for(let i=p;i<u;i++){const o=i*l+c;for(let i=0;i<n;i++)h[t++]=e[o+i]}}return h}}},89745:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});const i=new(n(91916).Z)({id:"deck"})},4563:(e,t,n)=>{"use strict";n.d(t,{Du:()=>l,Ks:()=>p,TK:()=>h,Xt:()=>a,bS:()=>r,wQ:()=>s});var i=n(67258),o=n(59122);function r(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}function s(e,t){const n=e%t;return n<0?t+n:n}function a(e){return[e[12],e[13],e[14]]}function l(e){return{left:d(e[3]+e[0],e[7]+e[4],e[11]+e[8],e[15]+e[12]),right:d(e[3]-e[0],e[7]-e[4],e[11]-e[8],e[15]-e[12]),bottom:d(e[3]+e[1],e[7]+e[5],e[11]+e[9],e[15]+e[13]),top:d(e[3]-e[1],e[7]-e[5],e[11]-e[9],e[15]-e[13]),near:d(e[3]+e[2],e[7]+e[6],e[11]+e[10],e[15]+e[14]),far:d(e[3]-e[2],e[7]-e[6],e[11]-e[10],e[15]-e[14])}}const c=new o.Z;function d(e,t,n,i){c.set(e,t,n);const r=c.len();return{distance:i/r,normal:new o.Z(-e/r,-t/r,-n/r)}}function p(e){return e-Math.fround(e)}let u;function h(e,t){const{size:n=1,startIndex:o=0}=t,r=void 0!==t.endIndex?t.endIndex:e.length,s=(r-o)/n;u=i.Z.allocate(u,s,{type:Float32Array,size:2*n});let a=o,l=0;for(;a<r;){for(let t=0;t<n;t++){const i=e[a++];u[l+t]=i,u[l+t+n]=p(i)}l+=2*n}return u.subarray(0,s*n*2)}},66508:(e,t,n)=>{"use strict";function i(e,t){if(e===t)return!0;if(Array.isArray(e)){const n=e.length;if(!t||t.length!==n)return!1;for(let i=0;i<n;i++)if(e[i]!==t[i])return!1;return!0}return!1}function o(e){let t,n={};return o=>{for(const r in o)if(!i(o[r],n[r])){t=e(o),n=o;break}return t}}n.d(t,{Z:()=>o})},16862:(e,t,n)=>{"use strict";function i(e,t){if(!t)return e;const n={...e,...t};if("defines"in t&&(n.defines={...e.defines,...t.defines}),"modules"in t&&(n.modules=(e.modules||[]).concat(t.modules),t.modules.some((e=>"project64"===e.name)))){const e=n.modules.findIndex((e=>"project32"===e.name));e>=0&&n.modules.splice(e,1)}if("inject"in t)if(e.inject){const i={...e.inject};for(const e in t.inject)i[e]=(i[e]||"")+t.inject[e];n.inject=i}else n.inject=t.inject;return n}n.d(t,{l:()=>i})},68318:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var i=n(37944),o=n(67258),r=n(13405),s=n(80241);class a{constructor(e){this.indexStarts=[0],this.vertexStarts=[0],this.vertexCount=0,this.instanceCount=0;const{attributes:t={}}=e;this.typedArrayManager=o.Z,this.attributes={},this._attributeDefs=t,this.opts=e,this.updateGeometry(e)}updateGeometry(e){Object.assign(this.opts,e);const{data:t,buffers:n={},getGeometry:i,geometryBuffer:o,positionFormat:s,dataChanged:a,normalize:l=!0}=this.opts;if(this.data=t,this.getGeometry=i,this.positionSize=o&&o.size||("XY"===s?2:3),this.buffers=n,this.normalize=l,o&&((0,r.Z)(t.startIndices),this.getGeometry=this.getGeometryFromBuffer(o),l||(n.positions=o)),this.geometryBuffer=n.positions,Array.isArray(a))for(const r of a)this._rebuildGeometry(r);else this._rebuildGeometry()}updatePartialGeometry(e){let{startRow:t,endRow:n}=e;this._rebuildGeometry({startRow:t,endRow:n})}getGeometryFromBuffer(e){const t=e.value||e;return ArrayBuffer.isView(t)?(0,i.jr)(t,{size:this.positionSize,offset:e.offset,stride:e.stride,startIndices:this.data.startIndices}):null}_allocate(e,t){const{attributes:n,buffers:i,_attributeDefs:o,typedArrayManager:r}=this;for(const s in o)if(s in i)r.release(n[s]),n[s]=null;else{const i=o[s];i.copy=t,n[s]=r.allocate(n[s],e,i)}}_forEachGeometry(e,t,n){const{data:o,getGeometry:r}=this,{iterable:s,objectInfo:a}=(0,i.jB)(o,t,n);for(const i of s){a.index++;e(r?r(i,a):null,a.index)}}_rebuildGeometry(e){if(!this.data)return;let{indexStarts:t,vertexStarts:n,instanceCount:i}=this;const{data:o,geometryBuffer:r}=this,{startRow:a=0,endRow:l=1/0}=e||{},c={};if(e||(t=[0],n=[0]),this.normalize||!r)this._forEachGeometry(((e,t)=>{const i=e&&this.normalizeGeometry(e);c[t]=i,n[t+1]=n[t]+(i?this.getGeometrySize(i):0)}),a,l),i=n[n.length-1];else if(n=o.startIndices,i=n[o.length]||0,ArrayBuffer.isView(r))i=i||r.length/this.positionSize;else if(r instanceof s.Z){const e=r.accessor.stride||4*this.positionSize;i=i||r.byteLength/e}else if(r.buffer){const e=r.stride||4*this.positionSize;i=i||r.buffer.byteLength/e}else if(r.value){const e=r.value,t=r.stride/e.BYTES_PER_ELEMENT||this.positionSize;i=i||e.length/t}this._allocate(i,Boolean(e)),this.indexStarts=t,this.vertexStarts=n,this.instanceCount=i;const d={};this._forEachGeometry(((e,o)=>{const r=c[o]||e;d.vertexStart=n[o],d.indexStart=t[o];const s=o<n.length-1?n[o+1]:i;d.geometrySize=s-n[o],d.geometryIndex=o,this.updateGeometryAttributes(r,d)}),a,l),this.vertexCount=t[t.length-1]}}},67258:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});const i=new class{constructor(e){void 0===e&&(e={}),this._pool=[],this.opts={overAlloc:2,poolSize:100},this.setOptions(e)}setOptions(e){Object.assign(this.opts,e)}allocate(e,t,n){let{size:i=1,type:o,padding:r=0,copy:s=!1,initialize:a=!1,maxCount:l}=n;const c=o||e&&e.constructor||Float32Array,d=t*i+r;if(ArrayBuffer.isView(e)){if(d<=e.length)return e;if(d*e.BYTES_PER_ELEMENT<=e.buffer.byteLength)return new c(e.buffer,0,d)}let p=1/0;l&&(p=l*i+r);const u=this._allocate(c,d,a,p);return e&&s?u.set(e):a||u.fill(0,0,4),this._release(e),u}release(e){this._release(e)}_allocate(e,t,n,i){let o=Math.max(Math.ceil(t*this.opts.overAlloc),1);o>i&&(o=i);const r=this._pool,s=e.BYTES_PER_ELEMENT*o,a=r.findIndex((e=>e.byteLength>=s));if(a>=0){const t=new e(r.splice(a,1)[0],0,o);return n&&t.fill(0),t}return new e(o)}_release(e){if(!ArrayBuffer.isView(e))return;const t=this._pool,{buffer:n}=e,{byteLength:i}=n,o=t.findIndex((e=>e.byteLength>=i));o<0?t.push(n):(o>0||t.length<this.opts.poolSize)&&t.splice(o,0,n),t.length>this.opts.poolSize&&t.shift()}}},48332:(e,t,n)=>{"use strict";n.d(t,{Z:()=>f});var i=n(89745),o=n(4563),r=n(76450),s=n(28835),a=n(59122),l=n(85975),c=n(92797),d=n(43631);const p=Math.PI/180,u=(0,o.bS)(),h=[0,0,0],g={unitsPerMeter:[1,1,1],metersPerUnit:[1,1,1]};class f{constructor(e){void 0===e&&(e={}),this._frustumPlanes={},this.id=e.id||this.constructor.displayName||"viewport",this.x=e.x||0,this.y=e.y||0,this.width=e.width||1,this.height=e.height||1,this.zoom=e.zoom||0,this.padding=e.padding,this.distanceScales=e.distanceScales||g,this.focalDistance=e.focalDistance||1,this.position=e.position||h,this.modelMatrix=e.modelMatrix||null;const{longitude:t,latitude:n}=e;this.isGeospatial=Number.isFinite(n)&&Number.isFinite(t),this._initProps(e),this._initMatrices(e),this.equals=this.equals.bind(this),this.project=this.project.bind(this),this.unproject=this.unproject.bind(this),this.projectPosition=this.projectPosition.bind(this),this.unprojectPosition=this.unprojectPosition.bind(this),this.projectFlat=this.projectFlat.bind(this),this.unprojectFlat=this.unprojectFlat.bind(this)}get subViewports(){return null}get metersPerPixel(){return this.distanceScales.metersPerUnit[2]/this.scale}get projectionMode(){return this.isGeospatial?this.zoom<12?d.zG.WEB_MERCATOR:d.zG.WEB_MERCATOR_AUTO_OFFSET:d.zG.IDENTITY}equals(e){return e instanceof f&&(this===e||e.width===this.width&&e.height===this.height&&e.scale===this.scale&&(0,s.fS)(e.projectionMatrix,this.projectionMatrix)&&(0,s.fS)(e.viewMatrix,this.viewMatrix))}project(e,t){let{topLeft:n=!0}=void 0===t?{}:t;const i=this.projectPosition(e),o=(0,c.aW)(i,this.pixelProjectionMatrix),[r,s]=o,a=n?s:this.height-s;return 2===e.length?[r,a]:[r,a,o[2]]}unproject(e,t){let{topLeft:n=!0,targetZ:i}=void 0===t?{}:t;const[o,r,s]=e,a=n?r:this.height-r,l=i&&i*this.distanceScales.unitsPerMeter[2],d=(0,c.CT)([o,a,s],this.pixelUnprojectionMatrix,l),[p,u,h]=this.unprojectPosition(d);return Number.isFinite(s)?[p,u,h]:Number.isFinite(i)?[p,u,i]:[p,u]}projectPosition(e){const[t,n]=this.projectFlat(e);return[t,n,(e[2]||0)*this.distanceScales.unitsPerMeter[2]]}unprojectPosition(e){const[t,n]=this.unprojectFlat(e);return[t,n,(e[2]||0)*this.distanceScales.metersPerUnit[2]]}projectFlat(e){if(this.isGeospatial){const t=(0,c.w5)(e);return t[1]=(0,s.uZ)(t[1],-318,830),t}return e}unprojectFlat(e){return this.isGeospatial?(0,c.es)(e):e}getBounds(e){void 0===e&&(e={});const t={targetZ:e.z||0},n=this.unproject([0,0],t),i=this.unproject([this.width,0],t),o=this.unproject([0,this.height],t),r=this.unproject([this.width,this.height],t);return[Math.min(n[0],i[0],o[0],r[0]),Math.min(n[1],i[1],o[1],r[1]),Math.max(n[0],i[0],o[0],r[0]),Math.max(n[1],i[1],o[1],r[1])]}getDistanceScales(e){return e?(0,c.ro)({longitude:e[0],latitude:e[1],highPrecision:!0}):this.distanceScales}containsPixel(e){let{x:t,y:n,width:i=1,height:o=1}=e;return t<this.x+this.width&&this.x<t+i&&n<this.y+this.height&&this.y<n+o}getFrustumPlanes(){return this._frustumPlanes.near||Object.assign(this._frustumPlanes,(0,o.Du)(this.viewProjectionMatrix)),this._frustumPlanes}panByPosition(e,t){return null}_initProps(e){const t=e.longitude,n=e.latitude;this.isGeospatial&&(Number.isFinite(e.zoom)||(this.zoom=(0,c.Bf)({latitude:n})+Math.log2(this.focalDistance)),this.distanceScales=e.distanceScales||(0,c.ro)({latitude:n,longitude:t}));const i=Math.pow(2,this.zoom);this.scale=i;const{position:o,modelMatrix:s}=e;let l=h;if(o&&(l=s?new r.Z(s).transformAsVector(o,[]):o),this.isGeospatial){const e=this.projectPosition([t,n,0]);this.center=new a.Z(l).scale(this.distanceScales.unitsPerMeter).add(e)}else this.center=this.projectPosition(l)}_initMatrices(e){const{viewMatrix:t=u,projectionMatrix:n=null,orthographic:c=!1,fovyRadians:d,fovy:h=75,near:g=.1,far:f=1e3,padding:m=null,focalDistance:y=1}=e;this.viewMatrixUncentered=t,this.viewMatrix=(new r.Z).multiplyRight(t).translate(new a.Z(this.center).negate()),this.projectionMatrix=n||function(e){let{width:t,height:n,orthographic:i,fovyRadians:o,focalDistance:a,padding:l,near:c,far:d}=e;const p=t/n,u=i?(new r.Z).orthographic({fovy:o,aspect:p,focalDistance:a,near:c,far:d}):(new r.Z).perspective({fovy:o,aspect:p,near:c,far:d});if(l){const{left:e=0,right:i=0,top:o=0,bottom:r=0}=l,a=(0,s.uZ)((e+t-i)/2,0,t)-t/2,c=(0,s.uZ)((o+n-r)/2,0,n)-n/2;u[8]-=2*a/t,u[9]+=2*c/n}return u}({width:this.width,height:this.height,orthographic:c,fovyRadians:d||h*p,focalDistance:y,padding:m,near:g,far:f});const v=(0,o.bS)();l.Jp(v,v,this.projectionMatrix),l.Jp(v,v,this.viewMatrix),this.viewProjectionMatrix=v,this.viewMatrixInverse=l.U_([],this.viewMatrix)||this.viewMatrix,this.cameraPosition=(0,o.Xt)(this.viewMatrixInverse);const _=(0,o.bS)(),w=(0,o.bS)();l.bA(_,_,[this.width/2,-this.height/2,1]),l.Iu(_,_,[1,-1,0]),l.Jp(w,_,this.viewProjectionMatrix),this.pixelProjectionMatrix=w,this.pixelUnprojectionMatrix=l.U_((0,o.bS)(),this.pixelProjectionMatrix),this.pixelUnprojectionMatrix||i.Z.warn("Pixel project matrix not invertible")()}}f.displayName="Viewport"},11199:(e,t,n)=>{"use strict";n.d(t,{Z:()=>l});var i=n(48332),o=n(92797),r=n(31437),s=n(28835),a=n(76450);class l extends i.Z{constructor(e){void 0===e&&(e={});const{latitude:t=0,longitude:n=0,zoom:i=0,pitch:r=0,bearing:l=0,nearZMultiplier:c=.1,farZMultiplier:d=1.01,orthographic:p=!1,projectionMatrix:u,repeat:h=!1,worldOffset:g=0,position:f,padding:m,legacyMeterSizes:y=!1}=e;let{width:v,height:_,altitude:w=1.5}=e;const b=Math.pow(2,i);let P;v=v||1,_=_||1;let x=null;if(u)w=u[5]/2,P=(0,o.Lu)(w);else{let n;if(e.fovy?(P=e.fovy,w=(0,o.sj)(P)):P=(0,o.Lu)(w),m){const{top:e=0,bottom:t=0}=m;n=[0,(0,s.uZ)((e+_-t)/2,0,_)-_/2]}x=(0,o.wl)({width:v,height:_,scale:b,center:f&&[0,0,f[2]*(0,o.NC)(t)],offset:n,pitch:r,fovy:P,nearZMultiplier:c,farZMultiplier:d})}let k=(0,o.lf)({height:_,pitch:r,bearing:l,scale:b,altitude:w});if(g){k=(new a.Z).translate([512*g,0,0]).multiplyLeft(k)}super({...e,width:v,height:_,viewMatrix:k,longitude:n,latitude:t,zoom:i,...x,fovy:P,focalDistance:w}),this.latitude=t,this.longitude=n,this.zoom=i,this.pitch=r,this.bearing=l,this.altitude=w,this.fovy=P,this.orthographic=p,this._subViewports=h?[]:null,this._pseudoMeters=y,Object.freeze(this)}get subViewports(){if(this._subViewports&&!this._subViewports.length){const e=this.getBounds(),t=Math.floor((e[0]+180)/360),n=Math.ceil((e[2]-180)/360);for(let i=t;i<=n;i++){const e=i?new l({...this,worldOffset:i}):this;this._subViewports.push(e)}}return this._subViewports}projectPosition(e){if(this._pseudoMeters)return super.projectPosition(e);const[t,n]=this.projectFlat(e);return[t,n,(e[2]||0)*(0,o.NC)(e[1])]}unprojectPosition(e){if(this._pseudoMeters)return super.unprojectPosition(e);const[t,n]=this.unprojectFlat(e);return[t,n,(e[2]||0)/(0,o.NC)(n)]}addMetersToLngLat(e,t){return(0,o.eG)(e,t)}panByPosition(e,t){const n=(0,o.CT)(t,this.pixelUnprojectionMatrix),i=this.projectFlat(e),s=r.IH([],i,r.tk([],n)),a=r.IH([],this.center,s),[l,c]=this.unprojectFlat(a);return{longitude:l,latitude:c}}getBounds(e){void 0===e&&(e={});const t=(0,o.zX)(this,e.z||0);return[Math.min(t[0][0],t[1][0],t[2][0],t[3][0]),Math.min(t[0][1],t[1][1],t[2][1],t[3][1]),Math.max(t[0][0],t[1][0],t[2][0],t[3][0]),Math.max(t[0][1],t[1][1],t[2][1],t[3][1])]}fitBounds(e,t){void 0===t&&(t={});const{width:n,height:i}=this,{longitude:r,latitude:s,zoom:a}=(0,o.Xg)({width:n,height:i,bounds:e,...t});return new l({width:n,height:i,longitude:r,latitude:s,zoom:a})}}l.displayName="WebMercatorViewport"},6362:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var i=n(45213),o=n(11199),r=n(26810);class s extends i.Z{get ViewportType(){return o.Z}get ControllerType(){return r.Z}}s.displayName="MapView"},45213:(e,t,n)=>{"use strict";n.d(t,{Z:()=>c});var i=n(48332);const o=/([0-9]+\.?[0-9]*)(%|px)/;function r(e){switch(typeof e){case"number":return{position:e,relative:!1};case"string":const t=o.exec(e);if(t&&t.length>=3){const e="%"===t[2],n=parseFloat(t[1]);return{position:e?n/100:n,relative:e}}default:throw new Error("Could not parse position string "+e)}}function s(e,t){return e.relative?Math.round(e.position*t):e.position}var a=n(77607),l=n(13405);class c{constructor(e){const{id:t,x:n=0,y:o=0,width:s="100%",height:a="100%",padding:c=null,viewportInstance:d}=e||{};(0,l.Z)(!d||d instanceof i.Z),this.viewportInstance=d,this.id=t||this.constructor.displayName||"view",this.props={...e,id:this.id},this._x=r(n),this._y=r(o),this._width=r(s),this._height=r(a),this._padding=c&&{left:r(c.left||0),right:r(c.right||0),top:r(c.top||0),bottom:r(c.bottom||0)},this.equals=this.equals.bind(this),Object.seal(this)}equals(e){return this===e||(this.viewportInstance?!!e.viewportInstance&&this.viewportInstance.equals(e.viewportInstance):this.ViewportType===e.ViewportType&&(0,a.v)(this.props,e.props,2))}makeViewport(e){let{width:t,height:n,viewState:i}=e;if(this.viewportInstance)return this.viewportInstance;i=this.filterViewState(i);const o=this.getDimensions({width:t,height:n});return new this.ViewportType({...i,...this.props,...o})}getViewStateId(){const{viewState:e}=this.props;return"string"==typeof e?e:(null==e?void 0:e.id)||this.id}filterViewState(e){if(this.props.viewState&&"object"==typeof this.props.viewState){if(!this.props.viewState.id)return this.props.viewState;const t={...e};for(const e in this.props.viewState)"id"!==e&&(t[e]=this.props.viewState[e]);return t}return e}getDimensions(e){let{width:t,height:n}=e;const i={x:s(this._x,t),y:s(this._y,n),width:s(this._width,t),height:s(this._height,n)};return this._padding&&(i.padding={left:s(this._padding.left,t),top:s(this._padding.top,n),right:s(this._padding.right,t),bottom:s(this._padding.bottom,n)}),i}get controller(){const e=this.props.controller;return e?!0===e?{type:this.ControllerType}:"function"==typeof e?{type:e}:{type:this.ControllerType,...e}:null}}},62253:(e,t,n)=>{"use strict";n.d(t,{Z:()=>p});var i=n(47251),o=n(18056),r=n(71693),s=n(43631),a=n(95321),l=n(15804);const c=[0,0,0,255],d={getSourcePosition:{type:"accessor",value:e=>e.sourcePosition},getTargetPosition:{type:"accessor",value:e=>e.targetPosition},getSourceColor:{type:"accessor",value:c},getTargetColor:{type:"accessor",value:c},getWidth:{type:"accessor",value:1},getHeight:{type:"accessor",value:1},getTilt:{type:"accessor",value:0},greatCircle:!1,widthUnits:"pixels",widthScale:{type:"number",value:1,min:0},widthMinPixels:{type:"number",value:0,min:0},widthMaxPixels:{type:"number",value:Number.MAX_SAFE_INTEGER,min:0}};class p extends i.Z{getBounds(){const e=this.getAttributeManager();if(!e)return null;const{instanceSourcePositions:t,instanceTargetPositions:n}=e.attributes,i=t.getBounds(),o=n.getBounds();return i&&o&&[[Math.min(i[0][0],o[0][0]),Math.min(i[0][1],o[0][1])],[Math.max(i[1][0],o[1][0]),Math.max(i[1][1],o[1][1])]]}getShaders(){return super.getShaders({vs:"#define SHADER_NAME arc-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec4 instanceSourceColors;\nattribute vec4 instanceTargetColors;\nattribute vec3 instanceSourcePositions;\nattribute vec3 instanceSourcePositions64Low;\nattribute vec3 instanceTargetPositions;\nattribute vec3 instanceTargetPositions64Low;\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\nattribute float instanceHeights;\nattribute float instanceTilts;\n\nuniform bool greatCircle;\nuniform bool useShortestPath;\nuniform float numSegments;\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform int widthUnits;\n\nvarying vec4 vColor;\nvarying vec2 uv;\nvarying float isValid;\n\nfloat paraboloid(float distance, float sourceZ, float targetZ, float ratio) {\n\n  float deltaZ = targetZ - sourceZ;\n  float dh = distance * instanceHeights;\n  if (dh == 0.0) {\n    return sourceZ + deltaZ * ratio;\n  }\n  float unitZ = deltaZ / dh;\n  float p2 = unitZ * unitZ + 1.0;\n  float dir = step(deltaZ, 0.0);\n  float z0 = mix(sourceZ, targetZ, dir);\n  float r = mix(ratio, 1.0 - ratio, dir);\n  return sqrt(r * (p2 - r)) * dh + z0;\n}\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  return dir_screenspace * offset_direction * width / 2.0;\n}\n\nfloat getSegmentRatio(float index) {\n  return smoothstep(0.0, 1.0, index / (numSegments - 1.0));\n}\n\nvec3 interpolateFlat(vec3 source, vec3 target, float segmentRatio) {\n  float distance = length(source.xy - target.xy);\n  float z = paraboloid(distance, source.z, target.z, segmentRatio);\n\n  float tiltAngle = radians(instanceTilts);\n  vec2 tiltDirection = normalize(target.xy - source.xy);\n  vec2 tilt = vec2(-tiltDirection.y, tiltDirection.x) * z * sin(tiltAngle);\n\n  return vec3(\n    mix(source.xy, target.xy, segmentRatio) + tilt,\n    z * cos(tiltAngle)\n  );\n}\nfloat getAngularDist (vec2 source, vec2 target) {\n  vec2 sourceRadians = radians(source);\n  vec2 targetRadians = radians(target);\n  vec2 sin_half_delta = sin((sourceRadians - targetRadians) / 2.0);\n  vec2 shd_sq = sin_half_delta * sin_half_delta;\n\n  float a = shd_sq.y + cos(sourceRadians.y) * cos(targetRadians.y) * shd_sq.x;\n  return 2.0 * asin(sqrt(a));\n}\n\nvec3 interpolateGreatCircle(vec3 source, vec3 target, vec3 source3D, vec3 target3D, float angularDist, float t) {\n  vec2 lngLat;\n  if(abs(angularDist - PI) < 0.001) {\n    lngLat = (1.0 - t) * source.xy + t * target.xy;\n  } else {\n    float a = sin((1.0 - t) * angularDist);\n    float b = sin(t * angularDist);\n    vec3 p = source3D.yxz * a + target3D.yxz * b;\n    lngLat = degrees(vec2(atan(p.y, -p.x), atan(p.z, length(p.xy))));\n  }\n\n  float z = paraboloid(angularDist * EARTH_RADIUS, source.z, target.z, t);\n\n  return vec3(lngLat, z);\n}\n\nvoid main(void) {\n  geometry.worldPosition = instanceSourcePositions;\n  geometry.worldPositionAlt = instanceTargetPositions;\n\n  float segmentIndex = positions.x;\n  float segmentRatio = getSegmentRatio(segmentIndex);\n  float prevSegmentRatio = getSegmentRatio(max(0.0, segmentIndex - 1.0));\n  float nextSegmentRatio = getSegmentRatio(min(numSegments - 1.0, segmentIndex + 1.0));\n  float indexDir = mix(-1.0, 1.0, step(segmentIndex, 0.0));\n  isValid = 1.0;\n\n  uv = vec2(segmentRatio, positions.y);\n  geometry.uv = uv;\n  geometry.pickingColor = instancePickingColors;\n\n  vec4 curr;\n  vec4 next;\n  vec3 source;\n  vec3 target;\n\n  if ((greatCircle || project_uProjectionMode == PROJECTION_MODE_GLOBE) && project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n    source = project_globe_(vec3(instanceSourcePositions.xy, 0.0));\n    target = project_globe_(vec3(instanceTargetPositions.xy, 0.0));\n    float angularDist = getAngularDist(instanceSourcePositions.xy, instanceTargetPositions.xy);\n\n    vec3 prevPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, prevSegmentRatio);\n    vec3 currPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, segmentRatio);\n    vec3 nextPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, nextSegmentRatio);\n\n    if (abs(currPos.x - prevPos.x) > 180.0) {\n      indexDir = -1.0;\n      isValid = 0.0;\n    } else if (abs(currPos.x - nextPos.x) > 180.0) {\n      indexDir = 1.0;\n      isValid = 0.0;\n    }\n    nextPos = indexDir < 0.0 ? prevPos : nextPos;\n    nextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\n\n    if (isValid == 0.0) {\n      nextPos.x += nextPos.x > 0.0 ? -360.0 : 360.0;\n      float t = ((currPos.x > 0.0 ? 180.0 : -180.0) - currPos.x) / (nextPos.x - currPos.x);\n      currPos = mix(currPos, nextPos, t);\n      segmentRatio = mix(segmentRatio, nextSegmentRatio, t);\n    }\n\n    vec3 currPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, segmentRatio);\n    vec3 nextPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, nextSegmentRatio);\n  \n    curr = project_position_to_clipspace(currPos, currPos64Low, vec3(0.0), geometry.position);\n    next = project_position_to_clipspace(nextPos, nextPos64Low, vec3(0.0));\n  \n  } else {\n    vec3 source_world = instanceSourcePositions;\n    vec3 target_world = instanceTargetPositions;\n    if (useShortestPath) {\n      source_world.x = mod(source_world.x + 180., 360.0) - 180.;\n      target_world.x = mod(target_world.x + 180., 360.0) - 180.;\n\n      float deltaLng = target_world.x - source_world.x;\n      if (deltaLng > 180.) target_world.x -= 360.;\n      if (deltaLng < -180.) source_world.x -= 360.;\n    }\n    source = project_position(source_world, instanceSourcePositions64Low);\n    target = project_position(target_world, instanceTargetPositions64Low);\n    float antiMeridianX = 0.0;\n\n    if (useShortestPath) {\n      if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\n        antiMeridianX = -(project_uCoordinateOrigin.x + 180.) / 360. * TILE_SIZE;\n      }\n      float thresholdRatio = (antiMeridianX - source.x) / (target.x - source.x);\n\n      if (prevSegmentRatio <= thresholdRatio && nextSegmentRatio > thresholdRatio) {\n        isValid = 0.0;\n        indexDir = sign(segmentRatio - thresholdRatio);\n        segmentRatio = thresholdRatio;\n      }\n    }\n\n    nextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\n    vec3 currPos = interpolateFlat(source, target, segmentRatio);\n    vec3 nextPos = interpolateFlat(source, target, nextSegmentRatio);\n\n    if (useShortestPath) {\n      if (nextPos.x < antiMeridianX) {\n        currPos.x += TILE_SIZE;\n        nextPos.x += TILE_SIZE;\n      }\n    }\n\n    curr = project_common_position_to_clipspace(vec4(currPos, 1.0));\n    next = project_common_position_to_clipspace(vec4(nextPos, 1.0));\n    geometry.position = vec4(currPos, 1.0);\n  }\n  float widthPixels = clamp(\n    project_size_to_pixel(instanceWidths * widthScale, widthUnits),\n    widthMinPixels, widthMaxPixels\n  );\n  vec3 offset = vec3(\n    getExtrusionOffset((next.xy - curr.xy) * indexDir, positions.y, widthPixels),\n    0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  DECKGL_FILTER_GL_POSITION(curr, geometry);\n  gl_Position = curr + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\n\n  vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio);\n  vColor = vec4(color.rgb, color.a * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#define SHADER_NAME arc-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 uv;\nvarying float isValid;\n\nvoid main(void) {\n  if (isValid == 0.0) {\n    discard;\n  }\n\n  gl_FragColor = vColor;\n  geometry.uv = uv;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[o.Z,r.Z]})}get wrapLongitude(){return!1}initializeState(){this.getAttributeManager().addInstanced({instanceSourcePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getSourcePosition"},instanceTargetPositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getTargetPosition"},instanceSourceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getSourceColor",defaultValue:c},instanceTargetColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getTargetColor",defaultValue:c},instanceWidths:{size:1,transition:!0,accessor:"getWidth",defaultValue:1},instanceHeights:{size:1,transition:!0,accessor:"getHeight",defaultValue:1},instanceTilts:{size:1,transition:!0,accessor:"getTilt",defaultValue:0}})}updateState(e){if(super.updateState(e),e.changeFlags.extensionsChanged){var t;const{gl:e}=this.context;null==(t=this.state.model)||t.delete(),this.state.model=this._getModel(e),this.getAttributeManager().invalidateAll()}}draw(e){let{uniforms:t}=e;const{widthUnits:n,widthScale:i,widthMinPixels:o,widthMaxPixels:r,greatCircle:a,wrapLongitude:l}=this.props;this.state.model.setUniforms(t).setUniforms({greatCircle:a,widthUnits:s.iI[n],widthScale:i,widthMinPixels:o,widthMaxPixels:r,useShortestPath:l}).draw()}_getModel(e){let t=[];for(let i=0;i<50;i++)t=t.concat([i,1,0,i,-1,0]);const n=new a.Z(e,{...this.getShaders(),id:this.props.id,geometry:new l.Z({drawMode:5,attributes:{positions:new Float32Array(t)}}),isInstanced:!0});return n.setUniforms({numSegments:50}),n}}p.layerName="ArcLayer",p.defaultProps=d},99147:(e,t,n)=>{"use strict";n.d(t,{Z:()=>m});var i=n(43631),o=n(47251),r=n(18056),s=n(71693),a=n(95321),l=n(15804),c=n(92797),d=n(28835);const p=new Uint16Array([0,2,1,0,3,2]),u=new Float32Array([0,1,0,0,1,0,1,1]);function h(e,t){if(!t)return function(e){const t=new Float64Array(12);for(let n=0;n<e.length;n++)t[3*n+0]=e[n][0],t[3*n+1]=e[n][1],t[3*n+2]=e[n][2]||0;return{vertexCount:6,positions:t,indices:p,texCoords:u}}(e);const n=Math.max(Math.abs(e[0][0]-e[3][0]),Math.abs(e[1][0]-e[2][0])),i=Math.max(Math.abs(e[1][1]-e[0][1]),Math.abs(e[2][1]-e[3][1])),o=Math.ceil(n/t)+1,r=Math.ceil(i/t)+1,s=(o-1)*(r-1)*6,a=new Uint32Array(s),l=new Float32Array(o*r*2),c=new Float64Array(o*r*3);let d=0,h=0;for(let p=0;p<o;p++){const t=p/(o-1);for(let n=0;n<r;n++){const i=n/(r-1),o=g(e,t,i);c[3*d+0]=o[0],c[3*d+1]=o[1],c[3*d+2]=o[2]||0,l[2*d+0]=t,l[2*d+1]=1-i,p>0&&n>0&&(a[h++]=d-r,a[h++]=d-r-1,a[h++]=d-1,a[h++]=d-r,a[h++]=d-1,a[h++]=d),d++}}return{vertexCount:s,positions:c,indices:a,texCoords:l}}function g(e,t,n){return(0,d.t7)((0,d.t7)(e[0],e[1],n),(0,d.t7)(e[3],e[2],n),t)}const f={image:{type:"image",value:null,async:!0},bounds:{type:"array",value:[1,0,0,1],compare:!0},_imageCoordinateSystem:i.Df.DEFAULT,desaturate:{type:"number",min:0,max:1,value:0},transparentColor:{type:"color",value:[0,0,0,0]},tintColor:{type:"color",value:[255,255,255]}};class m extends o.Z{getShaders(){return super.getShaders({vs:"\n#define SHADER_NAME bitmap-layer-vertex-shader\n\nattribute vec2 texCoords;\nattribute vec3 positions;\nattribute vec3 positions64Low;\n\nvarying vec2 vTexCoord;\nvarying vec2 vTexPos;\n\nuniform float coordinateConversion;\n\nconst vec3 pickingColor = vec3(1.0, 0.0, 0.0);\n\nvoid main(void) {\n  geometry.worldPosition = positions;\n  geometry.uv = texCoords;\n  geometry.pickingColor = pickingColor;\n\n  gl_Position = project_position_to_clipspace(positions, positions64Low, vec3(0.0), geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  vTexCoord = texCoords;\n\n  if (coordinateConversion < -0.5) {\n    vTexPos = geometry.position.xy + project_uCommonOrigin.xy;\n  } else if (coordinateConversion > 0.5) {\n    vTexPos = geometry.worldPosition.xy;\n  }\n\n  vec4 color = vec4(0.0);\n  DECKGL_FILTER_COLOR(color, geometry);\n}\n",fs:"\n#define SHADER_NAME bitmap-layer-fragment-shader\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform sampler2D bitmapTexture;\n\nvarying vec2 vTexCoord;\nvarying vec2 vTexPos;\n\nuniform float desaturate;\nuniform vec4 transparentColor;\nuniform vec3 tintColor;\nuniform float opacity;\n\nuniform float coordinateConversion;\nuniform vec4 bounds;\n\n/* projection utils */\nconst float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / PI / 2.0;\n\n// from degrees to Web Mercator\nvec2 lnglat_to_mercator(vec2 lnglat) {\n  float x = lnglat.x;\n  float y = clamp(lnglat.y, -89.9, 89.9);\n  return vec2(\n    radians(x) + PI,\n    PI + log(tan(PI * 0.25 + radians(y) * 0.5))\n  ) * WORLD_SCALE;\n}\n\n// from Web Mercator to degrees\nvec2 mercator_to_lnglat(vec2 xy) {\n  xy /= WORLD_SCALE;\n  return degrees(vec2(\n    xy.x - PI,\n    atan(exp(xy.y - PI)) * 2.0 - PI * 0.5\n  ));\n}\n/* End projection utils */\n\n// apply desaturation\nvec3 color_desaturate(vec3 color) {\n  float luminance = (color.r + color.g + color.b) * 0.333333333;\n  return mix(color, vec3(luminance), desaturate);\n}\n\n// apply tint\nvec3 color_tint(vec3 color) {\n  return color * tintColor;\n}\n\n// blend with background color\nvec4 apply_opacity(vec3 color, float alpha) {\n  if (transparentColor.a == 0.0) {\n    return vec4(color, alpha);\n  }\n  float blendedAlpha = alpha + transparentColor.a * (1.0 - alpha);\n  float highLightRatio = alpha / blendedAlpha;\n  vec3 blendedRGB = mix(transparentColor.rgb, color, highLightRatio);\n  return vec4(blendedRGB, blendedAlpha);\n}\n\nvec2 getUV(vec2 pos) {\n  return vec2(\n    (pos.x - bounds[0]) / (bounds[2] - bounds[0]),\n    (pos.y - bounds[3]) / (bounds[1] - bounds[3])\n  );\n}\n\n\nvec3 packUVsIntoRGB(vec2 uv) {\n  // Extract the top 8 bits. We want values to be truncated down so we can add a fraction\n  vec2 uv8bit = floor(uv * 256.);\n\n  // Calculate the normalized remainders of u and v parts that do not fit into 8 bits\n  // Scale and clamp to 0-1 range\n  vec2 uvFraction = fract(uv * 256.);\n  vec2 uvFraction4bit = floor(uvFraction * 16.);\n\n  // Remainder can be encoded in blue channel, encode as 4 bits for pixel coordinates\n  float fractions = uvFraction4bit.x + uvFraction4bit.y * 16.;\n\n  return vec3(uv8bit, fractions) / 255.;\n}\n\n\nvoid main(void) {\n  vec2 uv = vTexCoord;\n  if (coordinateConversion < -0.5) {\n    vec2 lnglat = mercator_to_lnglat(vTexPos);\n    uv = getUV(lnglat);\n  } else if (coordinateConversion > 0.5) {\n    vec2 commonPos = lnglat_to_mercator(vTexPos);\n    uv = getUV(commonPos);\n  }\n  vec4 bitmapColor = texture2D(bitmapTexture, uv);\n\n  gl_FragColor = apply_opacity(color_tint(color_desaturate(bitmapColor.rgb)), bitmapColor.a * opacity);\n\n  geometry.uv = uv;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n\n  if (picking_uActive && !picking_uAttribute) {\n    // Since instance information is not used, we can use picking color for pixel index\n    gl_FragColor.rgb = packUVsIntoRGB(uv);\n  }\n}\n",modules:[r.Z,s.Z]})}initializeState(){const e=this.getAttributeManager();e.remove(["instancePickingColors"]);const t=!0;e.add({indices:{size:1,isIndexed:!0,update:e=>e.value=this.state.mesh.indices,noAlloc:t},positions:{size:3,type:5130,fp64:this.use64bitPositions(),update:e=>e.value=this.state.mesh.positions,noAlloc:t},texCoords:{size:2,update:e=>e.value=this.state.mesh.texCoords,noAlloc:t}})}updateState(e){let{props:t,oldProps:n,changeFlags:i}=e;const o=this.getAttributeManager();if(i.extensionsChanged){var r;const{gl:e}=this.context;null==(r=this.state.model)||r.delete(),this.state.model=this._getModel(e),o.invalidateAll()}if(t.bounds!==n.bounds){const e=this.state.mesh,t=this._createMesh();this.state.model.setVertexCount(t.vertexCount);for(const n in t)e&&e[n]!==t[n]&&o.invalidate(n);this.setState({mesh:t,...this._getCoordinateUniforms()})}else t._imageCoordinateSystem!==n._imageCoordinateSystem&&this.setState(this._getCoordinateUniforms())}getPickingInfo(e){const{image:t}=this.props,n=e.info;if(!n.color||!t)return n.bitmap=null,n;const{width:i,height:o}=t;n.index=0;const r=function(e){const[t,n,i]=e;return[(t+(15&i)/16)/256,(n+(240&i)/256)/256]}(n.color),s=[Math.floor(r[0]*i),Math.floor(r[1]*o)];return n.bitmap={size:{width:i,height:o},uv:r,pixel:s},n}disablePickingIndex(){this.setState({disablePicking:!0})}restorePickingColors(){this.setState({disablePicking:!1})}_updateAutoHighlight(e){super._updateAutoHighlight({...e,color:this.encodePickingColor(0)})}_createMesh(){const{bounds:e}=this.props;let t=e;return y(e)&&(t=[[e[0],e[1]],[e[0],e[3]],[e[2],e[3]],[e[2],e[1]]]),h(t,this.context.viewport.resolution)}_getModel(e){return e?new a.Z(e,{...this.getShaders(),id:this.props.id,geometry:new l.Z({drawMode:4,vertexCount:6}),isInstanced:!1}):null}draw(e){const{uniforms:t,moduleParameters:n}=e,{model:i,coordinateConversion:o,bounds:r,disablePicking:s}=this.state,{image:a,desaturate:l,transparentColor:c,tintColor:d}=this.props;n.pickingActive&&s||a&&i&&i.setUniforms(t).setUniforms({bitmapTexture:a,desaturate:l,transparentColor:c.map((e=>e/255)),tintColor:d.slice(0,3).map((e=>e/255)),coordinateConversion:o,bounds:r}).draw()}_getCoordinateUniforms(){const{LNGLAT:e,CARTESIAN:t,DEFAULT:n}=i.Df;let{_imageCoordinateSystem:o}=this.props;if(o!==n){const{bounds:n}=this.props;if(!y(n))throw new Error("_imageCoordinateSystem only supports rectangular bounds");const i=this.context.viewport.resolution?e:t;if(o=o===e?e:t,o===e&&i===t)return{coordinateConversion:-1,bounds:n};if(o===t&&i===e){const e=(0,c.w5)([n[0],n[1]]),t=(0,c.w5)([n[2],n[3]]);return{coordinateConversion:1,bounds:[e[0],e[1],t[0],t[1]]}}}return{coordinateConversion:0,bounds:[0,0,0,0]}}}function y(e){return Number.isFinite(e[0])}m.layerName="BitmapLayer",m.defaultProps=f},68797:(e,t,n)=>{"use strict";n.d(t,{Z:()=>_});var i=n(47251),o=n(18056),r=n(89771),s=n(71693),a=n(43631),l=n(7092),c=n(19227),d=n(83757),p=n(95321),u=n(89745),h=n(15804),g=n(51355),f=n(59021);class m extends h.Z{constructor(e){const{id:t=(0,g.hQ)("column-geometry")}=e,{indices:n,attributes:i}=function(e){const{radius:t,height:n=1,nradial:i=10}=e;let{vertices:o}=e;o&&(u.Z.assert(o.length>=i),o=o.flatMap((e=>[e[0],e[1]])),(0,f.Ny)(o,f.wG.COUNTER_CLOCKWISE));const r=n>0,s=i+1,a=r?3*s+1:i,l=2*Math.PI/i,c=new Uint16Array(r?3*i*2:0),d=new Float32Array(3*a),p=new Float32Array(3*a);let h=0;if(r){for(let e=0;e<s;e++){const r=e*l,s=e%i,a=Math.sin(r),c=Math.cos(r);for(let e=0;e<2;e++)d[h+0]=o?o[2*s]:c*t,d[h+1]=o?o[2*s+1]:a*t,d[h+2]=(.5-e)*n,p[h+0]=o?o[2*s]:c,p[h+1]=o?o[2*s+1]:a,h+=3}d[h+0]=d[h-3],d[h+1]=d[h-2],d[h+2]=d[h-1],h+=3}for(let u=r?0:1;u<s;u++){const e=Math.floor(u/2)*Math.sign(.5-u%2),r=e*l,s=(e+i)%i,a=Math.sin(r),c=Math.cos(r);d[h+0]=o?o[2*s]:c*t,d[h+1]=o?o[2*s+1]:a*t,d[h+2]=n/2,p[h+2]=1,h+=3}if(r){let e=0;for(let t=0;t<i;t++)c[e++]=2*t+0,c[e++]=2*t+2,c[e++]=2*t+0,c[e++]=2*t+1,c[e++]=2*t+1,c[e++]=2*t+3}return{indices:c,attributes:{POSITION:{size:3,value:d},NORMAL:{size:3,value:p}}}}(e);super({...e,id:t,indices:n,attributes:i})}}const y=[0,0,0,255],v={diskResolution:{type:"number",min:4,value:20},vertices:null,radius:{type:"number",min:0,value:1e3},angle:{type:"number",value:0},offset:{type:"array",value:[0,0]},coverage:{type:"number",min:0,max:1,value:1},elevationScale:{type:"number",min:0,value:1},radiusUnits:"meters",lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,extruded:!0,wireframe:!1,filled:!0,stroked:!1,getPosition:{type:"accessor",value:e=>e.position},getFillColor:{type:"accessor",value:y},getLineColor:{type:"accessor",value:y},getLineWidth:{type:"accessor",value:1},getElevation:{type:"accessor",value:1e3},material:!0,getColor:{deprecatedFor:["getFillColor","getLineColor"]}};class _ extends i.Z{getShaders(){const{gl:e}=this.context,t=!(0,l.D0)(e),n={},i=this.props.flatShading&&(0,c.U6)(e,d.h.GLSL_DERIVATIVES);return i&&(n.FLAT_SHADING=1),super.getShaders({vs:"#version 300 es\n\n#define SHADER_NAME column-layer-vertex-shader\n\nin vec3 positions;\nin vec3 normals;\n\nin vec3 instancePositions;\nin float instanceElevations;\nin vec3 instancePositions64Low;\nin vec4 instanceFillColors;\nin vec4 instanceLineColors;\nin float instanceStrokeWidths;\n\nin vec3 instancePickingColors;\nuniform float opacity;\nuniform float radius;\nuniform float angle;\nuniform vec2 offset;\nuniform bool extruded;\nuniform bool stroked;\nuniform bool isStroke;\nuniform float coverage;\nuniform float elevationScale;\nuniform float edgeDistance;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform int radiusUnits;\nuniform int widthUnits;\nout vec4 vColor;\n#ifdef FLAT_SHADING\nout vec4 position_commonspace;\n#endif\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n\n  vec4 color = isStroke ? instanceLineColors : instanceFillColors;\n  mat2 rotationMatrix = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n  float elevation = 0.0;\n  float strokeOffsetRatio = 1.0;\n\n  if (extruded) {\n    elevation = instanceElevations * (positions.z + 1.0) / 2.0 * elevationScale;\n  } else if (stroked) {\n    float widthPixels = clamp(\n      project_size_to_pixel(instanceStrokeWidths * widthScale, widthUnits),\n      widthMinPixels, widthMaxPixels) / 2.0;\n    float halfOffset = project_pixel_size(widthPixels) / project_size(edgeDistance * coverage * radius);\n    if (isStroke) {\n      strokeOffsetRatio -= sign(positions.z) * halfOffset;\n    } else {\n      strokeOffsetRatio -= halfOffset;\n    }\n  }\n  float shouldRender = float(color.a > 0.0 && instanceElevations >= 0.0);\n  float dotRadius = radius * coverage * shouldRender;\n\n  geometry.pickingColor = instancePickingColors;\n  vec3 centroidPosition = vec3(instancePositions.xy, instancePositions.z + elevation);\n  vec3 centroidPosition64Low = instancePositions64Low;\n  vec2 offset = (rotationMatrix * positions.xy * strokeOffsetRatio + offset) * dotRadius;\n  if (radiusUnits == UNIT_METERS) {\n    offset = project_size(offset);\n  }\n  vec3 pos = vec3(offset, 0.);\n  DECKGL_FILTER_SIZE(pos, geometry);\n\n  gl_Position = project_position_to_clipspace(centroidPosition, centroidPosition64Low, pos, geometry.position);\n  geometry.normal = project_normal(vec3(rotationMatrix * normals.xy, normals.z));\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  if (extruded && !isStroke) {\n#ifdef FLAT_SHADING\n    position_commonspace = geometry.position;\n    vColor = vec4(color.rgb, color.a * opacity);\n#else\n    vec3 lightColor = lighting_getLightColor(color.rgb, project_uCameraPosition, geometry.position.xyz, geometry.normal);\n    vColor = vec4(lightColor, color.a * opacity);\n#endif\n  } else {\n    vColor = vec4(color.rgb, color.a * opacity);\n  }\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME column-layer-fragment-shader\n\nprecision highp float;\n\nuniform vec3 project_uCameraPosition;\nuniform bool extruded;\nuniform bool isStroke;\n\nout vec4 fragColor;\n\nin vec4 vColor;\n#ifdef FLAT_SHADING\nin vec4 position_commonspace;\n#endif\n\nvoid main(void) {\n  fragColor = vColor;\n#ifdef FLAT_SHADING\n  if (extruded && !isStroke && !picking_uActive) {\n    vec3 normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n    fragColor.rgb = lighting_getLightColor(vColor.rgb, project_uCameraPosition, position_commonspace.xyz, normal);\n  }\n#endif\n  DECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",defines:n,transpileToGLSL100:t,modules:[o.Z,i?r.s:r.N,s.Z]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceElevations:{size:1,transition:!0,accessor:"getElevation"},instanceFillColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getFillColor",defaultValue:y},instanceLineColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getLineColor",defaultValue:y},instanceStrokeWidths:{size:1,accessor:"getLineWidth",transition:!0}})}updateState(e){super.updateState(e);const{props:t,oldProps:n,changeFlags:i}=e,o=i.extensionsChanged||t.flatShading!==n.flatShading;if(o){var r;const{gl:e}=this.context;null==(r=this.state.model)||r.delete(),this.state.model=this._getModel(e),this.getAttributeManager().invalidateAll()}(o||t.diskResolution!==n.diskResolution||t.vertices!==n.vertices||(t.extruded||t.stroked)!==(n.extruded||n.stroked))&&this._updateGeometry(t)}getGeometry(e,t,n){const i=new m({radius:1,height:n?2:0,vertices:t,nradial:e});let o=0;if(t)for(let r=0;r<e;r++){const n=t[r];o+=Math.sqrt(n[0]*n[0]+n[1]*n[1])/e}else o=1;return this.setState({edgeDistance:Math.cos(Math.PI/e)*o}),i}_getModel(e){return new p.Z(e,{...this.getShaders(),id:this.props.id,isInstanced:!0})}_updateGeometry(e){let{diskResolution:t,vertices:n,extruded:i,stroked:o}=e;const r=this.getGeometry(t,n,i||o);this.setState({fillVertexCount:r.attributes.POSITION.value.length/3,wireframeVertexCount:r.indices.value.length}),this.state.model.setProps({geometry:r})}draw(e){let{uniforms:t}=e;const{lineWidthUnits:n,lineWidthScale:i,lineWidthMinPixels:o,lineWidthMaxPixels:r,radiusUnits:s,elevationScale:l,extruded:c,filled:d,stroked:p,wireframe:u,offset:h,coverage:g,radius:f,angle:m}=this.props,{model:y,fillVertexCount:v,wireframeVertexCount:_,edgeDistance:w}=this.state;y.setUniforms(t).setUniforms({radius:f,angle:m/180*Math.PI,offset:h,extruded:c,stroked:p,coverage:g,elevationScale:l,edgeDistance:w,radiusUnits:a.iI[s],widthUnits:a.iI[n],widthScale:i,widthMinPixels:o,widthMaxPixels:r}),c&&u&&(y.setProps({isIndexed:!0}),y.setVertexCount(_).setDrawMode(1).setUniforms({isStroke:!0}).draw()),d&&(y.setProps({isIndexed:!1}),y.setVertexCount(v).setDrawMode(5).setUniforms({isStroke:!1}).draw()),!c&&p&&(y.setProps({isIndexed:!1}),y.setVertexCount(2*v/3).setDrawMode(5).setUniforms({isStroke:!0}).draw())}}_.layerName="ColumnLayer",_.defaultProps=v},31759:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var i=n(32900),o=n(43631),r=n(68797);class s extends r.Z{getGeometry(e){return new i.Z}draw(e){let{uniforms:t}=e;const{elevationScale:n,extruded:i,offset:r,coverage:s,cellSize:a,angle:l,radiusUnits:c}=this.props;this.state.model.setUniforms(t).setUniforms({radius:a/2,radiusUnits:o.iI[c],angle:l,offset:r,extruded:i,coverage:s,elevationScale:n,edgeDistance:1,isWireframe:!1}).draw()}}s.layerName="GridCellLayer",s.defaultProps={cellSize:{type:"number",min:0,value:1e3},offset:{type:"array",value:[1,1]}}},88123:(e,t,n)=>{"use strict";n.d(t,{Z:()=>x});var i=n(19871),o=n(46025);var r=n(6735),s=n(24309),a=n(27800),l=n(52329),c=n(57654);const d={circle:{type:s.Z,props:{filled:"filled",stroked:"stroked",lineWidthMaxPixels:"lineWidthMaxPixels",lineWidthMinPixels:"lineWidthMinPixels",lineWidthScale:"lineWidthScale",lineWidthUnits:"lineWidthUnits",pointRadiusMaxPixels:"radiusMaxPixels",pointRadiusMinPixels:"radiusMinPixels",pointRadiusScale:"radiusScale",pointRadiusUnits:"radiusUnits",pointAntialiasing:"antialiasing",pointBillboard:"billboard",getFillColor:"getFillColor",getLineColor:"getLineColor",getLineWidth:"getLineWidth",getPointRadius:"getRadius"}},icon:{type:r.Z,props:{iconAtlas:"iconAtlas",iconMapping:"iconMapping",iconSizeMaxPixels:"sizeMaxPixels",iconSizeMinPixels:"sizeMinPixels",iconSizeScale:"sizeScale",iconSizeUnits:"sizeUnits",iconAlphaCutoff:"alphaCutoff",iconBillboard:"billboard",getIcon:"getIcon",getIconAngle:"getAngle",getIconColor:"getColor",getIconPixelOffset:"getPixelOffset",getIconSize:"getSize"}},text:{type:a.Z,props:{textSizeMaxPixels:"sizeMaxPixels",textSizeMinPixels:"sizeMinPixels",textSizeScale:"sizeScale",textSizeUnits:"sizeUnits",textBackground:"background",textBackgroundPadding:"backgroundPadding",textFontFamily:"fontFamily",textFontWeight:"fontWeight",textLineHeight:"lineHeight",textMaxWidth:"maxWidth",textOutlineColor:"outlineColor",textOutlineWidth:"outlineWidth",textWordBreak:"wordBreak",textCharacterSet:"characterSet",textBillboard:"billboard",textFontSettings:"fontSettings",getText:"getText",getTextAngle:"getAngle",getTextColor:"getColor",getTextPixelOffset:"getPixelOffset",getTextSize:"getSize",getTextAnchor:"getTextAnchor",getTextAlignmentBaseline:"getAlignmentBaseline",getTextBackgroundColor:"getBackgroundColor",getTextBorderColor:"getBorderColor",getTextBorderWidth:"getBorderWidth"}}},p={type:l.Z,props:{lineWidthUnits:"widthUnits",lineWidthScale:"widthScale",lineWidthMinPixels:"widthMinPixels",lineWidthMaxPixels:"widthMaxPixels",lineJointRounded:"jointRounded",lineCapRounded:"capRounded",lineMiterLimit:"miterLimit",lineBillboard:"billboard",getLineColor:"getColor",getLineWidth:"getWidth"}},u={type:c.Z,props:{extruded:"extruded",filled:"filled",wireframe:"wireframe",elevationScale:"elevationScale",material:"material",_full3d:"_full3d",getElevation:"getElevation",getFillColor:"getFillColor",getLineColor:"getLineColor"}};function h(e){let{type:t,props:n}=e;const i={};for(const o in n)i[o]=t.defaultProps[n[o]];return i}function g(e,t){const{transitions:n,updateTriggers:i}=e.props,o={updateTriggers:{},transitions:n&&{getPosition:n.geometry}};for(const r in t){const s=t[r];let a=e.props[r];r.startsWith("get")&&(a=e.getSubLayerAccessor(a),o.updateTriggers[s]=i[r],n&&(o.transitions[s]=n[r])),o[s]=a}return o}var f=n(89745);function m(e,t,n){void 0===n&&(n={});const i={pointFeatures:[],lineFeatures:[],polygonFeatures:[],polygonOutlineFeatures:[]},{startRow:o=0,endRow:r=e.length}=n;for(let s=o;s<r;s++){const n=e[s],{geometry:o}=n;if(o)if("GeometryCollection"===o.type){f.Z.assert(Array.isArray(o.geometries),"GeoJSON does not have geometries array");const{geometries:e}=o;for(let o=0;o<e.length;o++){y(e[o],i,t,n,s)}}else y(o,i,t,n,s)}return i}function y(e,t,n,i,o){const{type:r,coordinates:s}=e,{pointFeatures:a,lineFeatures:l,polygonFeatures:c,polygonOutlineFeatures:d}=t;if(function(e,t){let n=v[e];f.Z.assert(n,"Unknown GeoJSON type "+e);for(;t&&--n>0;)t=t[0];return t&&Number.isFinite(t[0])}(r,s))switch(r){case"Point":a.push(n({geometry:e},i,o));break;case"MultiPoint":s.forEach((e=>{a.push(n({geometry:{type:"Point",coordinates:e}},i,o))}));break;case"LineString":l.push(n({geometry:e},i,o));break;case"MultiLineString":s.forEach((e=>{l.push(n({geometry:{type:"LineString",coordinates:e}},i,o))}));break;case"Polygon":c.push(n({geometry:e},i,o)),s.forEach((e=>{d.push(n({geometry:{type:"LineString",coordinates:e}},i,o))}));break;case"MultiPolygon":s.forEach((e=>{c.push(n({geometry:{type:"Polygon",coordinates:e}},i,o)),e.forEach((e=>{d.push(n({geometry:{type:"LineString",coordinates:e}},i,o))}))}))}else f.Z.warn(r+" coordinates are malformed")()}const v={Point:1,MultiPoint:2,LineString:2,MultiLineString:3,Polygon:3,MultiPolygon:4};function _(e){return e.geometry.coordinates}function w(e,t){const n={points:{},lines:{},polygons:{},polygonsOutline:{}},{points:i,lines:o,polygons:r}=e,s=function(e,t){const n={points:null,lines:null,polygons:null};for(const i in n){const o=e[i].globalFeatureIds.value;n[i]=new Uint8ClampedArray(3*o.length);const r=[];for(let e=0;e<o.length;e++)t(o[e],r),n[i][3*e+0]=r[0],n[i][3*e+1]=r[1],n[i][3*e+2]=r[2]}return n}(e,t);return n.points.data={length:i.positions.value.length/i.positions.size,attributes:{...i.attributes,getPosition:i.positions,instancePickingColors:{size:3,value:s.points}},properties:i.properties,numericProps:i.numericProps,featureIds:i.featureIds},n.lines.data={length:o.pathIndices.value.length-1,startIndices:o.pathIndices.value,attributes:{...o.attributes,getPath:o.positions,instancePickingColors:{size:3,value:s.lines}},properties:o.properties,numericProps:o.numericProps,featureIds:o.featureIds},n.lines._pathType="open",n.polygons.data={length:r.polygonIndices.value.length-1,startIndices:r.polygonIndices.value,attributes:{...r.attributes,getPolygon:r.positions,pickingColors:{size:3,value:s.polygons}},properties:r.properties,numericProps:r.numericProps,featureIds:r.featureIds},n.polygons._normalize=!1,r.triangles&&(n.polygons.data.attributes.indices=r.triangles.value),n.polygonsOutline.data={length:r.primitivePolygonIndices.value.length-1,startIndices:r.primitivePolygonIndices.value,attributes:{...r.attributes,getPath:r.positions,instancePickingColors:{size:3,value:s.polygons}},properties:r.properties,numericProps:r.numericProps,featureIds:r.featureIds},n.polygonsOutline._pathType="open",n}const b=["points","linestrings","polygons"],P={...h(d.circle),...h(d.icon),...h(d.text),...h(p),...h(u),stroked:!0,filled:!0,extruded:!1,wireframe:!1,_full3d:!1,iconAtlas:{type:"object",value:null},iconMapping:{type:"object",value:{}},getIcon:{type:"accessor",value:e=>e.properties.icon},getText:{type:"accessor",value:e=>e.properties.text},pointType:"circle",getRadius:{deprecatedFor:"getPointRadius"}};class x extends i.Z{initializeState(){this.state={layerProps:{},features:{}}}updateState(e){let{props:t,changeFlags:n}=e;if(!n.dataChanged)return;const{data:i}=this.props,o=i&&"points"in i&&"polygons"in i&&"lines"in i;this.setState({binary:o}),o?this._updateStateBinary({props:t,changeFlags:n}):this._updateStateJSON({props:t,changeFlags:n})}_updateStateBinary(e){let{props:t,changeFlags:n}=e;const i=w(t.data,this.encodePickingColor);this.setState({layerProps:i})}_updateStateJSON(e){let{props:t,changeFlags:n}=e;const i=function(e){if(Array.isArray(e))return e;switch(f.Z.assert(e.type,"GeoJSON does not have type"),e.type){case"Feature":return[e];case"FeatureCollection":return f.Z.assert(Array.isArray(e.features),"GeoJSON does not have features array"),e.features;default:return[{geometry:e}]}}(t.data),r=this.getSubLayerRow.bind(this);let s={};const a={};if(Array.isArray(n.dataChanged)){const e=this.state.features;for(const t in e)s[t]=e[t].slice(),a[t]=[];for(const t of n.dataChanged){const n=m(i,r,t);for(const i in e)a[i].push((0,o.b)({data:s[i],getIndex:e=>e.__source.index,dataRange:t,replace:n[i]}))}}else s=m(i,r);const l=function(e,t){const n={points:{},lines:{},polygons:{},polygonsOutline:{}},{pointFeatures:i,lineFeatures:o,polygonFeatures:r,polygonOutlineFeatures:s}=e;return n.points.data=i,n.points._dataDiff=t.pointFeatures&&(()=>t.pointFeatures),n.points.getPosition=_,n.lines.data=o,n.lines._dataDiff=t.lineFeatures&&(()=>t.lineFeatures),n.lines.getPath=_,n.polygons.data=r,n.polygons._dataDiff=t.polygonFeatures&&(()=>t.polygonFeatures),n.polygons.getPolygon=_,n.polygonsOutline.data=s,n.polygonsOutline._dataDiff=t.polygonOutlineFeatures&&(()=>t.polygonOutlineFeatures),n.polygonsOutline.getPath=_,n}(s,a);this.setState({features:s,featuresDiff:a,layerProps:l})}getPickingInfo(e){const t=super.getPickingInfo(e),{index:n,sourceLayer:i}=t;return t.featureType=b.find((e=>i.id.startsWith(this.id+"-"+e+"-"))),n>=0&&i.id.startsWith(this.id+"-points-text")&&this.state.binary&&(t.index=this.props.data.points.globalFeatureIds.value[n]),t}_updateAutoHighlight(e){const t=this.id+"-points-",n="points"===e.featureType;for(const i of this.getSubLayers())i.id.startsWith(t)===n&&i.updateAutoHighlight(e)}_renderPolygonLayer(){const{extruded:e,wireframe:t}=this.props,{layerProps:n}=this.state,i="polygons-fill",o=this.shouldRenderSubLayer(i,n.polygons.data)&&this.getSubLayerClass(i,u.type);if(o){const r=g(this,u.props),s=e&&t;return s||delete r.getLineColor,r.updateTriggers.lineColors=s,new o(r,this.getSubLayerProps({id:i,updateTriggers:r.updateTriggers}),n.polygons)}return null}_renderLineLayers(){const{extruded:e,stroked:t}=this.props,{layerProps:n}=this.state,i="polygons-stroke",o="linestrings",r=!e&&t&&this.shouldRenderSubLayer(i,n.polygonsOutline.data)&&this.getSubLayerClass(i,p.type),s=this.shouldRenderSubLayer(o,n.lines.data)&&this.getSubLayerClass(o,p.type);if(r||s){const e=g(this,p.props);return[r&&new r(e,this.getSubLayerProps({id:i,updateTriggers:e.updateTriggers}),n.polygonsOutline),s&&new s(e,this.getSubLayerProps({id:o,updateTriggers:e.updateTriggers}),n.lines)]}return null}_renderPointLayers(){const{pointType:e}=this.props,{layerProps:t,binary:n}=this.state;let{highlightedObjectIndex:i}=this.props;!n&&Number.isFinite(i)&&(i=t.points.data.findIndex((e=>e.__source.index===i)));const o=new Set(e.split("+")),r=[];for(const s of o){const e="points-"+s,o=d[s],a=o&&this.shouldRenderSubLayer(e,t.points.data)&&this.getSubLayerClass(e,o.type);if(a){const l=g(this,o.props);let c=t.points;if("text"===s&&n){const{instancePickingColors:e,...t}=c.data.attributes;c={...c,data:{...c.data,attributes:t}}}r.push(new a(l,this.getSubLayerProps({id:e,updateTriggers:l.updateTriggers,highlightedObjectIndex:i}),c))}}return r}renderLayers(){const{extruded:e}=this.props,t=this._renderPolygonLayer();return[!e&&t,this._renderLineLayers(),this._renderPointLayers(),e&&t]}getSubLayerAccessor(e){const{binary:t}=this.state;return t&&"function"==typeof e?(t,n)=>{const{data:i,index:o}=n,r=function(e,t){if(!e)return null;const n="startIndices"in e?e.startIndices[t]:t,i=e.featureIds.value[n];return-1!==n?function(e,t,n){const i={properties:{...e.properties[t]}};for(const o in e.numericProps)i.properties[o]=e.numericProps[o].value[n];return i}(e,i,n):null}(i,o);return e(r,n)}:super.getSubLayerAccessor(e)}}x.layerName="GeoJsonLayer",x.defaultProps=P},6735:(e,t,n)=>{"use strict";n.d(t,{Z:()=>P});var i=n(47251),o=n(18056),r=n(71693),s=n(43631),a=n(89745),l=n(95321),c=n(15804);var d=n(43970),p=n(88163),u=n(96742),h=n(37944);const g=()=>{},f={10241:9987,10240:9729,10242:33071,10243:33071};function m(e,t,n,i){const o=Math.min(n/t.width,i/t.height),r=Math.floor(t.width*o),s=Math.floor(t.height*o);return 1===o?{data:t,width:r,height:s}:(e.canvas.height=s,e.canvas.width=r,e.clearRect(0,0,r,s),e.drawImage(t,0,0,t.width,t.height,0,0,r,s),{data:e.canvas,width:r,height:s})}function y(e){return e&&(e.id||e.url)}function v(e,t,n){for(let i=0;i<t.length;i++){const{icon:o,xOffset:r}=t[i];e[y(o)]={...o,x:r,y:n}}}class _{constructor(e,t){let{onUpdate:n=g,onError:i=g}=t;this._loadOptions=null,this._texture=null,this._externalTexture=null,this._mapping={},this._textureParameters=null,this._pendingCount=0,this._autoPacking=!1,this._xOffset=0,this._yOffset=0,this._rowHeight=0,this._buffer=4,this._canvasWidth=1024,this._canvasHeight=0,this._canvas=null,this.gl=e,this.onUpdate=n,this.onError=i}finalize(){var e;null==(e=this._texture)||e.delete()}getTexture(){return this._texture||this._externalTexture}getIconMapping(e){const t=this._autoPacking?y(e):e;return this._mapping[t]||{}}setProps(e){let{loadOptions:t,autoPacking:n,iconAtlas:i,iconMapping:o,textureParameters:r}=e;var s;(t&&(this._loadOptions=t),void 0!==n&&(this._autoPacking=n),o&&(this._mapping=o),i)&&(null==(s=this._texture)||s.delete(),this._texture=null,this._externalTexture=i);r&&(this._textureParameters=r)}get isLoaded(){return 0===this._pendingCount}packIcons(e,t){if(!this._autoPacking||"undefined"==typeof document)return;const n=Object.values(function(e,t,n){if(!e||!t)return null;n=n||{};const i={},{iterable:o,objectInfo:r}=(0,h.jB)(e);for(const s of o){r.index++;const e=t(s,r),o=y(e);if(!e)throw new Error("Icon is missing.");if(!e.url)throw new Error("Icon url is missing.");i[o]||n[o]&&e.url===n[o].url||(i[o]={...e,source:s,sourceIndex:r.index})}return i}(e,t,this._mapping)||{});if(n.length>0){const{mapping:e,xOffset:t,yOffset:i,rowHeight:o,canvasHeight:r}=function(e){let{icons:t,buffer:n,mapping:i={},xOffset:o=0,yOffset:r=0,rowHeight:s=0,canvasWidth:a}=e,l=[];for(let d=0;d<t.length;d++){const e=t[d];if(!i[y(e)]){const{height:t,width:c}=e;o+c+n>a&&(v(i,l,r),o=0,r=s+r+n,s=0,l=[]),l.push({icon:e,xOffset:o}),o=o+c+n,s=Math.max(s,t)}}return l.length>0&&v(i,l,r),{mapping:i,rowHeight:s,xOffset:o,yOffset:r,canvasWidth:a,canvasHeight:(c=s+r+n,Math.pow(2,Math.ceil(Math.log2(c))))};var c}({icons:n,buffer:this._buffer,canvasWidth:this._canvasWidth,mapping:this._mapping,rowHeight:this._rowHeight,xOffset:this._xOffset,yOffset:this._yOffset});this._rowHeight=o,this._mapping=e,this._xOffset=t,this._yOffset=i,this._canvasHeight=r,this._texture||(this._texture=new d.Z(this.gl,{width:this._canvasWidth,height:this._canvasHeight,parameters:this._textureParameters||f})),this._texture.height!==this._canvasHeight&&(this._texture=function(e,t,n,i){const o=e.width,r=e.height,s=new d.Z(e.gl,{width:t,height:n,parameters:i});return(0,p.Lv)(e,s,{targetY:0,width:o,height:r}),e.delete(),s}(this._texture,this._canvasWidth,this._canvasHeight,this._textureParameters||f)),this.onUpdate(),this._canvas=this._canvas||document.createElement("canvas"),this._loadIcons(n)}}_loadIcons(e){const t=this._canvas.getContext("2d",{willReadFrequently:!0});for(const n of e)this._pendingCount++,(0,u.z)(n.url,this._loadOptions).then((e=>{const i=y(n),o=this._mapping[i],{x:r,y:s,width:a,height:l}=o,{data:c,width:d,height:p}=m(t,e,a,l);this._texture.setSubImageData({data:c,x:r+(a-d)/2,y:s+(l-p)/2,width:d,height:p}),o.width=d,o.height=p,this._texture.generateMipmap(),this.onUpdate()})).catch((e=>{this.onError({url:n.url,source:n.source,sourceIndex:n.sourceIndex,loadOptions:this._loadOptions,error:e})})).finally((()=>{this._pendingCount--}))}}const w=[0,0,0,255],b={iconAtlas:{type:"image",value:null,async:!0},iconMapping:{type:"object",value:{},async:!0},sizeScale:{type:"number",value:1,min:0},billboard:!0,sizeUnits:"pixels",sizeMinPixels:{type:"number",min:0,value:0},sizeMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},alphaCutoff:{type:"number",value:.05,min:0,max:1},getPosition:{type:"accessor",value:e=>e.position},getIcon:{type:"accessor",value:e=>e.icon},getColor:{type:"accessor",value:w},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},onIconError:{type:"function",value:null,compare:!1,optional:!0}};class P extends i.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME icon-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceSizes;\nattribute float instanceAngles;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\nattribute vec4 instanceIconFrames;\nattribute float instanceColorModes;\nattribute vec2 instanceOffsets;\nattribute vec2 instancePixelOffset;\n\nuniform float sizeScale;\nuniform vec2 iconsTextureDim;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform bool billboard;\nuniform int sizeUnits;\n\nvarying float vColorMode;\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvec2 rotate_by_angle(vec2 vertex, float angle) {\n  float angle_radian = angle * PI / 180.0;\n  float cos_angle = cos(angle_radian);\n  float sin_angle = sin(angle_radian);\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\n  return rotationMatrix * vertex;\n}\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = positions;\n  geometry.pickingColor = instancePickingColors;\n  uv = positions;\n\n  vec2 iconSize = instanceIconFrames.zw;\n  float sizePixels = clamp(\n    project_size_to_pixel(instanceSizes * sizeScale, sizeUnits), \n    sizeMinPixels, sizeMaxPixels\n  );\n  float instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;\n  vec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;\n  pixelOffset += instancePixelOffset;\n  pixelOffset.y *= -1.0;\n\n  if (billboard)  {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n    vec3 offset = vec3(pixelOffset, 0.0);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n\n  } else {\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\n    DECKGL_FILTER_SIZE(offset_common, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position); \n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  }\n\n  vTextureCoords = mix(\n    instanceIconFrames.xy,\n    instanceIconFrames.xy + iconSize,\n    (positions.xy + 1.0) / 2.0\n  ) / iconsTextureDim;\n\n  vColor = instanceColors;\n  DECKGL_FILTER_COLOR(vColor, geometry);\n\n  vColorMode = instanceColorModes;\n}\n",fs:"#define SHADER_NAME icon-layer-fragment-shader\n\nprecision highp float;\n\nuniform float opacity;\nuniform sampler2D iconsTexture;\nuniform float alphaCutoff;\n\nvarying float vColorMode;\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  vec4 texColor = texture2D(iconsTexture, vTextureCoords);\n  vec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);\n  float a = texColor.a * opacity * vColor.a;\n\n  if (a < alphaCutoff) {\n    discard;\n  }\n\n  gl_FragColor = vec4(color, a);\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[o.Z,r.Z]})}initializeState(){this.state={iconManager:new _(this.context.gl,{onUpdate:this._onUpdate.bind(this),onError:this._onError.bind(this)})};this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceOffsets:{size:2,accessor:"getIcon",transform:this.getInstanceOffset},instanceIconFrames:{size:4,accessor:"getIcon",transform:this.getInstanceIconFrame},instanceColorModes:{size:1,type:5121,accessor:"getIcon",transform:this.getInstanceColorMode},instanceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getColor",defaultValue:w},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instancePixelOffset:{size:2,transition:!0,accessor:"getPixelOffset"}})}updateState(e){super.updateState(e);const{props:t,oldProps:n,changeFlags:i}=e,o=this.getAttributeManager(),{iconAtlas:r,iconMapping:s,data:a,getIcon:l,textureParameters:c}=t,{iconManager:d}=this.state,p=r||this.internalState.isAsyncPropLoading("iconAtlas");if(d.setProps({loadOptions:t.loadOptions,autoPacking:!p,iconAtlas:r,iconMapping:p?s:null,textureParameters:c}),p?n.iconMapping!==t.iconMapping&&o.invalidate("getIcon"):(i.dataChanged||i.updateTriggersChanged&&(i.updateTriggersChanged.all||i.updateTriggersChanged.getIcon))&&d.packIcons(a,l),i.extensionsChanged){var u;const{gl:e}=this.context;null==(u=this.state.model)||u.delete(),this.state.model=this._getModel(e),o.invalidateAll()}}get isLoaded(){return super.isLoaded&&this.state.iconManager.isLoaded}finalizeState(e){super.finalizeState(e),this.state.iconManager.finalize()}draw(e){let{uniforms:t}=e;const{sizeScale:n,sizeMinPixels:i,sizeMaxPixels:o,sizeUnits:r,billboard:a,alphaCutoff:l}=this.props,{iconManager:c}=this.state,d=c.getTexture();d&&this.state.model.setUniforms(t).setUniforms({iconsTexture:d,iconsTextureDim:[d.width,d.height],sizeUnits:s.iI[r],sizeScale:n,sizeMinPixels:i,sizeMaxPixels:o,billboard:a,alphaCutoff:l}).draw()}_getModel(e){return new l.Z(e,{...this.getShaders(),id:this.props.id,geometry:new c.Z({drawMode:6,attributes:{positions:{size:2,value:new Float32Array([-1,-1,-1,1,1,1,1,-1])}}}),isInstanced:!0})}_onUpdate(){this.setNeedsRedraw()}_onError(e){var t;const n=null==(t=this.getCurrentLayer())?void 0:t.props.onIconError;n?n(e):a.Z.error(e.error.message)()}getInstanceOffset(e){const{width:t,height:n,anchorX:i=t/2,anchorY:o=n/2}=this.state.iconManager.getIconMapping(e);return[t/2-i,n/2-o]}getInstanceColorMode(e){return this.state.iconManager.getIconMapping(e).mask?1:0}getInstanceIconFrame(e){const{x:t,y:n,width:i,height:o}=this.state.iconManager.getIconMapping(e);return[t,n,i,o]}}P.defaultProps=b,P.layerName="IconLayer"},16009:(e,t,n)=>{"use strict";n.d(t,{Z:()=>d});var i=n(47251),o=n(18056),r=n(71693),s=n(43631),a=n(95321),l=n(15804);const c={getSourcePosition:{type:"accessor",value:e=>e.sourcePosition},getTargetPosition:{type:"accessor",value:e=>e.targetPosition},getColor:{type:"accessor",value:[0,0,0,255]},getWidth:{type:"accessor",value:1},widthUnits:"pixels",widthScale:{type:"number",value:1,min:0},widthMinPixels:{type:"number",value:0,min:0},widthMaxPixels:{type:"number",value:Number.MAX_SAFE_INTEGER,min:0}};class d extends i.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME line-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 instanceSourcePositions;\nattribute vec3 instanceTargetPositions;\nattribute vec3 instanceSourcePositions64Low;\nattribute vec3 instanceTargetPositions64Low;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\n\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform float useShortestPath;\nuniform int widthUnits;\n\nvarying vec4 vColor;\nvarying vec2 uv;\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  return dir_screenspace * offset_direction * width / 2.0;\n}\n\nvec3 splitLine(vec3 a, vec3 b, float x) {\n  float t = (x - a.x) / (b.x - a.x);\n  return vec3(x, mix(a.yz, b.yz, t));\n}\n\nvoid main(void) {\n  geometry.worldPosition = instanceSourcePositions;\n  geometry.worldPositionAlt = instanceTargetPositions;\n\n  vec3 source_world = instanceSourcePositions;\n  vec3 target_world = instanceTargetPositions;\n  vec3 source_world_64low = instanceSourcePositions64Low;\n  vec3 target_world_64low = instanceTargetPositions64Low;\n\n  if (useShortestPath > 0.5 || useShortestPath < -0.5) {\n    source_world.x = mod(source_world.x + 180., 360.0) - 180.;\n    target_world.x = mod(target_world.x + 180., 360.0) - 180.;\n    float deltaLng = target_world.x - source_world.x;\n\n    if (deltaLng * useShortestPath > 180.) {\n      source_world.x += 360. * useShortestPath;\n      source_world = splitLine(source_world, target_world, 180. * useShortestPath);\n      source_world_64low = vec3(0.0);\n    } else if (deltaLng * useShortestPath < -180.) {\n      target_world.x += 360. * useShortestPath;\n      target_world = splitLine(source_world, target_world, 180. * useShortestPath);\n      target_world_64low = vec3(0.0);\n    } else if (useShortestPath < 0.) {\n      gl_Position = vec4(0.);\n      return;\n    }\n  }\n  vec4 source_commonspace;\n  vec4 target_commonspace;\n  vec4 source = project_position_to_clipspace(source_world, source_world_64low, vec3(0.), source_commonspace);\n  vec4 target = project_position_to_clipspace(target_world, target_world_64low, vec3(0.), target_commonspace);\n  float segmentIndex = positions.x;\n  vec4 p = mix(source, target, segmentIndex);\n  geometry.position = mix(source_commonspace, target_commonspace, segmentIndex);\n  uv = positions.xy;\n  geometry.uv = uv;\n  geometry.pickingColor = instancePickingColors;\n  float widthPixels = clamp(\n    project_size_to_pixel(instanceWidths * widthScale, widthUnits),\n    widthMinPixels, widthMaxPixels\n  );\n  vec3 offset = vec3(\n    getExtrusionOffset(target.xy - source.xy, positions.y, widthPixels),\n    0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  DECKGL_FILTER_GL_POSITION(p, geometry);\n  gl_Position = p + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\n  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#define SHADER_NAME line-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[o.Z,r.Z]})}get wrapLongitude(){return!1}initializeState(){this.getAttributeManager().addInstanced({instanceSourcePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getSourcePosition"},instanceTargetPositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getTargetPosition"},instanceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getColor",defaultValue:[0,0,0,255]},instanceWidths:{size:1,transition:!0,accessor:"getWidth",defaultValue:1}})}updateState(e){if(super.updateState(e),e.changeFlags.extensionsChanged){var t;const{gl:e}=this.context;null==(t=this.state.model)||t.delete(),this.state.model=this._getModel(e),this.getAttributeManager().invalidateAll()}}draw(e){let{uniforms:t}=e;const{widthUnits:n,widthScale:i,widthMinPixels:o,widthMaxPixels:r,wrapLongitude:a}=this.props;this.state.model.setUniforms(t).setUniforms({widthUnits:s.iI[n],widthScale:i,widthMinPixels:o,widthMaxPixels:r,useShortestPath:a?1:0}).draw(),a&&this.state.model.setUniforms({useShortestPath:-1}).draw()}_getModel(e){return new a.Z(e,{...this.getShaders(),id:this.props.id,geometry:new l.Z({drawMode:5,attributes:{positions:new Float32Array([0,-1,0,0,1,0,1,-1,0,1,1,0])}}),isInstanced:!0})}}d.layerName="LineLayer",d.defaultProps=c},52329:(e,t,n)=>{"use strict";n.d(t,{Z:()=>m});var i=n(47251),o=n(18056),r=n(71693),s=n(43631),a=n(95321),l=n(15804),c=n(68318),d=n(59021);class p extends c.Z{constructor(e){super({...e,attributes:{positions:{size:3,padding:18,initialize:!0,type:e.fp64?Float64Array:Float32Array},segmentTypes:{size:1,type:Uint8ClampedArray}}})}get(e){return this.attributes[e]}getGeometryFromBuffer(e){return this.normalize?super.getGeometryFromBuffer(e):null}normalizeGeometry(e){return this.normalize?function(e,t,n,i){let o;if(Array.isArray(e[0])){const n=e.length*t;o=new Array(n);for(let i=0;i<e.length;i++)for(let n=0;n<t;n++)o[i*t+n]=e[i][n]||0}else o=e;return n?(0,d.dj)(o,{size:t,gridResolution:n}):i?(0,d.ct)(o,{size:t}):o}(e,this.positionSize,this.opts.resolution,this.opts.wrapLongitude):e}getGeometrySize(e){if(u(e)){let t=0;for(const n of e)t+=this.getGeometrySize(n);return t}const t=this.getPathLength(e);return t<2?0:this.isClosed(e)?t<3?0:t+2:t}updateGeometryAttributes(e,t){if(0!==t.geometrySize)if(e&&u(e))for(const n of e){const e=this.getGeometrySize(n);t.geometrySize=e,this.updateGeometryAttributes(n,t),t.vertexStart+=e}else this._updateSegmentTypes(e,t),this._updatePositions(e,t)}_updateSegmentTypes(e,t){const n=this.attributes.segmentTypes,i=!!e&&this.isClosed(e),{vertexStart:o,geometrySize:r}=t;n.fill(0,o,o+r),i?(n[o]=4,n[o+r-2]=4):(n[o]+=1,n[o+r-2]+=2),n[o+r-1]=4}_updatePositions(e,t){const{positions:n}=this.attributes;if(!n||!e)return;const{vertexStart:i,geometrySize:o}=t,r=new Array(3);for(let s=i,a=0;a<o;s++,a++)this.getPointOnPath(e,a,r),n[3*s]=r[0],n[3*s+1]=r[1],n[3*s+2]=r[2]}getPathLength(e){return e.length/this.positionSize}getPointOnPath(e,t,n){void 0===n&&(n=[]);const{positionSize:i}=this;t*i>=e.length&&(t+=1-e.length/i);const o=t*i;return n[0]=e[o],n[1]=e[o+1],n[2]=3===i&&e[o+2]||0,n}isClosed(e){if(!this.normalize)return Boolean(this.opts.loop);const{positionSize:t}=this,n=e.length-t;return e[0]===e[n]&&e[1]===e[n+1]&&(2===t||e[2]===e[n+2])}}function u(e){return Array.isArray(e[0])}const h=[0,0,0,255],g={widthUnits:"meters",widthScale:{type:"number",min:0,value:1},widthMinPixels:{type:"number",min:0,value:0},widthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},jointRounded:!1,capRounded:!1,miterLimit:{type:"number",min:0,value:4},billboard:!1,_pathType:null,getPath:{type:"accessor",value:e=>e.path},getColor:{type:"accessor",value:h},getWidth:{type:"accessor",value:1},rounded:{deprecatedFor:["jointRounded","capRounded"]}},f={enter:(e,t)=>t.length?t.subarray(t.length-e.length):e};class m extends i.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME path-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute float instanceTypes;\nattribute vec3 instanceStartPositions;\nattribute vec3 instanceEndPositions;\nattribute vec3 instanceLeftPositions;\nattribute vec3 instanceRightPositions;\nattribute vec3 instanceLeftPositions64Low;\nattribute vec3 instanceStartPositions64Low;\nattribute vec3 instanceEndPositions64Low;\nattribute vec3 instanceRightPositions64Low;\nattribute float instanceStrokeWidths;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\n\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform float jointType;\nuniform float capType;\nuniform float miterLimit;\nuniform bool billboard;\nuniform int widthUnits;\n\nuniform float opacity;\n\nvarying vec4 vColor;\nvarying vec2 vCornerOffset;\nvarying float vMiterLength;\nvarying vec2 vPathPosition;\nvarying float vPathLength;\nvarying float vJointType;\n\nconst float EPSILON = 0.001;\nconst vec3 ZERO_OFFSET = vec3(0.0);\n\nfloat flipIfTrue(bool flag) {\n  return -(float(flag) * 2. - 1.);\n}\nvec3 getLineJoinOffset(\n  vec3 prevPoint, vec3 currPoint, vec3 nextPoint,\n  vec2 width\n) {\n  bool isEnd = positions.x > 0.0;\n  float sideOfPath = positions.y;\n  float isJoint = float(sideOfPath == 0.0);\n\n  vec3 deltaA3 = (currPoint - prevPoint);\n  vec3 deltaB3 = (nextPoint - currPoint);\n\n  mat3 rotationMatrix;\n  bool needsRotation = !billboard && project_needs_rotation(currPoint, rotationMatrix);\n  if (needsRotation) {\n    deltaA3 = deltaA3 * rotationMatrix;\n    deltaB3 = deltaB3 * rotationMatrix;\n  }\n  vec2 deltaA = deltaA3.xy / width;\n  vec2 deltaB = deltaB3.xy / width;\n\n  float lenA = length(deltaA);\n  float lenB = length(deltaB);\n\n  vec2 dirA = lenA > 0. ? normalize(deltaA) : vec2(0.0, 0.0);\n  vec2 dirB = lenB > 0. ? normalize(deltaB) : vec2(0.0, 0.0);\n\n  vec2 perpA = vec2(-dirA.y, dirA.x);\n  vec2 perpB = vec2(-dirB.y, dirB.x);\n  vec2 tangent = dirA + dirB;\n  tangent = length(tangent) > 0. ? normalize(tangent) : perpA;\n  vec2 miterVec = vec2(-tangent.y, tangent.x);\n  vec2 dir = isEnd ? dirA : dirB;\n  vec2 perp = isEnd ? perpA : perpB;\n  float L = isEnd ? lenA : lenB;\n  float sinHalfA = abs(dot(miterVec, perp));\n  float cosHalfA = abs(dot(dirA, miterVec));\n  float turnDirection = flipIfTrue(dirA.x * dirB.y >= dirA.y * dirB.x);\n  float cornerPosition = sideOfPath * turnDirection;\n\n  float miterSize = 1.0 / max(sinHalfA, EPSILON);\n  miterSize = mix(\n    min(miterSize, max(lenA, lenB) / max(cosHalfA, EPSILON)),\n    miterSize,\n    step(0.0, cornerPosition)\n  );\n\n  vec2 offsetVec = mix(miterVec * miterSize, perp, step(0.5, cornerPosition))\n    * (sideOfPath + isJoint * turnDirection);\n  bool isStartCap = lenA == 0.0 || (!isEnd && (instanceTypes == 1.0 || instanceTypes == 3.0));\n  bool isEndCap = lenB == 0.0 || (isEnd && (instanceTypes == 2.0 || instanceTypes == 3.0));\n  bool isCap = isStartCap || isEndCap;\n  if (isCap) {\n    offsetVec = mix(perp * sideOfPath, dir * capType * 4.0 * flipIfTrue(isStartCap), isJoint);\n    vJointType = capType;\n  } else {\n    vJointType = jointType;\n  }\n  vPathLength = L;\n  vCornerOffset = offsetVec;\n  vMiterLength = dot(vCornerOffset, miterVec * turnDirection);\n  vMiterLength = isCap ? isJoint : vMiterLength;\n\n  vec2 offsetFromStartOfPath = vCornerOffset + deltaA * float(isEnd);\n  vPathPosition = vec2(\n    dot(offsetFromStartOfPath, perp),\n    dot(offsetFromStartOfPath, dir)\n  );\n  geometry.uv = vPathPosition;\n\n  float isValid = step(instanceTypes, 3.5);\n  vec3 offset = vec3(offsetVec * width * isValid, 0.0);\n\n  if (needsRotation) {\n    offset = rotationMatrix * offset;\n  }\n  return offset;\n}\nvoid clipLine(inout vec4 position, vec4 refPosition) {\n  if (position.w < EPSILON) {\n    float r = (EPSILON - refPosition.w) / (position.w - refPosition.w);\n    position = refPosition + (position - refPosition) * r;\n  }\n}\n\nvoid main() {\n  geometry.pickingColor = instancePickingColors;\n\n  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity);\n\n  float isEnd = positions.x;\n\n  vec3 prevPosition = mix(instanceLeftPositions, instanceStartPositions, isEnd);\n  vec3 prevPosition64Low = mix(instanceLeftPositions64Low, instanceStartPositions64Low, isEnd);\n\n  vec3 currPosition = mix(instanceStartPositions, instanceEndPositions, isEnd);\n  vec3 currPosition64Low = mix(instanceStartPositions64Low, instanceEndPositions64Low, isEnd);\n\n  vec3 nextPosition = mix(instanceEndPositions, instanceRightPositions, isEnd);\n  vec3 nextPosition64Low = mix(instanceEndPositions64Low, instanceRightPositions64Low, isEnd);\n\n  geometry.worldPosition = currPosition;\n  vec2 widthPixels = vec2(clamp(\n    project_size_to_pixel(instanceStrokeWidths * widthScale, widthUnits),\n    widthMinPixels, widthMaxPixels) / 2.0);\n  vec3 width;\n\n  if (billboard) {\n    vec4 prevPositionScreen = project_position_to_clipspace(prevPosition, prevPosition64Low, ZERO_OFFSET);\n    vec4 currPositionScreen = project_position_to_clipspace(currPosition, currPosition64Low, ZERO_OFFSET, geometry.position);\n    vec4 nextPositionScreen = project_position_to_clipspace(nextPosition, nextPosition64Low, ZERO_OFFSET);\n\n    clipLine(prevPositionScreen, currPositionScreen);\n    clipLine(nextPositionScreen, currPositionScreen);\n    clipLine(currPositionScreen, mix(nextPositionScreen, prevPositionScreen, isEnd));\n\n    width = vec3(widthPixels, 0.0);\n    DECKGL_FILTER_SIZE(width, geometry);\n\n    vec3 offset = getLineJoinOffset(\n      prevPositionScreen.xyz / prevPositionScreen.w,\n      currPositionScreen.xyz / currPositionScreen.w,\n      nextPositionScreen.xyz / nextPositionScreen.w,\n      project_pixel_size_to_clipspace(width.xy)\n    );\n\n    DECKGL_FILTER_GL_POSITION(currPositionScreen, geometry);\n    gl_Position = vec4(currPositionScreen.xyz + offset * currPositionScreen.w, currPositionScreen.w);\n  } else {\n    prevPosition = project_position(prevPosition, prevPosition64Low);\n    currPosition = project_position(currPosition, currPosition64Low);\n    nextPosition = project_position(nextPosition, nextPosition64Low);\n\n    width = vec3(project_pixel_size(widthPixels), 0.0);\n    DECKGL_FILTER_SIZE(width, geometry);\n\n    vec3 offset = getLineJoinOffset(prevPosition, currPosition, nextPosition, width.xy);\n    geometry.position = vec4(currPosition + offset, 1.0);\n    gl_Position = project_common_position_to_clipspace(geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  }\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#define SHADER_NAME path-layer-fragment-shader\n\nprecision highp float;\n\nuniform float miterLimit;\n\nvarying vec4 vColor;\nvarying vec2 vCornerOffset;\nvarying float vMiterLength;\nvarying vec2 vPathPosition;\nvarying float vPathLength;\nvarying float vJointType;\n\nvoid main(void) {\n  geometry.uv = vPathPosition;\n\n  if (vPathPosition.y < 0.0 || vPathPosition.y > vPathLength) {\n    if (vJointType > 0.5 && length(vCornerOffset) > 1.0) {\n      discard;\n    }\n    if (vJointType < 0.5 && vMiterLength > miterLimit + 1.0) {\n      discard;\n    }\n  }\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[o.Z,r.Z]})}get wrapLongitude(){return!1}initializeState(){this.getAttributeManager().addInstanced({positions:{size:3,vertexOffset:1,type:5130,fp64:this.use64bitPositions(),transition:f,accessor:"getPath",update:this.calculatePositions,noAlloc:true,shaderAttributes:{instanceLeftPositions:{vertexOffset:0},instanceStartPositions:{vertexOffset:1},instanceEndPositions:{vertexOffset:2},instanceRightPositions:{vertexOffset:3}}},instanceTypes:{size:1,type:5121,update:this.calculateSegmentTypes,noAlloc:true},instanceStrokeWidths:{size:1,accessor:"getWidth",transition:f,defaultValue:1},instanceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,accessor:"getColor",transition:f,defaultValue:h},instancePickingColors:{size:3,type:5121,accessor:(e,t)=>{let{index:n,target:i}=t;return this.encodePickingColor(e&&e.__source?e.__source.index:n,i)}}}),this.setState({pathTesselator:new p({fp64:this.use64bitPositions()})})}updateState(e){super.updateState(e);const{props:t,changeFlags:n}=e,i=this.getAttributeManager();if(n.dataChanged||n.updateTriggersChanged&&(n.updateTriggersChanged.all||n.updateTriggersChanged.getPath)){const{pathTesselator:e}=this.state,o=t.data.attributes||{};e.updateGeometry({data:t.data,geometryBuffer:o.getPath,buffers:o,normalize:!t._pathType,loop:"loop"===t._pathType,getGeometry:t.getPath,positionFormat:t.positionFormat,wrapLongitude:t.wrapLongitude,resolution:this.context.viewport.resolution,dataChanged:n.dataChanged}),this.setState({numInstances:e.instanceCount,startIndices:e.vertexStarts}),n.dataChanged||i.invalidateAll()}if(n.extensionsChanged){var o;const{gl:e}=this.context;null==(o=this.state.model)||o.delete(),this.state.model=this._getModel(e),i.invalidateAll()}}getPickingInfo(e){const t=super.getPickingInfo(e),{index:n}=t,{data:i}=this.props;return i[0]&&i[0].__source&&(t.object=i.find((e=>e.__source.index===n))),t}disablePickingIndex(e){const{data:t}=this.props;if(t[0]&&t[0].__source)for(let n=0;n<t.length;n++)t[n].__source.index===e&&this._disablePickingIndex(n);else this._disablePickingIndex(e)}draw(e){let{uniforms:t}=e;const{jointRounded:n,capRounded:i,billboard:o,miterLimit:r,widthUnits:a,widthScale:l,widthMinPixels:c,widthMaxPixels:d}=this.props;this.state.model.setUniforms(t).setUniforms({jointType:Number(n),capType:Number(i),billboard:o,widthUnits:s.iI[a],widthScale:l,miterLimit:r,widthMinPixels:c,widthMaxPixels:d}).draw()}_getModel(e){return new a.Z(e,{...this.getShaders(),id:this.props.id,geometry:new l.Z({drawMode:4,attributes:{indices:new Uint16Array([0,1,2,1,4,2,1,3,4,3,5,4]),positions:{value:new Float32Array([0,0,0,-1,0,1,1,-1,1,1,1,0]),size:2}}}),isInstanced:!0})}calculatePositions(e){const{pathTesselator:t}=this.state;e.startIndices=t.vertexStarts,e.value=t.get("positions")}calculateSegmentTypes(e){const{pathTesselator:t}=this.state;e.startIndices=t.vertexStarts,e.value=t.get("segmentTypes")}}m.defaultProps=g,m.layerName="PathLayer"},76144:(e,t,n)=>{"use strict";n.d(t,{Z:()=>h});var i=n(47251),o=n(18056),r=n(89771),s=n(71693),a=n(43631),l=n(95321),c=n(15804);const d=[0,0,0,255],p=[0,0,1],u={sizeUnits:"pixels",pointSize:{type:"number",min:0,value:10},getPosition:{type:"accessor",value:e=>e.position},getNormal:{type:"accessor",value:p},getColor:{type:"accessor",value:d},material:!0,radiusPixels:{deprecatedFor:"pointSize"}};class h extends i.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME point-cloud-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 instanceNormals;\nattribute vec4 instanceColors;\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radiusPixels;\nuniform int sizeUnits;\n\nvarying vec4 vColor;\nvarying vec2 unitPosition;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.normal = project_normal(instanceNormals);\n  unitPosition = positions.xy;\n  geometry.uv = unitPosition;\n  geometry.pickingColor = instancePickingColors;\n  vec3 offset = vec3(positions.xy * project_size_to_pixel(radiusPixels, sizeUnits), 0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n\n  gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.), geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n  vec3 lightColor = lighting_getLightColor(instanceColors.rgb, project_uCameraPosition, geometry.position.xyz, geometry.normal);\n  vColor = vec4(lightColor, instanceColors.a * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#define SHADER_NAME point-cloud-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 unitPosition;\n\nvoid main(void) {\n  geometry.uv = unitPosition;\n\n  float distToCenter = length(unitPosition);\n\n  if (distToCenter > 1.0) {\n    discard;\n  }\n\n  gl_FragColor = vColor;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[o.Z,r.N,s.Z]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceNormals:{size:3,transition:!0,accessor:"getNormal",defaultValue:p},instanceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getColor",defaultValue:d}})}updateState(e){const{changeFlags:t,props:n}=e;if(super.updateState(e),t.extensionsChanged){var i;const{gl:e}=this.context;null==(i=this.state.model)||i.delete(),this.state.model=this._getModel(e),this.getAttributeManager().invalidateAll()}t.dataChanged&&function(e){const{header:t,attributes:n}=e;t&&n&&(e.length=t.vertexCount,n.POSITION&&(n.instancePositions=n.POSITION),n.NORMAL&&(n.instanceNormals=n.NORMAL),n.COLOR_0&&(n.instanceColors=n.COLOR_0))}(n.data)}draw(e){let{uniforms:t}=e;const{pointSize:n,sizeUnits:i}=this.props;this.state.model.setUniforms(t).setUniforms({sizeUnits:a.iI[i],radiusPixels:n}).draw()}_getModel(e){const t=[];for(let n=0;n<3;n++){const e=n/3*Math.PI*2;t.push(2*Math.cos(e),2*Math.sin(e),0)}return new l.Z(e,{...this.getShaders(),id:this.props.id,geometry:new c.Z({drawMode:4,attributes:{positions:new Float32Array(t)}}),isInstanced:!0})}}h.layerName="PointCloudLayer",h.defaultProps=u},48148:(e,t,n)=>{"use strict";n.d(t,{Z:()=>u});var i=n(19871),o=n(89745),r=n(37944),s=n(57654),a=n(52329),l=n(91793),c=n(46025);const d=[0,0,0,255],p={stroked:!0,filled:!0,extruded:!1,elevationScale:1,wireframe:!1,_normalize:!0,_windingOrder:"CW",lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,lineJointRounded:!1,lineMiterLimit:4,getPolygon:{type:"accessor",value:e=>e.polygon},getFillColor:{type:"accessor",value:[0,0,0,255]},getLineColor:{type:"accessor",value:d},getLineWidth:{type:"accessor",value:1},getElevation:{type:"accessor",value:1e3},material:!0};class u extends i.Z{initializeState(){this.state={paths:[]},this.props.getLineDashArray&&o.Z.removed("getLineDashArray","PathStyleExtension")()}updateState(e){let{changeFlags:t}=e;const n=t.dataChanged||t.updateTriggersChanged&&(t.updateTriggersChanged.all||t.updateTriggersChanged.getPolygon);if(n&&Array.isArray(t.dataChanged)){const e=this.state.paths.slice(),n=t.dataChanged.map((t=>(0,c.b)({data:e,getIndex:e=>e.__source.index,dataRange:t,replace:this._getPaths(t)})));this.setState({paths:e,pathsDiff:n})}else n&&this.setState({paths:this._getPaths(),pathsDiff:null})}_getPaths(e){void 0===e&&(e={});const{data:t,getPolygon:n,positionFormat:i,_normalize:o}=this.props,s=[],a="XY"===i?2:3,{startRow:c,endRow:d}=e,{iterable:p,objectInfo:u}=(0,r.jB)(t,c,d);for(const r of p){u.index++;let e=n(r,u);o&&(e=l.Fv(e,a));const{holeIndices:t}=e,i=e.positions||e;if(t)for(let n=0;n<=t.length;n++){const e=i.slice(t[n-1]||0,t[n]||i.length);s.push(this.getSubLayerRow({path:e},r,u.index))}else s.push(this.getSubLayerRow({path:i},r,u.index))}return s}renderLayers(){const{data:e,_dataDiff:t,stroked:n,filled:i,extruded:o,wireframe:r,_normalize:l,_windingOrder:c,elevationScale:p,transitions:u,positionFormat:h}=this.props,{lineWidthUnits:g,lineWidthScale:f,lineWidthMinPixels:m,lineWidthMaxPixels:y,lineJointRounded:v,lineMiterLimit:_,lineDashJustified:w}=this.props,{getFillColor:b,getLineColor:P,getLineWidth:x,getLineDashArray:k,getElevation:C,getPolygon:S,updateTriggers:N,material:M}=this.props,{paths:L,pathsDiff:T}=this.state,E=this.getSubLayerClass("fill",s.Z),A=this.getSubLayerClass("stroke",a.Z),I=this.shouldRenderSubLayer("fill",L)&&new E({_dataDiff:t,extruded:o,elevationScale:p,filled:i,wireframe:r,_normalize:l,_windingOrder:c,getElevation:C,getFillColor:b,getLineColor:o&&r?P:d,material:M,transitions:u},this.getSubLayerProps({id:"fill",updateTriggers:N&&{getPolygon:N.getPolygon,getElevation:N.getElevation,getFillColor:N.getFillColor,lineColors:o&&r,getLineColor:N.getLineColor}}),{data:e,positionFormat:h,getPolygon:S});return[!o&&I,!o&&n&&this.shouldRenderSubLayer("stroke",L)&&new A({_dataDiff:T&&(()=>T),widthUnits:g,widthScale:f,widthMinPixels:m,widthMaxPixels:y,jointRounded:v,miterLimit:_,dashJustified:w,_pathType:"loop",transitions:u&&{getWidth:u.getLineWidth,getColor:u.getLineColor,getPath:u.getPolygon},getColor:this.getSubLayerAccessor(P),getWidth:this.getSubLayerAccessor(x),getDashArray:this.getSubLayerAccessor(k)},this.getSubLayerProps({id:"stroke",updateTriggers:N&&{getWidth:N.getLineWidth,getColor:N.getLineColor,getDashArray:N.getLineDashArray}}),{data:L,positionFormat:h,getPath:e=>e.path}),o&&I]}}u.layerName="PolygonLayer",u.defaultProps=p},24309:(e,t,n)=>{"use strict";n.d(t,{Z:()=>p});var i=n(47251),o=n(18056),r=n(71693),s=n(43631),a=n(95321),l=n(15804);const c=[0,0,0,255],d={radiusUnits:"meters",radiusScale:{type:"number",min:0,value:1},radiusMinPixels:{type:"number",min:0,value:0},radiusMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},lineWidthUnits:"meters",lineWidthScale:{type:"number",min:0,value:1},lineWidthMinPixels:{type:"number",min:0,value:0},lineWidthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},stroked:!1,filled:!0,billboard:!1,antialiasing:!0,getPosition:{type:"accessor",value:e=>e.position},getRadius:{type:"accessor",value:1},getFillColor:{type:"accessor",value:c},getLineColor:{type:"accessor",value:c},getLineWidth:{type:"accessor",value:1},strokeWidth:{deprecatedFor:"getLineWidth"},outline:{deprecatedFor:"stroked"},getColor:{deprecatedFor:["getFillColor","getLineColor"]}};class p extends i.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME scatterplot-layer-vertex-shader\n\nattribute vec3 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceRadius;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radiusScale;\nuniform float radiusMinPixels;\nuniform float radiusMaxPixels;\nuniform float lineWidthScale;\nuniform float lineWidthMinPixels;\nuniform float lineWidthMaxPixels;\nuniform float stroked;\nuniform bool filled;\nuniform bool antialiasing;\nuniform bool billboard;\nuniform int radiusUnits;\nuniform int lineWidthUnits;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  outerRadiusPixels = clamp(\n    project_size_to_pixel(radiusScale * instanceRadius, radiusUnits),\n    radiusMinPixels, radiusMaxPixels\n  );\n  float lineWidthPixels = clamp(\n    project_size_to_pixel(lineWidthScale * instanceLineWidths, lineWidthUnits),\n    lineWidthMinPixels, lineWidthMaxPixels\n  );\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\n  float edgePadding = antialiasing ? (outerRadiusPixels + SMOOTH_EDGE_RADIUS) / outerRadiusPixels : 1.0;\n  unitPosition = edgePadding * positions.xy;\n  geometry.uv = unitPosition;\n  geometry.pickingColor = instancePickingColors;\n\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\n  \n  if (billboard) {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n    vec3 offset = edgePadding * positions * outerRadiusPixels;\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n  } else {\n    vec3 offset = edgePadding * positions * project_pixel_size(outerRadiusPixels);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  }\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n",fs:"#define SHADER_NAME scatterplot-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool filled;\nuniform float stroked;\nuniform bool antialiasing;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\nvoid main(void) {\n  geometry.uv = unitPosition;\n\n  float distToCenter = length(unitPosition) * outerRadiusPixels;\n  float inCircle = antialiasing ? \n    smoothedge(distToCenter, outerRadiusPixels) : \n    step(distToCenter, outerRadiusPixels);\n\n  if (inCircle == 0.0) {\n    discard;\n  }\n\n  if (stroked > 0.5) {\n    float isLine = antialiasing ? \n      smoothedge(innerUnitRadius * outerRadiusPixels, distToCenter) :\n      step(innerUnitRadius * outerRadiusPixels, distToCenter);\n\n    if (filled) {\n      gl_FragColor = mix(vFillColor, vLineColor, isLine);\n    } else {\n      if (isLine == 0.0) {\n        discard;\n      }\n      gl_FragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);\n    }\n  } else if (filled) {\n    gl_FragColor = vFillColor;\n  } else {\n    discard;\n  }\n\n  gl_FragColor.a *= inCircle;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[o.Z,r.Z]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceRadius:{size:1,transition:!0,accessor:"getRadius",defaultValue:1},instanceFillColors:{size:this.props.colorFormat.length,transition:!0,normalized:!0,type:5121,accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:this.props.colorFormat.length,transition:!0,normalized:!0,type:5121,accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState(e){if(super.updateState(e),e.changeFlags.extensionsChanged){var t;const{gl:e}=this.context;null==(t=this.state.model)||t.delete(),this.state.model=this._getModel(e),this.getAttributeManager().invalidateAll()}}draw(e){let{uniforms:t}=e;const{radiusUnits:n,radiusScale:i,radiusMinPixels:o,radiusMaxPixels:r,stroked:a,filled:l,billboard:c,antialiasing:d,lineWidthUnits:p,lineWidthScale:u,lineWidthMinPixels:h,lineWidthMaxPixels:g}=this.props;this.state.model.setUniforms(t).setUniforms({stroked:a?1:0,filled:l,billboard:c,antialiasing:d,radiusUnits:s.iI[n],radiusScale:i,radiusMinPixels:o,radiusMaxPixels:r,lineWidthUnits:s.iI[p],lineWidthScale:u,lineWidthMinPixels:h,lineWidthMaxPixels:g}).draw()}_getModel(e){return new a.Z(e,{...this.getShaders(),id:this.props.id,geometry:new l.Z({drawMode:6,vertexCount:4,attributes:{positions:{size:3,value:new Float32Array([-1,-1,0,1,-1,0,1,1,0,-1,1,0])}}}),isInstanced:!0})}}p.defaultProps=d,p.layerName="ScatterplotLayer"},91793:(e,t,n)=>{"use strict";n.d(t,{Fv:()=>h,Gd:()=>d,k8:()=>c,mD:()=>m});var i=n(9187),o=n.n(i),r=n(59021);const s=r.wG.CLOCKWISE,a=r.wG.COUNTER_CLOCKWISE,l={isClosed:!0};function c(e){return"positions"in e?e.positions:e}function d(e){return"holeIndices"in e?e.holeIndices:null}function p(e,t,n,i,o){let s=t;const a=n.length;for(let r=0;r<a;r++)for(let t=0;t<i;t++)e[s++]=n[r][t]||0;if(!function(e){const t=e[0],n=e[e.length-1];return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]}(n))for(let r=0;r<i;r++)e[s++]=n[0][r]||0;return l.start=t,l.end=s,l.size=i,(0,r.Ny)(e,o,l),s}function u(e,t,n,i,o,s,a){void 0===o&&(o=0);const c=(s=s||n.length)-o;if(c<=0)return t;let d=t;for(let r=0;r<c;r++)e[d++]=n[o+r];if(!function(e,t,n,i){for(let o=0;o<t;o++)if(e[n+o]!==e[i-t+o])return!1;return!0}(n,i,o,s))for(let r=0;r<i;r++)e[d++]=n[o+r];return l.start=t,l.end=d,l.size=i,(0,r.Ny)(e,a,l),d}function h(e,t){!function(e){if(e=e&&e.positions||e,!Array.isArray(e)&&!ArrayBuffer.isView(e))throw new Error("invalid polygon")}(e);const n=[],i=[];if("positions"in e){const{positions:o,holeIndices:r}=e;if(r){let e=0;for(let l=0;l<=r.length;l++)e=u(n,e,o,t,r[l-1],r[l],0===l?s:a),i.push(e);return i.pop(),{positions:n,holeIndices:i}}e=o}if(!function(e){return Array.isArray(e[0])}(e))return u(n,0,e,t,0,n.length,s),n;if(!function(e){return e.length>=1&&e[0].length>=2&&Number.isFinite(e[0][0])}(e)){let o=0;for(const[r,l]of e.entries())o=p(n,o,l,t,0===r?s:a),i.push(o);return i.pop(),{positions:n,holeIndices:i}}return p(n,0,e,t,s),n}function g(e,t,n){const i=e.length/3;let o=0;for(let r=0;r<i;r++){const s=(r+1)%i;o+=e[3*r+t]*e[3*s+n],o-=e[3*s+t]*e[3*r+n]}return Math.abs(o/2)}function f(e,t,n,i){const o=e.length/3;for(let r=0;r<o;r++){const o=3*r,s=e[o+0],a=e[o+1],l=e[o+2];e[o+t]=s,e[o+n]=a,e[o+i]=l}}function m(e,t,n,i){let r=d(e);r&&(r=r.map((e=>e/t)));let s=c(e);const a=i&&3===t;if(n){const e=s.length;s=s.slice();const i=[];for(let o=0;o<e;o+=t){i[0]=s[o],i[1]=s[o+1],a&&(i[2]=s[o+2]);const e=n(i);s[o]=e[0],s[o+1]=e[1],a&&(s[o+2]=e[2])}}if(a){const e=g(s,0,1),t=g(s,0,2),i=g(s,1,2);if(!e&&!t&&!i)return[];e>t&&e>i||(t>i?(n||(s=s.slice()),f(s,0,2,1)):(n||(s=s.slice()),f(s,1,2,0)))}return o()(s,r,t)}},57654:(e,t,n)=>{"use strict";n.d(t,{Z:()=>x});var i=n(47251),o=n(18056),r=n(89771),s=n(71693),a=n(43631),l=n(19227),c=n(83757),d=n(95321),p=n(15804),u=n(91793),h=n(68318),g=n(59021);class f extends h.Z{constructor(e){const{fp64:t,IndexType:n=Uint32Array}=e;super({...e,attributes:{positions:{size:3,type:t?Float64Array:Float32Array},vertexValid:{type:Uint8ClampedArray,size:1},indices:{type:n,size:1}}})}get(e){const{attributes:t}=this;return"indices"===e?t.indices&&t.indices.subarray(0,this.vertexCount):t[e]}updateGeometry(e){super.updateGeometry(e);const t=this.buffers.indices;if(t)this.vertexCount=(t.value||t).length;else if(this.data&&!this.getGeometry)throw new Error("missing indices buffer")}normalizeGeometry(e){if(this.normalize){const t=u.Fv(e,this.positionSize);return this.opts.resolution?(0,g.WZ)(u.k8(t),u.Gd(t),{size:this.positionSize,gridResolution:this.opts.resolution,edgeTypes:!0}):this.opts.wrapLongitude?(0,g.GU)(u.k8(t),u.Gd(t),{size:this.positionSize,maxLatitude:86,edgeTypes:!0}):t}return e}getGeometrySize(e){if(m(e)){let t=0;for(const n of e)t+=this.getGeometrySize(n);return t}return u.k8(e).length/this.positionSize}getGeometryFromBuffer(e){return this.normalize||!this.buffers.indices?super.getGeometryFromBuffer(e):null}updateGeometryAttributes(e,t){if(e&&m(e))for(const n of e){const e=this.getGeometrySize(n);t.geometrySize=e,this.updateGeometryAttributes(n,t),t.vertexStart+=e,t.indexStart=this.indexStarts[t.geometryIndex+1]}else this._updateIndices(e,t),this._updatePositions(e,t),this._updateVertexValid(e,t)}_updateIndices(e,t){let{geometryIndex:n,vertexStart:i,indexStart:o}=t;const{attributes:r,indexStarts:s,typedArrayManager:a}=this;let l=r.indices;if(!l||!e)return;let c=o;const d=u.mD(e,this.positionSize,this.opts.preproject,this.opts.full3d);l=a.allocate(l,o+d.length,{copy:!0});for(let p=0;p<d.length;p++)l[c++]=d[p]+i;s[n+1]=o+d.length,r.indices=l}_updatePositions(e,t){let{vertexStart:n,geometrySize:i}=t;const{attributes:{positions:o},positionSize:r}=this;if(!o||!e)return;const s=u.k8(e);for(let a=n,l=0;l<i;a++,l++){const e=s[l*r],t=s[l*r+1],n=r>2?s[l*r+2]:0;o[3*a]=e,o[3*a+1]=t,o[3*a+2]=n}}_updateVertexValid(e,t){let{vertexStart:n,geometrySize:i}=t;const{positionSize:o}=this,r=this.attributes.vertexValid,s=e&&u.Gd(e);if(e&&e.edgeTypes?r.set(e.edgeTypes,n):r.fill(1,n,n+i),s)for(let a=0;a<s.length;a++)r[n+s[a]/o-1]=0;r[n+i-1]=0}}function m(e){return Array.isArray(e)&&e.length>0&&!Number.isFinite(e[0])}const y="\nattribute vec2 vertexPositions;\nattribute float vertexValid;\n\nuniform bool extruded;\nuniform bool isWireframe;\nuniform float elevationScale;\nuniform float opacity;\n\nvarying vec4 vColor;\n\nstruct PolygonProps {\n  vec4 fillColors;\n  vec4 lineColors;\n  vec3 positions;\n  vec3 nextPositions;\n  vec3 pickingColors;\n  vec3 positions64Low;\n  vec3 nextPositions64Low;\n  float elevations;\n};\n\nvec3 project_offset_normal(vec3 vector) {\n  if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\n    project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSETS) {\n    return normalize(vector * project_uCommonUnitsPerWorldUnit);\n  }\n  return project_normal(vector);\n}\n\nvoid calculatePosition(PolygonProps props) {\n#ifdef IS_SIDE_VERTEX\n  if(vertexValid < 0.5){\n    gl_Position = vec4(0.);\n    return;\n  }\n#endif\n\n  vec3 pos;\n  vec3 pos64Low;\n  vec3 normal;\n  vec4 colors = isWireframe ? props.lineColors : props.fillColors;\n\n  geometry.worldPosition = props.positions;\n  geometry.worldPositionAlt = props.nextPositions;\n  geometry.pickingColor = props.pickingColors;\n\n#ifdef IS_SIDE_VERTEX\n  pos = mix(props.positions, props.nextPositions, vertexPositions.x);\n  pos64Low = mix(props.positions64Low, props.nextPositions64Low, vertexPositions.x);\n#else\n  pos = props.positions;\n  pos64Low = props.positions64Low;\n#endif\n\n  if (extruded) {\n    pos.z += props.elevations * vertexPositions.y * elevationScale;\n  }\n  gl_Position = project_position_to_clipspace(pos, pos64Low, vec3(0.), geometry.position);\n\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  if (extruded) {\n  #ifdef IS_SIDE_VERTEX\n    normal = vec3(\n      props.positions.y - props.nextPositions.y + (props.positions64Low.y - props.nextPositions64Low.y),\n      props.nextPositions.x - props.positions.x + (props.nextPositions64Low.x - props.positions64Low.x),\n      0.0);\n    normal = project_offset_normal(normal);\n  #else\n    normal = project_normal(vec3(0.0, 0.0, 1.0));\n  #endif\n    geometry.normal = normal;\n    vec3 lightColor = lighting_getLightColor(colors.rgb, project_uCameraPosition, geometry.position.xyz, normal);\n    vColor = vec4(lightColor, colors.a * opacity);\n  } else {\n    vColor = vec4(colors.rgb, colors.a * opacity);\n  }\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",v="#define SHADER_NAME solid-polygon-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 positions64Low;\nattribute float elevations;\nattribute vec4 fillColors;\nattribute vec4 lineColors;\nattribute vec3 pickingColors;\n\n"+y+"\n\nvoid main(void) {\n  PolygonProps props;\n\n  props.positions = positions;\n  props.positions64Low = positions64Low;\n  props.elevations = elevations;\n  props.fillColors = fillColors;\n  props.lineColors = lineColors;\n  props.pickingColors = pickingColors;\n\n  calculatePosition(props);\n}\n",_="#define SHADER_NAME solid-polygon-layer-vertex-shader-side\n#define IS_SIDE_VERTEX\n\n\nattribute vec3 instancePositions;\nattribute vec3 nextPositions;\nattribute vec3 instancePositions64Low;\nattribute vec3 nextPositions64Low;\nattribute float instanceElevations;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\n"+y+"\n\nvoid main(void) {\n  PolygonProps props;\n\n  #if RING_WINDING_ORDER_CW == 1\n    props.positions = instancePositions;\n    props.positions64Low = instancePositions64Low;\n    props.nextPositions = nextPositions;\n    props.nextPositions64Low = nextPositions64Low;\n  #else\n    props.positions = nextPositions;\n    props.positions64Low = nextPositions64Low;\n    props.nextPositions = instancePositions;\n    props.nextPositions64Low = instancePositions64Low;\n  #endif\n  props.elevations = instanceElevations;\n  props.fillColors = instanceFillColors;\n  props.lineColors = instanceLineColors;\n  props.pickingColors = instancePickingColors;\n\n  calculatePosition(props);\n}\n",w=[0,0,0,255],b={filled:!0,extruded:!1,wireframe:!1,_normalize:!0,_windingOrder:"CW",_full3d:!1,elevationScale:{type:"number",min:0,value:1},getPolygon:{type:"accessor",value:e=>e.polygon},getElevation:{type:"accessor",value:1e3},getFillColor:{type:"accessor",value:w},getLineColor:{type:"accessor",value:w},material:!0},P={enter:(e,t)=>t.length?t.subarray(t.length-e.length):e};class x extends i.Z{getShaders(e){return super.getShaders({vs:"top"===e?v:_,fs:"#define SHADER_NAME solid-polygon-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",defines:{RING_WINDING_ORDER_CW:this.props._normalize||"CCW"!==this.props._windingOrder?1:0},modules:[o.Z,r.N,s.Z]})}get wrapLongitude(){return!1}initializeState(){const{gl:e,viewport:t}=this.context;let{coordinateSystem:n}=this.props;const{_full3d:i}=this.props;let o;t.isGeospatial&&n===a.Df.DEFAULT&&(n=a.Df.LNGLAT),n===a.Df.LNGLAT&&(o=i?t.projectPosition.bind(t):t.projectFlat.bind(t)),this.setState({numInstances:0,polygonTesselator:new f({preproject:o,fp64:this.use64bitPositions(),IndexType:!e||(0,l.ag)(e,c.h.ELEMENT_INDEX_UINT32)?Uint32Array:Uint16Array})});const r=this.getAttributeManager(),s=!0;r.remove(["instancePickingColors"]),r.add({indices:{size:1,isIndexed:!0,update:this.calculateIndices,noAlloc:s},positions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:P,accessor:"getPolygon",update:this.calculatePositions,noAlloc:s,shaderAttributes:{positions:{vertexOffset:0,divisor:0},instancePositions:{vertexOffset:0,divisor:1},nextPositions:{vertexOffset:1,divisor:1}}},vertexValid:{size:1,divisor:1,type:5121,update:this.calculateVertexValid,noAlloc:s},elevations:{size:1,transition:P,accessor:"getElevation",shaderAttributes:{elevations:{divisor:0},instanceElevations:{divisor:1}}},fillColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:P,accessor:"getFillColor",defaultValue:w,shaderAttributes:{fillColors:{divisor:0},instanceFillColors:{divisor:1}}},lineColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:P,accessor:"getLineColor",defaultValue:w,shaderAttributes:{lineColors:{divisor:0},instanceLineColors:{divisor:1}}},pickingColors:{size:3,type:5121,accessor:(e,t)=>{let{index:n,target:i}=t;return this.encodePickingColor(e&&e.__source?e.__source.index:n,i)},shaderAttributes:{pickingColors:{divisor:0},instancePickingColors:{divisor:1}}}})}getPickingInfo(e){const t=super.getPickingInfo(e),{index:n}=t,{data:i}=this.props;return i[0]&&i[0].__source&&(t.object=i.find((e=>e.__source.index===n))),t}disablePickingIndex(e){const{data:t}=this.props;if(t[0]&&t[0].__source)for(let n=0;n<t.length;n++)t[n].__source.index===e&&this._disablePickingIndex(n);else this._disablePickingIndex(e)}draw(e){let{uniforms:t}=e;const{extruded:n,filled:i,wireframe:o,elevationScale:r}=this.props,{topModel:s,sideModel:a,polygonTesselator:l}=this.state,c={...t,extruded:Boolean(n),elevationScale:r};a&&(a.setInstanceCount(l.instanceCount-1),a.setUniforms(c),o&&(a.setDrawMode(3),a.setUniforms({isWireframe:!0}).draw()),i&&(a.setDrawMode(6),a.setUniforms({isWireframe:!1}).draw())),s&&(s.setVertexCount(l.vertexCount),s.setUniforms(c).draw())}updateState(e){super.updateState(e),this.updateGeometry(e);const{props:t,oldProps:n,changeFlags:i}=e,o=this.getAttributeManager();var r;(i.extensionsChanged||t.filled!==n.filled||t.extruded!==n.extruded)&&(null==(r=this.state.models)||r.forEach((e=>e.delete())),this.setState(this._getModels(this.context.gl)),o.invalidateAll())}updateGeometry(e){let{props:t,oldProps:n,changeFlags:i}=e;if(i.dataChanged||i.updateTriggersChanged&&(i.updateTriggersChanged.all||i.updateTriggersChanged.getPolygon)){const{polygonTesselator:e}=this.state,n=t.data.attributes||{};e.updateGeometry({data:t.data,normalize:t._normalize,geometryBuffer:n.getPolygon,buffers:n,getGeometry:t.getPolygon,positionFormat:t.positionFormat,wrapLongitude:t.wrapLongitude,resolution:this.context.viewport.resolution,fp64:this.use64bitPositions(),dataChanged:i.dataChanged,full3d:t._full3d}),this.setState({numInstances:e.instanceCount,startIndices:e.vertexStarts}),i.dataChanged||this.getAttributeManager().invalidateAll()}}_getModels(e){const{id:t,filled:n,extruded:i}=this.props;let o,r;if(n){const n=this.getShaders("top");n.defines.NON_INSTANCED_MODEL=1,o=new d.Z(e,{...n,id:t+"-top",drawMode:4,attributes:{vertexPositions:new Float32Array([0,1])},uniforms:{isWireframe:!1,isSideVertex:!1},vertexCount:0,isIndexed:!0})}return i&&(r=new d.Z(e,{...this.getShaders("side"),id:t+"-side",geometry:new p.Z({drawMode:1,vertexCount:4,attributes:{vertexPositions:{size:2,value:new Float32Array([1,0,0,0,0,1,1,1])}}}),instanceCount:0,isInstanced:1}),r.userData.excludeAttributes={indices:!0}),{models:[r,o].filter(Boolean),topModel:o,sideModel:r}}calculateIndices(e){const{polygonTesselator:t}=this.state;e.startIndices=t.indexStarts,e.value=t.get("indices")}calculatePositions(e){const{polygonTesselator:t}=this.state;e.startIndices=t.vertexStarts,e.value=t.get("positions")}calculateVertexValid(e){e.value=this.state.polygonTesselator.get("vertexValid")}}x.defaultProps=b,x.layerName="SolidPolygonLayer"},38017:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var i=n(89745),o=n(6735);const r=.75,s=[];class a extends o.Z{getShaders(){return{...super.getShaders(),fs:"#define SHADER_NAME multi-icon-layer-fragment-shader\n\nprecision highp float;\n\nuniform float opacity;\nuniform sampler2D iconsTexture;\nuniform float gamma;\nuniform bool sdf;\nuniform float alphaCutoff;\nuniform float sdfBuffer;\nuniform float outlineBuffer;\nuniform vec4 outlineColor;\n\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  if (!picking_uActive) {\n    float alpha = texture2D(iconsTexture, vTextureCoords).a;\n    vec4 color = vColor;\n    if (sdf) {\n      float distance = alpha;\n      alpha = smoothstep(sdfBuffer - gamma, sdfBuffer + gamma, distance);\n\n      if (outlineBuffer > 0.0) {\n        float inFill = alpha;\n        float inBorder = smoothstep(outlineBuffer - gamma, outlineBuffer + gamma, distance);\n        color = mix(outlineColor, vColor, inFill);\n        alpha = inBorder;\n      }\n    }\n    float a = alpha * color.a;\n    \n    if (a < alphaCutoff) {\n      discard;\n    }\n\n    gl_FragColor = vec4(color.rgb, a * opacity);\n  }\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n"}}initializeState(){super.initializeState();this.getAttributeManager().addInstanced({instanceOffsets:{size:2,accessor:"getIconOffsets"},instancePickingColors:{type:5121,size:3,accessor:(e,t)=>{let{index:n,target:i}=t;return this.encodePickingColor(n,i)}}})}updateState(e){super.updateState(e);const{props:t,oldProps:n}=e;let{outlineColor:o}=t;o!==n.outlineColor&&(o=o.map((e=>e/255)),o[3]=Number.isFinite(o[3])?o[3]:1,this.setState({outlineColor:o})),!t.sdf&&t.outlineWidth&&i.Z.warn(this.id+": fontSettings.sdf is required to render outline")()}draw(e){const{sdf:t,smoothing:n,outlineWidth:i}=this.props,{outlineColor:o}=this.state,s=i?Math.max(n,r*(1-i)):-1;if(e.uniforms={...e.uniforms,sdfBuffer:r,outlineBuffer:s,gamma:n,sdf:Boolean(t),outlineColor:o},super.draw(e),t&&i){const{iconManager:e}=this.state;e.getTexture()&&this.state.model.draw({uniforms:{outlineBuffer:r}})}}getInstanceOffset(e){return e?Array.from(e).flatMap((e=>super.getInstanceOffset(e))):s}getInstanceColorMode(e){return 1}getInstanceIconFrame(e){return e?Array.from(e).flatMap((e=>super.getInstanceIconFrame(e))):s}}a.defaultProps={getIconOffsets:{type:"accessor",value:e=>e.offsets},alphaCutoff:.001,smoothing:.1,outlineWidth:0,outlineColor:{type:"color",value:[0,0,0,255]}},a.layerName="MultiIconLayer"},17495:(e,t,n)=>{"use strict";n.d(t,{Z:()=>d});var i=n(47251),o=n(18056),r=n(71693),s=n(43631),a=n(95321),l=n(15804);const c={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,padding:{type:"array",value:[0,0,0,0]},getPosition:{type:"accessor",value:e=>e.position},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},getBoundingRect:{type:"accessor",value:[0,0,0,0]},getFillColor:{type:"accessor",value:[0,0,0,255]},getLineColor:{type:"accessor",value:[0,0,0,255]},getLineWidth:{type:"accessor",value:1}};class d extends i.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME text-background-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute vec4 instanceRects;\nattribute float instanceSizes;\nattribute float instanceAngles;\nattribute vec2 instancePixelOffsets;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform bool billboard;\nuniform float opacity;\nuniform float sizeScale;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform vec4 padding;\nuniform int sizeUnits;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying float vLineWidth;\nvarying vec2 uv;\nvarying vec2 dimensions;\n\nvec2 rotate_by_angle(vec2 vertex, float angle) {\n  float angle_radian = radians(angle);\n  float cos_angle = cos(angle_radian);\n  float sin_angle = sin(angle_radian);\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\n  return rotationMatrix * vertex;\n}\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = positions;\n  geometry.pickingColor = instancePickingColors;\n  uv = positions;\n  vLineWidth = instanceLineWidths;\n  float sizePixels = clamp(\n    project_size_to_pixel(instanceSizes * sizeScale, sizeUnits),\n    sizeMinPixels, sizeMaxPixels\n  );\n\n  dimensions = instanceRects.zw * sizePixels + padding.xy + padding.zw;\n\n  vec2 pixelOffset = (positions * instanceRects.zw + instanceRects.xy) * sizePixels + mix(-padding.xy, padding.zw, positions);\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles);\n  pixelOffset += instancePixelOffsets;\n  pixelOffset.y *= -1.0;\n\n  if (billboard)  {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n    vec3 offset = vec3(pixelOffset, 0.0);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n  } else {\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\n    DECKGL_FILTER_SIZE(offset_common, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  }\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n",fs:"#define SHADER_NAME text-background-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool stroked;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying float vLineWidth;\nvarying vec2 uv;\nvarying vec2 dimensions;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  vec2 pixelPosition = uv * dimensions;\n  if (stroked) {\n    float distToEdge = min(\n      min(pixelPosition.x, dimensions.x - pixelPosition.x),\n      min(pixelPosition.y, dimensions.y - pixelPosition.y)\n    );\n    float isBorder = smoothedge(distToEdge, vLineWidth);\n    gl_FragColor = mix(vFillColor, vLineColor, isBorder);\n  } else {\n    gl_FragColor = vFillColor;\n  }\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[o.Z,r.Z]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instanceRects:{size:4,accessor:"getBoundingRect"},instancePixelOffsets:{size:2,transition:!0,accessor:"getPixelOffset"},instanceFillColors:{size:4,transition:!0,normalized:!0,type:5121,accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:4,transition:!0,normalized:!0,type:5121,accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState(e){super.updateState(e);const{changeFlags:t}=e;if(t.extensionsChanged){var n;const{gl:e}=this.context;null==(n=this.state.model)||n.delete(),this.state.model=this._getModel(e),this.getAttributeManager().invalidateAll()}}draw(e){let{uniforms:t}=e;const{billboard:n,sizeScale:i,sizeUnits:o,sizeMinPixels:r,sizeMaxPixels:a,getLineWidth:l}=this.props;let{padding:c}=this.props;c.length<4&&(c=[c[0],c[1],c[0],c[1]]),this.state.model.setUniforms(t).setUniforms({billboard:n,stroked:Boolean(l),padding:c,sizeUnits:s.iI[o],sizeScale:i,sizeMinPixels:r,sizeMaxPixels:a}).draw()}_getModel(e){return new a.Z(e,{...this.getShaders(),id:this.props.id,geometry:new l.Z({drawMode:6,vertexCount:4,attributes:{positions:{size:2,value:new Float32Array([0,0,1,0,1,1,0,1])}}}),isInstanced:!0})}}d.defaultProps=c,d.layerName="TextBackgroundLayer"},27800:(e,t,n)=>{"use strict";n.d(t,{Z:()=>S});var i=n(19871),o=n(89745),r=n(37944),s=n(38017),a=n(39875);const l=32,c=[];function d(e,t,n,i){let o=0;for(let s=t;s<n;s++){var r;o+=(null==(r=i[e[s]])?void 0:r.layoutWidth)||0}return o}function p(e,t,n,i,o,r){let s=t,a=0;for(let l=t;l<n;l++){const t=d(e,l,l+1,o);a+t>i&&(s<l&&r.push(l),s=l,a=0),a+=t}return a}function u(e,t,n,i,o,r){void 0===o&&(o=0),void 0===r&&(r=e.length);const s=[];return"break-all"===t?p(e,o,r,n,i,s):function(e,t,n,i,o,r){let s=t,a=t,l=t,c=0;for(let u=t;u<n;u++)if(" "===e[u]?l=u+1:" "!==e[u+1]&&u+1!==n||(l=u+1),l>a){let t=d(e,a,l,o);c+t>i&&(s<a&&(r.push(a),s=a,c=0),t>i&&(t=p(e,a,l,i,o,r),s=r[r.length-1])),a=l,c+=t}}(e,o,r,n,i,s),s}function h(e,t,n,i,r,s){let a=0,c=0;for(let d=t;d<n;d++){const t=e[d],n=i[t];n?(c||(c=n.layoutHeight),r[d]=a+n.layoutWidth/2,a+=n.layoutWidth):(o.Z.warn("Missing character: "+t+" ("+t.codePointAt(0)+")")(),r[d]=a,a+=l)}s[0]=a,s[1]=c}class g{constructor(e){void 0===e&&(e=5),this._cache={},this._order=[],this.limit=e}get(e){const t=this._cache[e];return t&&(this._deleteOrder(e),this._appendOrder(e)),t}set(e,t){this._cache[e]?(this.delete(e),this._cache[e]=t,this._appendOrder(e)):(Object.keys(this._cache).length===this.limit&&this.delete(this._order[0]),this._cache[e]=t,this._appendOrder(e))}delete(e){this._cache[e]&&(delete this._cache[e],this._deleteOrder(e))}_deleteOrder(e){const t=this._order.indexOf(e);t>=0&&this._order.splice(t,1)}_appendOrder(e){this._order.push(e)}}const f={fontFamily:"Monaco, monospace",fontWeight:"normal",characterSet:function(){const e=[];for(let t=32;t<128;t++)e.push(String.fromCharCode(t));return e}(),fontSize:64,buffer:4,sdf:!1,cutoff:.25,radius:12,smoothing:.1},m=3;let y=new g(m);function v(e,t){for(let n=0;n<e.length;n++)t.data[4*n+3]=e[n]}function _(e,t,n,i){e.font=i+" "+n+"px "+t,e.fillStyle="#000",e.textBaseline="alphabetic",e.textAlign="left"}class w{constructor(){this.props={...f}}get texture(){return this._atlas}get mapping(){return this._atlas&&this._atlas.mapping}get scale(){const{fontSize:e,buffer:t}=this.props;return(1.2*e+2*t)/e}setProps(e){void 0===e&&(e={}),Object.assign(this.props,e),this._key=this._getKey();const t=function(e,t){let n;n="string"==typeof t?new Set(Array.from(t)):new Set(t);const i=y.get(e);if(!i)return n;for(const o in i.mapping)n.has(o)&&n.delete(o);return n}(this._key,this.props.characterSet),n=y.get(this._key);if(n&&0===t.size)return void(this._atlas!==n&&(this._atlas=n));const i=this._generateFontAtlas(t,n);this._atlas=i,y.set(this._key,i)}_generateFontAtlas(e,t){const{fontFamily:n,fontWeight:i,fontSize:o,buffer:r,sdf:s,radius:l,cutoff:c}=this.props;let d=t&&t.data;d||(d=document.createElement("canvas"),d.width=1024);const p=d.getContext("2d",{willReadFrequently:!0});_(p,n,o,i);const{mapping:u,canvasHeight:h,xOffset:g,yOffset:f}=function(e){let{characterSet:t,getFontWidth:n,fontHeight:i,buffer:o,maxCanvasWidth:r,mapping:s={},xOffset:a=0,yOffset:l=0}=e,c=0,d=a;const p=i+2*o;for(const h of t)if(!s[h]){const e=n(h);d+e+2*o>r&&(d=0,c++),s[h]={x:d+o,y:l+c*p+o,width:e,height:p,layoutWidth:e,layoutHeight:i},d+=e+2*o}return{mapping:s,xOffset:d,yOffset:l+c*p,canvasHeight:(u=l+(c+1)*p,Math.pow(2,Math.ceil(Math.log2(u))))};var u}({getFontWidth:e=>p.measureText(e).width,fontHeight:1.2*o,buffer:r,characterSet:e,maxCanvasWidth:1024,...t&&{mapping:t.mapping,xOffset:t.xOffset,yOffset:t.yOffset}});if(d.height!==h){const e=p.getImageData(0,0,d.width,d.height);d.height=h,p.putImageData(e,0,0)}if(_(p,n,o,i),s){const t=new a.Z({fontSize:o,buffer:r,radius:l,cutoff:c,fontFamily:n,fontWeight:""+i});for(const n of e){const{data:e,width:i,height:r,glyphTop:s}=t.draw(n);u[n].width=i,u[n].layoutOffsetY=.9*o-s;const a=p.createImageData(i,r);v(e,a),p.putImageData(a,u[n].x,u[n].y)}}else for(const a of e)p.fillText(a,u[a].x,u[a].y+r+.9*o);return{xOffset:g,yOffset:f,mapping:u,data:d,width:d.width,height:d.height}}_getKey(){const{fontFamily:e,fontWeight:t,fontSize:n,buffer:i,sdf:o,radius:r,cutoff:s}=this.props;return o?e+" "+t+" "+n+" "+i+" "+r+" "+s:e+" "+t+" "+n+" "+i}}var b=n(17495);const P={start:1,middle:0,end:-1},x={top:1,center:0,bottom:-1},k=[0,0,0,255],C={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,background:!1,getBackgroundColor:{type:"accessor",value:[255,255,255,255]},getBorderColor:{type:"accessor",value:k},getBorderWidth:{type:"accessor",value:0},backgroundPadding:{type:"array",value:[0,0,0,0]},characterSet:{type:"object",value:f.characterSet},fontFamily:f.fontFamily,fontWeight:f.fontWeight,lineHeight:1,outlineWidth:{type:"number",value:0,min:0},outlineColor:{type:"color",value:k},fontSettings:{},wordBreak:"break-word",maxWidth:{type:"number",value:-1},getText:{type:"accessor",value:e=>e.text},getPosition:{type:"accessor",value:e=>e.position},getColor:{type:"accessor",value:k},getSize:{type:"accessor",value:32},getAngle:{type:"accessor",value:0},getTextAnchor:{type:"accessor",value:"middle"},getAlignmentBaseline:{type:"accessor",value:"center"},getPixelOffset:{type:"accessor",value:[0,0]},backgroundColor:{deprecatedFor:["background","getBackgroundColor"]}};class S extends i.Z{constructor(){super(...arguments),this.getBoundingRect=(e,t)=>{let{size:[n,i]}=this.transformParagraph(e,t);const{fontSize:o}=this.state.fontAtlasManager.props;n/=o,i/=o;const{getTextAnchor:r,getAlignmentBaseline:s}=this.props;return[(P["function"==typeof r?r(e,t):r]-1)*n/2,(x["function"==typeof s?s(e,t):s]-1)*i/2,n,i]},this.getIconOffsets=(e,t)=>{const{getTextAnchor:n,getAlignmentBaseline:i}=this.props,{x:o,y:r,rowWidth:s,size:[a,l]}=this.transformParagraph(e,t),c=P["function"==typeof n?n(e,t):n],d=x["function"==typeof i?i(e,t):i],p=o.length,u=new Array(2*p);let h=0;for(let g=0;g<p;g++){const e=(1-c)*(a-s[g])/2;u[h++]=(c-1)*a/2+e+o[g],u[h++]=(d-1)*l/2+r[g]}return u}}initializeState(){this.state={styleVersion:0,fontAtlasManager:new w},this.props.maxWidth>0&&o.Z.warn("v8.9 breaking change: TextLayer maxWidth is now relative to text size")()}updateState(e){const{props:t,oldProps:n,changeFlags:i}=e;(i.dataChanged||i.updateTriggersChanged&&(i.updateTriggersChanged.all||i.updateTriggersChanged.getText))&&this._updateText();(this._updateFontAtlas()||t.lineHeight!==n.lineHeight||t.wordBreak!==n.wordBreak||t.maxWidth!==n.maxWidth)&&this.setState({styleVersion:this.state.styleVersion+1})}getPickingInfo(e){let{info:t}=e;return t.object=t.index>=0?this.props.data[t.index]:null,t}_updateFontAtlas(){const{fontSettings:e,fontFamily:t,fontWeight:n}=this.props,{fontAtlasManager:i,characterSet:o}=this.state,r={...e,characterSet:o,fontFamily:t,fontWeight:n};if(!i.mapping)return i.setProps(r),!0;for(const s in r)if(r[s]!==i.props[s])return i.setProps(r),!0;return!1}_updateText(){var e;const{data:t,characterSet:n}=this.props,i=null==(e=t.attributes)?void 0:e.getText;let o,{getText:s}=this.props,a=t.startIndices;const l="auto"===n&&new Set;if(i&&a){const{texts:e,characterCount:n}=function(e){let{value:t,length:n,stride:i,offset:o,startIndices:r,characterSet:s}=e;const a=t.BYTES_PER_ELEMENT,l=i?i/a:1,c=o?o/a:0,d=r[n]||Math.ceil((t.length-c)/l),p=s&&new Set,u=new Array(n);let h=t;if(l>1||c>0){h=new(0,t.constructor)(d);for(let e=0;e<d;e++)h[e]=t[e*l+c]}for(let g=0;g<n;g++){const e=r[g],t=r[g+1]||d,n=h.subarray(e,t);u[g]=String.fromCodePoint.apply(null,n),p&&n.forEach(p.add,p)}if(p)for(const g of p)s.add(String.fromCodePoint(g));return{texts:u,characterCount:d}}({...ArrayBuffer.isView(i)?{value:i}:i,length:t.length,startIndices:a,characterSet:l});o=n,s=(t,n)=>{let{index:i}=n;return e[i]}}else{const{iterable:e,objectInfo:n}=(0,r.jB)(t);a=[0],o=0;for(const t of e){n.index++;const e=Array.from(s(t,n)||"");l&&e.forEach(l.add,l),o+=e.length,a.push(o)}}this.setState({getText:s,startIndices:a,numInstances:o,characterSet:l||n})}transformParagraph(e,t){const{fontAtlasManager:n}=this.state,i=n.mapping,o=this.state.getText,{wordBreak:r,lineHeight:s,maxWidth:a}=this.props;return function(e,t,n,i,o){const r=Array.from(e),s=r.length,a=new Array(s),l=new Array(s),d=new Array(s),p=("break-word"===n||"break-all"===n)&&isFinite(i)&&i>0,g=[0,0],f=[0,0];let m=0,y=0,v=0;for(let w=0;w<=s;w++){const e=r[w];if("\n"!==e&&w!==s||(v=w),v>y){const e=p?u(r,n,i,o,y,v):c;for(let n=0;n<=e.length;n++){const i=0===n?y:e[n-1],s=n<e.length?e[n]:v;h(r,i,s,o,a,f);for(let e=i;e<s;e++){var _;const t=(null==(_=o[r[e]])?void 0:_.layoutOffsetY)||0;l[e]=m+f[1]/2+t,d[e]=f[0]}m+=f[1]*t,g[0]=Math.max(g[0],f[0])}y=v}"\n"===e&&(a[y]=0,l[y]=0,d[y]=0,y++)}return g[1]=m,{x:a,y:l,rowWidth:d,size:g}}(o(e,t)||"",s,r,a*n.props.fontSize,i)}renderLayers(){const{startIndices:e,numInstances:t,getText:n,fontAtlasManager:{scale:i,texture:o,mapping:r},styleVersion:a}=this.state,{data:l,_dataDiff:c,getPosition:d,getColor:p,getSize:u,getAngle:h,getPixelOffset:g,getBackgroundColor:m,getBorderColor:y,getBorderWidth:v,backgroundPadding:_,background:w,billboard:P,fontSettings:x,outlineWidth:k,outlineColor:C,sizeScale:S,sizeUnits:N,sizeMinPixels:M,sizeMaxPixels:L,transitions:T,updateTriggers:E}=this.props,A=this.getSubLayerClass("characters",s.Z),I=this.getSubLayerClass("background",b.Z);return[w&&new I({getFillColor:m,getLineColor:y,getLineWidth:v,padding:_,getPosition:d,getSize:u,getAngle:h,getPixelOffset:g,billboard:P,sizeScale:S,sizeUnits:N,sizeMinPixels:M,sizeMaxPixels:L,transitions:T&&{getPosition:T.getPosition,getAngle:T.getAngle,getSize:T.getSize,getFillColor:T.getBackgroundColor,getLineColor:T.getBorderColor,getLineWidth:T.getBorderWidth,getPixelOffset:T.getPixelOffset}},this.getSubLayerProps({id:"background",updateTriggers:{getPosition:E.getPosition,getAngle:E.getAngle,getSize:E.getSize,getFillColor:E.getBackgroundColor,getLineColor:E.getBorderColor,getLineWidth:E.getBorderWidth,getPixelOffset:E.getPixelOffset,getBoundingRect:{getText:E.getText,getTextAnchor:E.getTextAnchor,getAlignmentBaseline:E.getAlignmentBaseline,styleVersion:a}}}),{data:l.attributes&&l.attributes.background?{length:l.length,attributes:l.attributes.background}:l,_dataDiff:c,autoHighlight:!1,getBoundingRect:this.getBoundingRect}),new A({sdf:x.sdf,smoothing:Number.isFinite(x.smoothing)?x.smoothing:f.smoothing,outlineWidth:k/(x.radius||f.radius),outlineColor:C,iconAtlas:o,iconMapping:r,getPosition:d,getColor:p,getSize:u,getAngle:h,getPixelOffset:g,billboard:P,sizeScale:S*i,sizeUnits:N,sizeMinPixels:M*i,sizeMaxPixels:L*i,transitions:T&&{getPosition:T.getPosition,getAngle:T.getAngle,getColor:T.getColor,getSize:T.getSize,getPixelOffset:T.getPixelOffset}},this.getSubLayerProps({id:"characters",updateTriggers:{getIcon:E.getText,getPosition:E.getPosition,getAngle:E.getAngle,getColor:E.getColor,getSize:E.getSize,getPixelOffset:E.getPixelOffset,getIconOffsets:{getText:E.getText,getTextAnchor:E.getTextAnchor,getAlignmentBaseline:E.getAlignmentBaseline,styleVersion:a}}}),{data:l,_dataDiff:c,startIndices:e,numInstances:t,getIconOffsets:this.getIconOffsets,getIcon:n})]}static set fontAtlasCacheLimit(e){!function(e){o.Z.assert(Number.isFinite(e)&&e>=m,"Invalid cache limit"),y=new g(e)}(e)}}S.defaultProps=C,S.layerName="TextLayer"},46025:(e,t,n)=>{"use strict";function i(e){let{data:t,getIndex:n,dataRange:i,replace:o}=e;const{startRow:r=0,endRow:s=1/0}=i,a=t.length;let l=a,c=a;for(let u=0;u<a;u++){const e=n(t[u]);if(l>u&&e>=r&&(l=u),e>=s){c=u;break}}let d=l;const p=c-l!==o.length?t.slice(c):void 0;for(let u=0;u<o.length;u++)t[d++]=o[u];if(p){for(let e=0;e<p.length;e++)t[d++]=p[e];t.length=d}return{startRow:l,endRow:l+o.length}}n.d(t,{b:()=>i})},16103:(e,t,n)=>{"use strict";n.d(t,{Z:()=>m});var i=n(67294),o=n(23148);const r="undefined"!=typeof window?i.useLayoutEffect:i.useEffect;function s(e,t){for(;e;){if(e===t)return!0;e=Object.getPrototypeOf(e)}return!1}var a=n(45213),l=n(47251);const c={position:"absolute",zIndex:-1};function d(e,t){if("function"==typeof e)return e(t);if(Array.isArray(e))return e.map((e=>d(e,t)));if(p(e)){if(function(e){const t=e.type,n=t&&t.defaultProps;return n&&n.mapStyle}(e))return t.style=c,(0,i.cloneElement)(e,t);if(function(e){const t=e.type;return t&&t.deckGLViewProps}(e))return(0,i.cloneElement)(e,t)}return e}function p(e){return e&&"object"==typeof e&&"type"in e||!1}function u(e){if("function"==typeof e)return(0,i.createElement)(a.Z,{},e);if(Array.isArray(e))return e.map(u);if(p(e)){if(e.type===i.Fragment)return u(e.props.children);if(s(e.type,a.Z))return e}return e}const h={mixBlendMode:null};function g(e){e.redrawReason&&(e.deck._drawLayers(e.redrawReason),e.redrawReason=null)}const f=(0,i.forwardRef)(((e,t)=>{const[n,c]=(0,i.useState)(0),f=(0,i.useRef)({control:null,version:n,forceUpdate:()=>c((e=>e+1))}).current,m=(0,i.useRef)(null),y=(0,i.useRef)(null),v=(0,i.useMemo)((()=>function(e){let{children:t,layers:n=[],views:o=null}=e;const r=[],c=[],d={};return i.Children.forEach(u(t),(e=>{if(p(e)){const t=e.type;if(s(t,l.Z)){const n=function(e,t){const n={},i=e.defaultProps||{};for(const o in t)i[o]!==t[o]&&(n[o]=t[o]);return new e(n)}(t,e.props);c.push(n)}else r.push(e);if(s(t,a.Z)&&t!==a.Z&&e.props.id){const n=new t(e.props);d[n.id]=n}}else e&&r.push(e)})),Object.keys(d).length>0&&(Array.isArray(o)?o.forEach((e=>{d[e.id]=e})):o&&(d[o.id]=o),o=Object.values(d)),n=c.length>0?[...c,...n]:n,{layers:n,children:r,views:o}}(e)),[e.layers,e.views,e.children]);let _=!0;const w=t=>_&&e.viewState?(f.viewStateUpdateRequested=t,null):(f.viewStateUpdateRequested=null,null==e.onViewStateChange?void 0:e.onViewStateChange(t)),b=t=>{_?f.interactionStateUpdateRequested=t:(f.interactionStateUpdateRequested=null,null==e.onInteractionStateChange||e.onInteractionStateChange(t))},P=(0,i.useMemo)((()=>{const t={...e,style:null,width:"100%",height:"100%",parent:m.current,canvas:y.current,layers:v.layers,views:v.views,onViewStateChange:w,onInteractionStateChange:b};return delete t._customRender,f.deck&&f.deck.setProps(t),t}),[e]);(0,i.useEffect)((()=>{const t=e.Deck||o.Z;return f.deck=function(e,t,n){const i=new t({...n,_customRender:t=>{e.redrawReason=t;const n=i.getViewports();e.lastRenderedViewports!==n?e.forceUpdate():g(e)}});return i}(f,t,{...P,parent:m.current,canvas:y.current}),()=>{var e;return null==(e=f.deck)?void 0:e.finalize()}}),[]),r((()=>{g(f);const{viewStateUpdateRequested:e,interactionStateUpdateRequested:t}=f;e&&w(e),t&&b(t)})),(0,i.useImperativeHandle)(t,(()=>function(e){return{get deck(){return e.deck},pickObject:t=>e.deck.pickObject(t),pickMultipleObjects:t=>e.deck.pickMultipleObjects(t),pickObjects:t=>e.deck.pickObjects(t)}}(f)),[]);const x=f.deck&&f.deck.isInitialized?f.deck.getViewports():void 0,{ContextProvider:k,width:C,height:S,id:N,style:M}=e,{containerStyle:L,canvasStyle:T}=(0,i.useMemo)((()=>function(e){let{width:t,height:n,style:i}=e;const o={position:"absolute",zIndex:0,left:0,top:0,width:t,height:n},r={left:0,top:0};if(i)for(const s in i)s in h?r[s]=i[s]:o[s]=i[s];return{containerStyle:o,canvasStyle:r}}({width:C,height:S,style:M})),[C,S,M]);if(!f.viewStateUpdateRequested&&f.lastRenderedViewports===x||f.version!==n){f.lastRenderedViewports=x,f.version=n;const e=function(e){let{children:t,deck:n,ContextProvider:o}=e;const{viewManager:r}=n||{};if(!r||!r.views.length)return[];const l={},c=r.views[0].id;for(const i of t){let e=c,t=i;p(i)&&s(i.type,a.Z)&&(e=i.props.id||c,t=i.props.children);const n=r.getViewport(e),o=r.getViewState(e);if(n){o.padding=n.padding;const{x:i,y:r,width:s,height:a}=n;t=d(t,{x:i,y:r,width:s,height:a,viewport:n,viewState:o}),l[e]||(l[e]={viewport:n,children:[]}),l[e].children.push(t)}}return Object.keys(l).map((e=>{const{viewport:t,children:r}=l[e],{x:s,y:a,width:c,height:d}=t,p={position:"absolute",left:s,top:a,width:c,height:d},u="view-"+e,h=(0,i.createElement)("div",{key:u,id:u,style:p},...r);if(o){const r={viewport:t,container:n.canvas.offsetParent,eventManager:n.eventManager,onViewStateChange:t=>{t.viewId=e,n._onViewStateChange(t)}};return(0,i.createElement)(o,{key:u,value:r},h)}return h}))}({children:v.children,deck:f.deck,ContextProvider:k}),t=(0,i.createElement)("canvas",{key:"canvas",id:N||"deckgl-overlay",ref:y,style:T});f.control=(0,i.createElement)("div",{id:(N||"deckgl")+"-wrapper",ref:m,style:L},[t,e])}return _=!1,f.control}));f.defaultProps=o.Z.defaultProps;const m=f},27260:(e,t,n)=>{"use strict";n.d(t,{IM:()=>o,Sr:()=>i,fL:()=>r});const i={LIGHT:"https://deck.gl/mapstyle/deck-light.json",LIGHT_LABEL:"https://basemaps.cartocdn.com/gl/positron-gl-style/style.json",DARK:"https://deck.gl/mapstyle/deck-dark.json",BLANK:{version:8,sources:{},layers:[]}},o="https://raw.githubusercontent.com/visgl/deck.gl-data/master/website",r="https://github.com/visgl/deck.gl/tree/master"},44752:(e,t,n)=>{"use strict";n.d(t,{C:()=>c});const i=["dataComparator","fetch"],o=["autoHighlight","coordinateOrigin","coordinateSystem","highlightColor","modelMatrix","opacity","pickable","visible","wrapLongitude"],r={loaders:[],coordinateSystem:"COORDINATE_SYSTEM.LNGLAT",renderSubLayers:"props => new GeoJsonLayer(props)",characterSet:'" !\\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~"'};function s(e,t){if(!e.includes("\n")||0===t)return e;const n=e.split("\n");if(t>0){const e="".padStart(t," ");return n.map(((t,n)=>n>0?e+t:t)).join("\n")}return n.map(((e,n)=>n>0?e.slice(-t):e)).join("\n")}function a(e){return null==e?"null":"string"==typeof e?"'"+e+"'":"function"==typeof e?e.toString():Array.isArray(e)?"["+e.map(a).join(", ")+"]":e===Number.MAX_SAFE_INTEGER?"Number.MAX_SAFE_INTEGER":s(JSON.stringify(e,null,2),2)}function l(e,t){const n=[],l={};t=function(e){const t=e.split("\n");t.pop();const n={};let i,o=1/0;for(const r of t){const e=r.match(/^(\s*)(\w+):\s*(.*)/);e&&e[1].length<=o?(o=e[1].length,i=e[2],n[i]=e[3]):i&&(n[i]+="\n"+r)}for(i in n)n[i]=s(n[i].replace(/,\s*$/,""),2-o);return n}(t);let c=e.constructor,d=!1;const p=e.props[Symbol.for("asyncPropOriginal")],u=e.props[Symbol.for("asyncPropResolved")];function h(e,t,o,r){if(!l[e]&&!i.includes(e)){const i=(o?"// ":"")+e+": "+t+",";void 0===r?n.push(i):n.splice(r,0,i),l[e]=!0}}let g=1;for(h("id",a(e.id)),t.data&&h("data",t.data,!1,g++);c.layerName;){if(c.hasOwnProperty("defaultProps")){n.push("","/* props "+(d?"inherited from":"from")+" "+c.layerName+" class */","");const i=Object.keys(c.defaultProps).sort();for(const n of i){const i=c.defaultProps[n],s=!(n in p)&&!(n in u)&&!Object.hasOwnProperty.call(e.props,n);let l,d=!1;n in t?l=t[n]:(d=i&&i.deprecatedFor,d=d||n.startsWith("_"),d=d||i&&"accessor"===i.type&&"function"==typeof i.value,d=d||"Layer"===c.layerName&&!o.includes(n),l=p[n]||e.props[n],l="function"==typeof l?null:n in r?r[n]:a(l)),d||h(n,l,s)}}c=Object.getPrototypeOf(c),d=!0}for(const i in t)i in l||h(i,t[i],!1,g++);return n.join("\n  ")}function c(e,t){const{Layer:n,isExperimental:i,getTooltip:o,props:r,mapStyle:a=!0,dependencies:c=[],imports:d,initialViewState:p}=e,u=i?"_"+n.layerName:n.layerName,h=["DeckGL",u],g=[];if(d)for(const s in d)s[0]>="a"||(s.endsWith("Loader")?g.push(s):h.push(s));const f=s(JSON.stringify(p,null,2).replace(/"/g,""),2),m="const {"+h.join(", ")+"} = deck;\n"+(g.length?"const {"+g.join(", ")+"} = loaders;\n":"")+"\nconst layer = new "+u+"({\n  "+l(t,r)+"\n});\n\nnew DeckGL({\n  "+(a?"mapStyle: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',":"")+"\n  initialViewState: "+f+",\n  controller: true,\n  "+(o?"getTooltip: "+o+",":"")+"\n  layers: [layer]\n});\n  ";!function(e){let{dependencies:t=[],title:n,source:i}=e;const o={js_external:t.concat(["https://unpkg.com/deck.gl@latest/dist.min.js"]).join(";"),title:n,parent:48721472,tags:["webgl","data visualization"],editors:"001",css:"\n  body {\n    margin: 0;\n    width: 100vw;\n    height: 100vh;\n    overflow: hidden;\n  }\n  \n  .deck-tooltip {\n    font-size: 0.8em;\n    font-family: Helvetica, Arial, sans-serif;\n  }\n  ",js:"/*\n* "+window.location.href+"\n*/\n"+i},r=document.createElement("form");r.action="https://codepen.io/pen/define/",r.method="POST",r.style.display="none",document.body.appendChild(r);const s=document.createElement("input");s.type="text",s.name="data",s.value=JSON.stringify(o),r.appendChild(s),window.open("","deck-example-codepen"),r.target="deck-example-codepen",r.submit(),r.remove()}({dependencies:c.concat(["https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js"]),title:"deck.gl "+n.layerName,source:m})}},62757:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{v:()=>makeLayerDemo});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(67294),_deck_gl_react__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(16103),react_map_gl__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(33545),styled_components__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(19521),_docusaurus_theme_common__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(92949),_constants_defaults__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(27260),_codepen_automation__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(44752);const INITIAL_VIEW_STATE={longitude:-122.4,latitude:37.74,zoom:11,maxZoom:20,pitch:30,bearing:0},TOOLTIP_STYLE={padding:"4px",background:"rgba(0, 0, 0, 0.8)",color:"#fff",maxWidth:"300px",fontSize:"10px",zIndex:9},DemoPlaceholder=styled_components__WEBPACK_IMPORTED_MODULE_4__.ZP.div.withConfig({displayName:"demo-base__DemoPlaceholder",componentId:"sc-bhdrci-0"})(["height:50vh;min-height:200px;position:relative;margin-bottom:24px;@media screen and (max-width:768px){height:60vh;}"]),DemoContainer=styled_components__WEBPACK_IMPORTED_MODULE_4__.ZP.div.withConfig({displayName:"demo-base__DemoContainer",componentId:"sc-bhdrci-1"})(["height:50vh;min-height:200px;position:absolute;width:100%;left:0;top:0;overflow:hidden;@media screen and (max-width:768px){height:60vh;}"]),DemoSourceLink=styled_components__WEBPACK_IMPORTED_MODULE_4__.ZP.div.withConfig({displayName:"demo-base__DemoSourceLink",componentId:"sc-bhdrci-2"})(["position:absolute;top:0;right:0;padding:8px;background:var(--ifm-background-surface-color);margin:12px;box-shadow:0 2px 4px rgba(0,0,0,0.3);cursor:pointer;font-weight:bold;font-size:12px;&:hover{color:var(--ifm-color-primary);}svg{width:20px;vertical-align:middle;margin-right:4px;}"]);function evalObject(source,globals,output){return eval("(function evalObject(globals){\n    Object.assign(globalThis, globals);\n    "+(output?source+"\n      return {"+output.join(",")+"};":"return "+source+";")+"\n  })")(globals)}function makeLayerDemo(config){const{Layer:Layer,getTooltip:getTooltip,props:props,mapStyle:mapStyle=!0,initialViewState:initialViewState=INITIAL_VIEW_STATE,imports:imports}=config;config.initialViewState=initialViewState;const _getTooltip=getTooltip&&eval(getTooltip),styledGetTooltip=e=>{const t=_getTooltip&&_getTooltip(e);return t&&{text:t,style:TOOLTIP_STYLE}},layerProps=evalObject(props,imports);function Demo(){const{isDarkTheme:e}=(0,_docusaurus_theme_common__WEBPACK_IMPORTED_MODULE_5__.I)(),t=new Layer(layerProps),n=e?_constants_defaults__WEBPACK_IMPORTED_MODULE_2__.Sr.DARK:_constants_defaults__WEBPACK_IMPORTED_MODULE_2__.Sr.LIGHT;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(DemoPlaceholder,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(DemoContainer,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_deck_gl_react__WEBPACK_IMPORTED_MODULE_6__.Z,{pickingRadius:5,initialViewState:initialViewState,getTooltip:styledGetTooltip,controller:!0,layers:[t]},mapStyle&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_map_gl__WEBPACK_IMPORTED_MODULE_1__.D5,{reuseMaps:!0,mapLib:__webpack_require__.e(4613).then(__webpack_require__.t.bind(__webpack_require__,24613,23)),mapStyle:n,preventStyleDiffing:!0}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(DemoSourceLink,{onClick:()=>(0,_codepen_automation__WEBPACK_IMPORTED_MODULE_3__.C)(config,t)},react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"currentcolor",d:"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z"})),"Edit on Codepen"))}return react__WEBPACK_IMPORTED_MODULE_0__.memo(Demo)}},61413:(e,t,n)=>{"use strict";n.d(t,{$6:()=>P,J6:()=>w,LN:()=>v,N0:()=>b,Pt:()=>S,R2:()=>k,b:()=>x,eg:()=>_,sD:()=>C,sX:()=>M,xY:()=>N,zC:()=>L});var i=n(43631),o=n(62253),r=n(99147),s=n(68797),a=n(88123),l=n(31759),c=n(6735),d=n(16009),p=n(52329),u=n(76144),h=n(48148),g=n(24309),f=n(27800),m=n(62757),y=n(27260);const v=(0,m.v)({Layer:o.Z,getTooltip:"({object}) => object && `${object.from.name} to ${object.to.name}`",props:"{\n    data: '"+y.IM+"/bart-segments.json',\n    pickable: true,\n    getWidth: 12,\n    getSourcePosition: d => d.from.coordinates,\n    getTargetPosition: d => d.to.coordinates,\n    getSourceColor: d => [Math.sqrt(d.inbound), 140, 0],\n    getTargetColor: d => [Math.sqrt(d.outbound), 140, 0]\n  }"}),_=(0,m.v)({Layer:r.Z,props:"{\n    bounds: [-122.519, 37.7045, -122.355, 37.829],\n    image: '"+y.IM+"/sf-districts.png'\n  }"}),w=(0,m.v)({Layer:s.Z,getTooltip:"({object}) => object && `height: ${object.value * 5000}m`",props:"{\n    data: '"+y.IM+"/hexagons.json',\n    diskResolution: 12,\n    radius: 250,\n    extruded: true,\n    pickable: true,\n    elevationScale: 100,\n    getPosition: d => d.centroid,\n    getFillColor: d => [48, 128, d.value * 255, 255],\n    getLineColor: [0, 0, 0],\n    getLineWidth: 20,\n    getElevation: d => d.value * 50\n  }"}),b=(0,m.v)({Layer:a.Z,getTooltip:"({object}) => object && (object.properties.name || object.properties.station)",props:"{\n    data: '"+y.IM+"/bart.geo.json',\n    pickable: true,\n    stroked: false,\n    filled: true,\n    extruded: true,\n    lineWidthMinPixels: 2,\n    pointType: 'circle+text',\n    pointRadiusUnits: 'pixels',\n    getText: f => f.properties.name,\n    getTextSize: 12,\n    getFillColor: [160, 160, 180, 200],\n    getLineColor: f => {\n      const hex = f.properties.color;\n      // convert to RGB\n      return hex ? hex.match(/[0-9a-f]{2}/g).map(x => parseInt(x, 16)) : [0, 0, 0];\n    },\n    getPointRadius: 4,\n    getLineWidth: 20,\n    getElevation: 30\n  }"}),P=(0,m.v)({Layer:l.Z,getTooltip:"({object}) => object && `height: ${object.value * 5000}m`",props:"{\n    data: '"+y.IM+"/hexagons.json',\n    pickable: true,\n    extruded: true,\n    cellSize: 200,\n    elevationScale: 5000,\n    getPosition: d => d.centroid,\n    getFillColor: d => [48, 128, d.value * 255, 255],\n    getElevation: d => d.value\n  }"}),x=(0,m.v)({Layer:c.Z,getTooltip:"({object}) => object && `${object.name}\n${object.address}`",props:"{\n    data: '"+y.IM+"/bart-stations.json',\n    pickable: true,\n    iconAtlas: '"+y.IM+"/icon-atlas.png',\n    iconMapping: {\n      marker: {\n        x: 0,\n        y: 0,\n        width: 128,\n        height: 128,\n        anchorY: 128,\n        mask: true\n      }\n    },\n    sizeScale: 8,\n    getPosition: d => d.coordinates,\n    getIcon: d => 'marker',\n    getSize: d => 5,\n    getColor: d => [Math.sqrt(d.exits), 140, 0]\n  }"}),k=(0,m.v)({Layer:d.Z,getTooltip:"({object}) => object && `${object.from.name} to ${object.to.name}`",props:"{\n    data: '"+y.IM+"/bart-segments.json',\n    pickable: true,\n    getWidth: 12,\n    getSourcePosition: d => d.from.coordinates,\n    getTargetPosition: d => d.to.coordinates,\n    getColor: d => [Math.sqrt(d.inbound + d.outbound), 140, 0]\n  }"}),C=(0,m.v)({Layer:p.Z,getTooltip:"({object}) => object && object.name",props:"{\n    data: '"+y.IM+"/bart-lines.json',\n    parameters: {\n      depthMask: false\n    },\n    pickable: true,\n    widthScale: 20,\n    widthMinPixels: 2,\n    getPath: d => d.path,\n    getColor: d => {\n      const hex = d.color;\n      // convert to RGB\n      return hex.match(/[0-9a-f]{2}/g).map(x => parseInt(x, 16));\n    },\n    getWidth: d => 5\n  }"}),S=(0,m.v)({Layer:u.Z,getTooltip:"({object}) => object && object.position.join(', ')",imports:{COORDINATE_SYSTEM:i.Df},props:"{\n    data: '"+y.IM+"/pointcloud.json',\n    pickable: false,\n    coordinateSystem: COORDINATE_SYSTEM.METER_OFFSETS,\n    coordinateOrigin: [-122.4, 37.74],\n    pointSize: 2,\n    getPosition: d => d.position,\n    getNormal: d => d.normal,\n    getColor: d => d.color\n  }"}),N=(0,m.v)({Layer:h.Z,getTooltip:"({object}) => object && `${object.zipcode}\nPopulation: ${object.population}`",props:"{\n    data: '"+y.IM+"/sf-zipcodes.json',\n    pickable: true,\n    stroked: true,\n    filled: true,\n    extruded: true,\n    wireframe: true,\n    lineWidthMinPixels: 1,\n    getPolygon: d => d.contour,\n    getElevation: d => d.population / d.area / 10,\n    getFillColor: d => [d.population / d.area / 60, 140, 0],\n    getLineColor: [80, 80, 80],\n    getLineWidth: d => 1\n  }"}),M=(0,m.v)({Layer:g.Z,getTooltip:"({object}) => object && `${object.name}\n${object.address}`",props:"{\n    data: '"+y.IM+"/bart-stations.json',\n    pickable: true,\n    opacity: 0.8,\n    stroked: true,\n    radiusScale: 6,\n    radiusMinPixels: 1,\n    radiusMaxPixels: 100,\n    lineWidthMinPixels: 1,\n    getPosition: d => d.coordinates,\n    getRadius: d => Math.sqrt(d.exits),\n    getFillColor: [255, 140, 0],\n    getLineColor: [0, 0, 0]\n  }"}),L=(0,m.v)({Layer:f.Z,getTooltip:"({object}) => object && `${object.name}\n${object.address}`",props:"{\n    data: '"+y.IM+"/bart-stations.json',\n    pickable: true,\n    sizeScale: 1,\n    getPosition: d => d.coordinates,\n    getText: d => d.name,\n    getColor: [255, 128, 0],\n    getSize: 16,\n    getAngle: 0,\n    getTextAnchor: 'middle',\n    getAlignmentBaseline: 'center'\n  }"})},75501:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var i=n(87462),o=(n(67294),n(3905)),r=n(61413);const s={},a="GeoJsonLayer",l={unversionedId:"api-reference/layers/geojson-layer",id:"api-reference/layers/geojson-layer",title:"GeoJsonLayer",description:"The GeoJsonLayer renders GeoJSON formatted data as polygons, lines and points (circles, icons and/or texts).",source:"@site/../docs/api-reference/layers/geojson-layer.md",sourceDirName:"api-reference/layers",slug:"/api-reference/layers/geojson-layer",permalink:"/deck.gl/docs/api-reference/layers/geojson-layer",draft:!1,editUrl:"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/layers/geojson-layer.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ContourLayer",permalink:"/deck.gl/docs/api-reference/aggregation-layers/contour-layer"},next:{title:"GPUGridLayer (WebGL2)",permalink:"/deck.gl/docs/api-reference/aggregation-layers/gpu-grid-layer"}},c={},d=[{value:"Installation",id:"installation",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>data</code>",id:"data",level:5},{value:"<code>pointType</code> (String, optional)",id:"pointtype",level:5},{value:"Fill Options",id:"fill-options",level:3},{value:"<code>filled</code> (Boolean, optional)",id:"filled",level:5},{value:"<code>getFillColor</code> (Function|Array, optional) transition-enabled",id:"getfillcolor",level:5},{value:"Stroke Options",id:"stroke-options",level:3},{value:"<code>stroked</code> (Boolean, optional)",id:"stroked",level:5},{value:"<code>getLineColor</code> (Function|Array, optional) transition-enabled",id:"getlinecolor",level:5},{value:"<code>getLineWidth</code> (Function|Number, optional) transition-enabled",id:"getlinewidth",level:5},{value:"<code>lineWidthUnits</code> (String, optional)",id:"linewidthunits",level:5},{value:"<code>lineWidthScale</code> (Number, optional) transition-enabled",id:"linewidthscale",level:5},{value:"<code>lineWidthMinPixels</code> (Number, optional) transition-enabled",id:"linewidthminpixels",level:5},{value:"<code>lineWidthMaxPixels</code> (Number, optional) transition-enabled",id:"linewidthmaxpixels",level:5},{value:"<code>lineCapRounded</code> (Boolean, optional)",id:"linecaprounded",level:5},{value:"<code>lineJointRounded</code> (Boolean, optional)",id:"linejointrounded",level:5},{value:"<code>lineMiterLimit</code> (Number, optional) transition-enabled",id:"linemiterlimit",level:5},{value:"<code>lineBillboard</code> (Boolean, optional)",id:"linebillboard",level:5},{value:"3D Options",id:"3d-options",level:3},{value:"<code>extruded</code> (Boolean, optional)",id:"extruded",level:5},{value:"<code>wireframe</code> (Boolean, optional)",id:"wireframe",level:5},{value:"<code>getElevation</code> (Function|Number, optional) transition-enabled",id:"getelevation",level:5},{value:"<code>elevationScale</code> (Number, optional) transition-enabled",id:"elevationscale",level:5},{value:"<code>material</code> (Object, optional)",id:"material",level:5},{value:"<code>_full3d</code> (Boolean, optional)",id:"_full3d",level:5},{value:"pointType:circle Options",id:"pointtypecircle-options",level:3},{value:"pointType:icon Options",id:"pointtypeicon-options",level:3},{value:"pointType:text Options",id:"pointtypetext-options",level:3},{value:"Sub Layers",id:"sub-layers",level:2},{value:"Using binary data",id:"using-binary-data",level:2},{value:"Binary format details",id:"binary-format-details",level:3},{value:"Points",id:"points",level:4},{value:"Numeric properties",id:"numeric-properties",level:4},{value:"Feature ids",id:"feature-ids",level:4},{value:"Representing MultiPoints",id:"representing-multipoints",level:4},{value:"Array lengths",id:"array-lengths",level:4},{value:"Example comparison",id:"example-comparison",level:4},{value:"Lines",id:"lines",level:4},{value:"Polygons",id:"polygons",level:4},{value:"Global feature ids",id:"global-feature-ids",level:4},{value:"Overriding attibutes",id:"overriding-attibutes",level:3},{value:"Remarks",id:"remarks",level:2},{value:"Source",id:"source",level:2}],p={toc:d},u="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"geojsonlayer"},"GeoJsonLayer"),(0,o.kt)(r.N0,{mdxType:"GeoJsonLayerDemo"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoJsonLayer")," renders ",(0,o.kt)("a",{parentName:"p",href:"http://geojson.org"},"GeoJSON")," formatted data as polygons, lines and points (circles, icons and/or texts)."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"GeoJsonLayer")," is a ",(0,o.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/composite-layer"},"CompositeLayer"),". See the ",(0,o.kt)("a",{parentName:"p",href:"#sub-layers"},"sub layers")," that it renders."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import DeckGL from '@deck.gl/react';\nimport {GeoJsonLayer} from '@deck.gl/layers';\n\nfunction App({data, viewState}) {\n  /**\n   * Data format:\n   * Valid GeoJSON object\n   */\n  const layer = new GeoJsonLayer({\n    id: 'geojson-layer',\n    data,\n    pickable: true,\n    stroked: false,\n    filled: true,\n    extruded: true,\n    pointType: 'circle',\n    lineWidthScale: 20,\n    lineWidthMinPixels: 2,\n    getFillColor: [160, 160, 180, 200],\n    getLineColor: d => colorToRGBArray(d.properties.color),\n    getPointRadius: 100,\n    getLineWidth: 1,\n    getElevation: 30\n  });\n\n  return <DeckGL viewState={viewState}\n    layers={[layer]}\n    getTooltip={({object}) => object && (object.properties.name || object.properties.station)} />;\n}\n")),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"To install the dependencies from NPM:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install deck.gl\n# or\nnpm install @deck.gl/core @deck.gl/layers\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import {GeoJsonLayer} from '@deck.gl/layers';\nnew GeoJsonLayer({});\n")),(0,o.kt)("p",null,"To use pre-bundled scripts:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<script src="https://unpkg.com/deck.gl@^8.0.0/dist.min.js"><\/script>\n\x3c!-- or --\x3e\n<script src="https://unpkg.com/@deck.gl/core@^8.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/layers@^8.0.0/dist.min.js"><\/script>\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"new deck.GeoJsonLayer({});\n")),(0,o.kt)("h2",{id:"properties"},"Properties"),(0,o.kt)("p",null,"Inherits from all ",(0,o.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/layer"},"Base Layer")," and ",(0,o.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/composite-layer"},"CompositeLayer")," properties."),(0,o.kt)("h5",{id:"data"},(0,o.kt)("inlineCode",{parentName:"h5"},"data")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoJSONLayer")," accepts any of the following formats passed to the ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," prop:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A valid GeoJSON ",(0,o.kt)("inlineCode",{parentName:"li"},"FeatureCollection"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"Feature"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"Geometry")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"GeometryCollection")," object."),(0,o.kt)("li",{parentName:"ul"},"An array of GeoJSON ",(0,o.kt)("inlineCode",{parentName:"li"},"Feature")," objects."),(0,o.kt)("li",{parentName:"ul"},"An URL or Promise that resolves to the above formats."),(0,o.kt)("li",{parentName:"ul"},"loaders.gl's ",(0,o.kt)("a",{parentName:"li",href:"https://loaders.gl/modules/gis/docs/api-reference/geojson-to-binary"},"flat GeoJSON format"),".")),(0,o.kt)("h5",{id:"pointtype"},(0,o.kt)("inlineCode",{parentName:"h5"},"pointType")," (String, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"'circle'"))),(0,o.kt)("p",null,"How to render ",(0,o.kt)("inlineCode",{parentName:"p"},"Point")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"MultiPoint")," features in the data. Supported types are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"circle")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"icon")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"text"))),(0,o.kt)("p",null,"To use more than one type, join the names with ",(0,o.kt)("inlineCode",{parentName:"p"},"+"),", for example ",(0,o.kt)("inlineCode",{parentName:"p"},"pointType: 'icon+text'"),"."),(0,o.kt)("h3",{id:"fill-options"},"Fill Options"),(0,o.kt)("p",null,"The following props control the solid fill of ",(0,o.kt)("inlineCode",{parentName:"p"},"Polygon")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"MultiPolygon"),"\nfeatures, and the ",(0,o.kt)("inlineCode",{parentName:"p"},"Point")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"MultiPoint")," features if ",(0,o.kt)("inlineCode",{parentName:"p"},"pointType")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"'circle'"),"."),(0,o.kt)("h5",{id:"filled"},(0,o.kt)("inlineCode",{parentName:"h5"},"filled")," (Boolean, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"true"))),(0,o.kt)("p",null,"Whether to draw filled polygons (solid fill) and points (circles). Note that for each polygon,\nonly the area between the outer polygon and any holes will be filled. This\nprop is effective only when the polygon is NOT extruded."),(0,o.kt)("h5",{id:"getfillcolor"},(0,o.kt)("inlineCode",{parentName:"h5"},"getFillColor")," (",(0,o.kt)("a",{parentName:"h5",href:"/deck.gl/docs/developer-guide/using-layers#accessors"},"Function"),"|Array, optional) ",(0,o.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"[0, 0, 0, 255]"))),(0,o.kt)("p",null,"The solid color of the polygon and points (circles).\nFormat is ",(0,o.kt)("inlineCode",{parentName:"p"},"[r, g, b, [a]]"),". Each channel is a number between 0-255 and ",(0,o.kt)("inlineCode",{parentName:"p"},"a")," is 255 if not supplied."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If an array is provided, it is used as the fill color for all features."),(0,o.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each feature to retrieve its fill color.")),(0,o.kt)("h3",{id:"stroke-options"},"Stroke Options"),(0,o.kt)("p",null,"The following props control the ",(0,o.kt)("inlineCode",{parentName:"p"},"LineString")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"MultiLineString")," features,\nthe outline for ",(0,o.kt)("inlineCode",{parentName:"p"},"Polygon")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"MultiPolygon")," features, and the outline for ",(0,o.kt)("inlineCode",{parentName:"p"},"Point")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"MultiPoint")," features if ",(0,o.kt)("inlineCode",{parentName:"p"},"pointType")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"'circle'"),"."),(0,o.kt)("h5",{id:"stroked"},(0,o.kt)("inlineCode",{parentName:"h5"},"stroked")," (Boolean, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"true"))),(0,o.kt)("p",null,"Whether to draw an outline around polygons and points (circles). Note that\nfor complex polygons, both the outer polygon as well the outlines of\nany holes will be drawn."),(0,o.kt)("h5",{id:"getlinecolor"},(0,o.kt)("inlineCode",{parentName:"h5"},"getLineColor")," (",(0,o.kt)("a",{parentName:"h5",href:"/deck.gl/docs/developer-guide/using-layers#accessors"},"Function"),"|Array, optional) ",(0,o.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"[0, 0, 0, 255]"))),(0,o.kt)("p",null,"The rgba color of a line is in the format of ",(0,o.kt)("inlineCode",{parentName:"p"},"[r, g, b, [a]]"),". Each channel is a number between 0-255 and ",(0,o.kt)("inlineCode",{parentName:"p"},"a")," is 255 if not supplied."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If an array is provided, it is used as the line color for all features."),(0,o.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each feature to retrieve its line color.")),(0,o.kt)("h5",{id:"getlinewidth"},(0,o.kt)("inlineCode",{parentName:"h5"},"getLineWidth")," (",(0,o.kt)("a",{parentName:"h5",href:"/deck.gl/docs/developer-guide/using-layers#accessors"},"Function"),"|Number, optional) ",(0,o.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"1"))),(0,o.kt)("p",null,"The width of a line, in units specified by ",(0,o.kt)("inlineCode",{parentName:"p"},"lineWidthUnits")," (default meters)."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If a number is provided, it is used as the line width for all features."),(0,o.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each feature to retrieve its line width.")),(0,o.kt)("h5",{id:"linewidthunits"},(0,o.kt)("inlineCode",{parentName:"h5"},"lineWidthUnits")," (String, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"'meters'"))),(0,o.kt)("p",null,"The units of the line width, one of ",(0,o.kt)("inlineCode",{parentName:"p"},"'meters'"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"'common'"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"'pixels'"),". See ",(0,o.kt)("a",{parentName:"p",href:"/deck.gl/docs/developer-guide/coordinate-systems#supported-units"},"unit system"),"."),(0,o.kt)("h5",{id:"linewidthscale"},(0,o.kt)("inlineCode",{parentName:"h5"},"lineWidthScale")," (Number, optional) ",(0,o.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"1"))),(0,o.kt)("p",null,"A multiplier that is applied to all line widths."),(0,o.kt)("h5",{id:"linewidthminpixels"},(0,o.kt)("inlineCode",{parentName:"h5"},"lineWidthMinPixels")," (Number, optional) ",(0,o.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"0"))),(0,o.kt)("p",null,"The minimum line width in pixels. This prop can be used to prevent the line from getting too thin when zoomed out."),(0,o.kt)("h5",{id:"linewidthmaxpixels"},(0,o.kt)("inlineCode",{parentName:"h5"},"lineWidthMaxPixels")," (Number, optional) ",(0,o.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: Number.MAX_SAFE_INTEGER")),(0,o.kt)("p",null,"The maximum line width in pixels. This prop can be used to prevent the line from getting too thick when zoomed in."),(0,o.kt)("h5",{id:"linecaprounded"},(0,o.kt)("inlineCode",{parentName:"h5"},"lineCapRounded")," (Boolean, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"false"))),(0,o.kt)("p",null,"Type of line caps. If ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", draw round caps. Otherwise draw square caps."),(0,o.kt)("h5",{id:"linejointrounded"},(0,o.kt)("inlineCode",{parentName:"h5"},"lineJointRounded")," (Boolean, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"false"))),(0,o.kt)("p",null,"Type of line joint. If ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", draw round joints. Otherwise draw miter joints."),(0,o.kt)("h5",{id:"linemiterlimit"},(0,o.kt)("inlineCode",{parentName:"h5"},"lineMiterLimit")," (Number, optional) ",(0,o.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"4"))),(0,o.kt)("p",null,"The maximum extent of a joint in ratio to the stroke width.\nOnly works if ",(0,o.kt)("inlineCode",{parentName:"p"},"lineJointRounded")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,o.kt)("h5",{id:"linebillboard"},(0,o.kt)("inlineCode",{parentName:"h5"},"lineBillboard")," (Boolean, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"false"))),(0,o.kt)("p",null,"If ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", extrude the line in screen space (width always faces the camera).\nIf ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),", the width always faces up."),(0,o.kt)("h3",{id:"3d-options"},"3D Options"),(0,o.kt)("p",null,"The following props control the extrusion of ",(0,o.kt)("inlineCode",{parentName:"p"},"Polygon")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"MultiPolygon")," features."),(0,o.kt)("h5",{id:"extruded"},(0,o.kt)("inlineCode",{parentName:"h5"},"extruded")," (Boolean, optional)"),(0,o.kt)("p",null,"Extrude Polygon and MultiPolygon features along the z-axis if set to\ntrue. The height of the drawn features is obtained using the ",(0,o.kt)("inlineCode",{parentName:"p"},"getElevation")," accessor."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"false"))),(0,o.kt)("h5",{id:"wireframe"},(0,o.kt)("inlineCode",{parentName:"h5"},"wireframe")," (Boolean, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"false"))),(0,o.kt)("p",null,'Whether to generate a line wireframe of the hexagon. The outline will have\n"horizontal" lines closing the top and bottom polygons and a vertical line\n(a "strut") for each vertex on the polygon.'),(0,o.kt)("p",null,"Remarks:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"These lines are rendered with ",(0,o.kt)("inlineCode",{parentName:"li"},"GL.LINE")," and will thus always be 1 pixel wide."),(0,o.kt)("li",{parentName:"ul"},"Wireframe and solid extrusions are exclusive, you'll need to create two layers\nwith the same data if you want a combined rendering effect."),(0,o.kt)("li",{parentName:"ul"},"This is only effective if the ",(0,o.kt)("inlineCode",{parentName:"li"},"extruded")," prop is set to true.")),(0,o.kt)("h5",{id:"getelevation"},(0,o.kt)("inlineCode",{parentName:"h5"},"getElevation")," (",(0,o.kt)("a",{parentName:"h5",href:"/deck.gl/docs/developer-guide/using-layers#accessors"},"Function"),"|Number, optional) ",(0,o.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"1000"))),(0,o.kt)("p",null,"The elevation of a polygon feature (when ",(0,o.kt)("inlineCode",{parentName:"p"},"extruded")," is true)."),(0,o.kt)("p",null,"If a cartographic projection mode is used, height will be interpreted as meters,\notherwise will be in unit coordinates."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If a number is provided, it is used as the elevation for all polygon features."),(0,o.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each polygon feature to retrieve its elevation.")),(0,o.kt)("h5",{id:"elevationscale"},(0,o.kt)("inlineCode",{parentName:"h5"},"elevationScale")," (Number, optional) ",(0,o.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"1"))),(0,o.kt)("p",null,"Elevation multiplier. The final elevation is calculated by\n",(0,o.kt)("inlineCode",{parentName:"p"},"elevationScale * getElevation(d)"),". ",(0,o.kt)("inlineCode",{parentName:"p"},"elevationScale")," is a handy property to scale\nall polygon elevation without updating the data."),(0,o.kt)("h5",{id:"material"},(0,o.kt)("inlineCode",{parentName:"h5"},"material")," (Object, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"true"))),(0,o.kt)("p",null,"This is an object that contains material props for ",(0,o.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/lighting-effect"},"lighting effect")," applied on extruded polygons.\nCheck ",(0,o.kt)("a",{parentName:"p",href:"/deck.gl/docs/developer-guide/using-lighting#constructing-a-material-instance"},"the lighting guide")," for configurable settings."),(0,o.kt)("h5",{id:"_full3d"},(0,o.kt)("inlineCode",{parentName:"h5"},"_full3d")," (Boolean, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"false"))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note: This prop is experimental")),(0,o.kt)("p",null,"When true, polygon tesselation will be performed on the plane with the largest area, instead of the xy plane."),(0,o.kt)("p",null,"Remarks:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Only use this if you experience issues rendering features that only change on the z axis."),(0,o.kt)("li",{parentName:"ul"},"This prop is only effective with ",(0,o.kt)("inlineCode",{parentName:"li"},"XYZ")," data.")),(0,o.kt)("h3",{id:"pointtypecircle-options"},"pointType:circle Options"),(0,o.kt)("p",null,"The following props are forwarded to a ",(0,o.kt)("inlineCode",{parentName:"p"},"ScatterplotLayer")," if ",(0,o.kt)("inlineCode",{parentName:"p"},"pointType")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"'circle'"),"."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Prop name"),(0,o.kt)("th",{parentName:"tr",align:null},"Default value"),(0,o.kt)("th",{parentName:"tr",align:null},"ScatterplotLayer equivalent"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getPointRadius")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"1")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/scatterplot-layer#getradius"},"getRadius"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"pointRadiusUnits")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"'meters'")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/scatterplot-layer#radiusunits"},"radiusUnits"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"pointRadiusScale")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"1")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/scatterplot-layer#radiusscale"},"radiusScale"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"pointRadiusMinPixels")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"0")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/scatterplot-layer#radiusminpixels"},"radiusMinPixels"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"pointRadiusMaxPixels")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Number.MAX_SAFE_INTEGER")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/scatterplot-layer#radiusmaxpixels"},"radiusMaxPixels"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"pointAntialiasing")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"true")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/scatterplot-layer#antialiasing"},"antialiasing"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"pointBillboard")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"false")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/scatterplot-layer#billboard"},"billboard"))))),(0,o.kt)("h3",{id:"pointtypeicon-options"},"pointType:icon Options"),(0,o.kt)("p",null,"The following props are forwarded to an ",(0,o.kt)("inlineCode",{parentName:"p"},"IconLayer")," if ",(0,o.kt)("inlineCode",{parentName:"p"},"pointType")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"'icon'"),"."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Prop name"),(0,o.kt)("th",{parentName:"tr",align:null},"Default value"),(0,o.kt)("th",{parentName:"tr",align:null},"IconLayer equivalent"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"iconAtlas")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"null")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/icon-layer#iconatlas"},"iconAtlas"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"iconMapping")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"{}")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/icon-layer#iconmapping"},"iconMapping"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getIcon")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"f => f.properties.icon")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/icon-layer#geticon"},"getIcon"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getIconSize")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"1")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/icon-layer#getsize"},"getSize"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getIconColor")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[0, 0, 0, 255]")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/icon-layer#getcolor"},"getColor"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getIconAngle")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"0")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/icon-layer#getangle"},"getAngle"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getIconPixelOffset")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[0, 0]")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/icon-layer#getpixeloffset"},"getPixelOffset"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"iconSizeUnits")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"'pixels'")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/icon-layer#sizeunits"},"sizeUnits"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"iconSizeScale")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"1")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/icon-layer#sizescale"},"sizeScale"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"iconSizeMinPixels")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"0")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/icon-layer#sizeminpixels"},"sizeMinPixels"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"iconSizeMaxPixels")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Number.MAX_SAFE_INTEGER")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/icon-layer#sizemaxpixels"},"sizeMaxPixels"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"iconBillboard")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"true")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/icon-layer#billboard"},"billboard"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"iconAlphaCutoff")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"0.05")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/icon-layer#alphaCutoff"},"alphaCutoff"))))),(0,o.kt)("h3",{id:"pointtypetext-options"},"pointType:text Options"),(0,o.kt)("p",null,"The following props are forwarded to a ",(0,o.kt)("inlineCode",{parentName:"p"},"TextLayer")," if ",(0,o.kt)("inlineCode",{parentName:"p"},"pointType")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"'text'"),"."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Prop name"),(0,o.kt)("th",{parentName:"tr",align:null},"Default value"),(0,o.kt)("th",{parentName:"tr",align:null},"TextLayer equivalent"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getText")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"f => f.properties.text")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#gettext"},"getText"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getTextColor")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[0, 0, 0, 255]")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#getcolor"},"getColor"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getTextAngle")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"0")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#getangle"},"getAngle"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getTextSize")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"32")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#getsize"},"getSize"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getTextAnchor")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"'middle'")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#gettextanchor"},"getTextAnchor"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getTextAlignmentBaseline")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"'center'")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#getalignmentbaseline"},"getAlignmentBaseline"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getTextPixelOffset")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[0, 0]")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#getpixeloffset"},"getPixelOffset"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getTextBackgroundColor")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[255, 255, 255, 255]")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#getbackgroundcolor"},"getBackgroundColor"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getTextBorderColor")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[0, 0, 0, 255]")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#getbordercolor"},"getBorderColor"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getTextBorderWidth")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"0")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#getborderwidth"},"getBorderWidth"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textSizeUnits")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"'pixels'")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#sizeunits"},"sizeUnits"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textSizeScale")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"1")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#sizescale"},"sizeScale"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textSizeMinPixels")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"0")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#sizeminpixels"},"sizeMinPixels"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textSizeMaxPixels")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Number.MAX_SAFE_INTEGER")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#sizemaxpixels"},"sizeMaxPixels"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textCharacterSet")),(0,o.kt)("td",{parentName:"tr",align:null},"ASCII chars 32-128"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#characterset"},"characterSet"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textFontFamily")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"'Monaco, monospace'")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#fontfamily"},"fontFamily"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textFontWeight")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"'normal'")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#fontweight"},"fontWeight"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textLineHeight")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"1")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#lineheight"},"lineHeight"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textMaxWidth")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"-1")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#maxwidth"},"maxWidth"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textWordBreak")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"'break-word'")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#wordbreak"},"wordBreak"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textBackground")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"false")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#background"},"background"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textBackgroundPadding")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[0, 0]")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#backgroundpadding"},"backgroundPadding"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textOutlineColor")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[0, 0, 0, 255]")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#outlinecolor"},"outlineColor"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textOutlineWidth")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"0")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#outlinewidth"},"outlineWidth"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textBillboard")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"true")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#billboard"},"billboard"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textFontSettings")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"{}")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/deck.gl/docs/api-reference/layers/text-layer#fontSettings"},"fontSettings"))))),(0,o.kt)("h2",{id:"sub-layers"},"Sub Layers"),(0,o.kt)("p",null,"The GeoJsonLayer renders the following sublayers:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"polygons-fill")," - a ",(0,o.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/layers/solid-polygon-layer"},"SolidPolygonLayer")," rendering all the ",(0,o.kt)("inlineCode",{parentName:"li"},"Polygon")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"MultiPolygon")," features."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"polygons-stroke")," - a ",(0,o.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/layers/path-layer"},"PathLayer")," rendering the outline of all the ",(0,o.kt)("inlineCode",{parentName:"li"},"Polygon")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"MultiPolygon")," features. Only rendered if ",(0,o.kt)("inlineCode",{parentName:"li"},"stroked: true")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"extruded: false"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"linestrings")," - a ",(0,o.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/layers/path-layer"},"PathLayer")," rendering all the ",(0,o.kt)("inlineCode",{parentName:"li"},"LineString")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"MultiLineString")," features."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"points-circle")," - a ",(0,o.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/layers/scatterplot-layer"},"ScatterplotLayer")," rendering all the ",(0,o.kt)("inlineCode",{parentName:"li"},"Point")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"MultiPoint")," features if ",(0,o.kt)("inlineCode",{parentName:"li"},"pointType")," is ",(0,o.kt)("inlineCode",{parentName:"li"},"'circle'"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"points-icon")," - an ",(0,o.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/layers/icon-layer"},"IconLayer")," rendering all the ",(0,o.kt)("inlineCode",{parentName:"li"},"Point")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"MultiPoint")," features if ",(0,o.kt)("inlineCode",{parentName:"li"},"pointType")," is ",(0,o.kt)("inlineCode",{parentName:"li"},"'icon'"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"points-text")," - a ",(0,o.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/layers/text-layer"},"TextLayer")," rendering all the ",(0,o.kt)("inlineCode",{parentName:"li"},"Point")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"MultiPoint")," features if ",(0,o.kt)("inlineCode",{parentName:"li"},"pointType")," is ",(0,o.kt)("inlineCode",{parentName:"li"},"'text'"),".")),(0,o.kt)("h2",{id:"using-binary-data"},"Using binary data"),(0,o.kt)("p",null,"This section is about the special requirements when ",(0,o.kt)("a",{parentName:"p",href:"/deck.gl/docs/developer-guide/performance#supply-attributes-directly"},"supplying attributes directly")," to a ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoJsonLayer"),"."),(0,o.kt)("p",null,"The most common way to supply binary data is to use the ",(0,o.kt)("a",{parentName:"p",href:"https://loaders.gl/modules/gis/docs/api-reference/geojson-to-binary"},"flat GeoJSON format"),", this is done by default when using the ",(0,o.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/geo-layers/mvt-layer"},"MVTLayer"),". "),(0,o.kt)("h3",{id:"binary-format-details"},"Binary format details"),(0,o.kt)("p",null,"In general this format is not intended to be human readable, and rather than being edited by hand should be generated with ",(0,o.kt)("a",{parentName:"p",href:"https://loaders.gl/modules/gis/docs/api-reference/geojson-to-binary"},"geojsonToBinary"),". The purpose of this section is to help explain how this format works."),(0,o.kt)("p",null,"At the top level the data is grouped by geometry type, into points, lines and polygons:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const data = {points: {...}, lines: {...}, polygons: {...}};\n")),(0,o.kt)("p",null,"When the ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoJsonLayer")," detects this data structure it assumes it is dealing with binary data, rather than standard GeoJSON. Within each geometry type the data is laid out in a format that corresponds to the buffers that will be sent to the GPU. "),(0,o.kt)("h4",{id:"points"},"Points"),(0,o.kt)("p",null,"For example, for the point data, the positions are encoded as a flat interleaved array with associated properties grouped by point:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"points: {\n  positions: {value: Float32Array([x0, y0, x1, y1, ...]), size: 2}, // Use size: 3 for xyz\n  properties: [{name: 'name0', address: 'address0'}, {name: 'name1', ...}, ...],\n  ...\n}\n")),(0,o.kt)("h4",{id:"numeric-properties"},"Numeric properties"),(0,o.kt)("p",null,"For performance numeric properties can be passed as flat arrays:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"points: {\n  ...,\n  numericProps: {\n    numericProperty1: {value: Float32Array([v0, v1, ...], size: 1}\n    numericProperty2: {value: Float32Array([v0, v1, ...], size: 1}\n  }\n")),(0,o.kt)("h4",{id:"feature-ids"},"Feature ids"),(0,o.kt)("p",null,"In order to specify how the ",(0,o.kt)("inlineCode",{parentName:"p"},"positions")," data should be interpreted an array of feature ids is included. Often in the case of points this is just a trivial incrementing list:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"points: {\n  featureIds: {value: Uint16Array([0, 1, 2, ...]), size: 1}\n}\n\n")),(0,o.kt)("p",null,"These ids correspond to the values in the ",(0,o.kt)("inlineCode",{parentName:"p"},"positions")," array and always start from 0, and increase, without any skipping any values."),(0,o.kt)("p",null,"These are in general not equal to the ",(0,o.kt)("inlineCode",{parentName:"p"},"id"),"s present as top level fields on the GeoJSON source. Those are instead stored in the ",(0,o.kt)("inlineCode",{parentName:"p"},"fields")," property in the same format as the ",(0,o.kt)("inlineCode",{parentName:"p"},"properties"),". "),(0,o.kt)("h4",{id:"representing-multipoints"},"Representing MultiPoints"),(0,o.kt)("p",null,"A MultiPoint is a feature which represents one logical unit, but compromises of a collection of point geometries. This is represented by association, where points within a MultiPoint will share the same ",(0,o.kt)("inlineCode",{parentName:"p"},"featureId"),". Here ",(0,o.kt)("inlineCode",{parentName:"p"},"(x0, y0)")," are a simple Point, while ",(0,o.kt)("inlineCode",{parentName:"p"},"(x1, y1)")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"(x2, y2)")," belong to a MultiPoint."),(0,o.kt)("p",null,"points: {\npositions: {value: Float32Array(","[x0, y0, x1, y1, x2, y2]","), size: 2},\nfeatureIds: {value: Uint16Array(","[0, 1, 1, ...]","), size: 1}\n}"),(0,o.kt)("h4",{id:"array-lengths"},"Array lengths"),(0,o.kt)("p",null,"Due to MultiPoints, the length of ",(0,o.kt)("inlineCode",{parentName:"p"},"properties")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"fields")," arrays will not always be the same length (multiplied by ",(0,o.kt)("inlineCode",{parentName:"p"},"positions.size"),") as the ",(0,o.kt)("inlineCode",{parentName:"p"},"positions")," array. The length will match the count of individual features. This is in contrast to the ",(0,o.kt)("inlineCode",{parentName:"p"},"featureId")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"numericProp")," arrays, which will contain the same number of elements as the ",(0,o.kt)("inlineCode",{parentName:"p"},"positions")," array (divided by ",(0,o.kt)("inlineCode",{parentName:"p"},"positions.size"),")."),(0,o.kt)("h4",{id:"example-comparison"},"Example comparison"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"geojson = {\n  type: 'FeatureCollection',\n  features: [{\n    id: 123,\n    type: 'Feature',\n    properties: {name: 'London', population: 10000000},\n    geometry: {coordinates: [1.23, 4.56], type: 'Point'}\n  },\n  ...\n  ]\n}\n\nbinary = {\n  points: {\n    positions: {value: Float32Array([1,23, 4.56, ...]), size: 2},\n    properties: [{name: 'London'}, ...],\n    numericProps: {\n      population: {value: Float32Array([10000000, ...], size: 1}\n    }\n    featureIds: {value: Uint16Array([0, ...]), size: 1}\n    fields: [{id: 123}]\n  }\n}\n")),(0,o.kt)("h4",{id:"lines"},"Lines"),(0,o.kt)("p",null,"Lines are represented in a similar manner, with the addition of a ",(0,o.kt)("inlineCode",{parentName:"p"},"pathIndices")," array, which contains a series of offsets into the ",(0,o.kt)("inlineCode",{parentName:"p"},"positions")," array, specifying where each line begins. All the other parameters are as above, namely that ",(0,o.kt)("inlineCode",{parentName:"p"},"featureIds")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"numericProps")," are stored per-vertex, while ",(0,o.kt)("inlineCode",{parentName:"p"},"properties")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"fields")," are per-feature."),(0,o.kt)("p",null,"Here is how lines are represented, the first four vertices belong to the first line, thus the value of the second path index is 4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"lines: {\n  positions: {value: Float32Array([x0, y0, ..., x4, y4, ...]), size: 2},\n  properties: [{name: 'name0'}, {name: 'name1}, ...],\n  numericProps: {\n    population: {value: Float32Array([100, 100, 100, 100, 789, 789, ...], size: 1}\n  }\n  pathIndices: {value: Uint16Array([0, 4, ...]), size: 1}\n  featureIds: {value: Uint16Array([0, 0, 0, 0, 1, 1, ...]), size: 1}\n  fields: [{id: 123}, {id: 456}]\n}\n")),(0,o.kt)("h4",{id:"polygons"},"Polygons"),(0,o.kt)("p",null,"Polygons are an extension of the idea introduced with lines, but instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"pathIndices")," the ",(0,o.kt)("inlineCode",{parentName:"p"},"polygonIndicies")," array specifies where each polygon starts inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"positions")," array. Because polygons can have holes, the offsets for the outer and inner rings are stored separately in the ",(0,o.kt)("inlineCode",{parentName:"p"},"primitivePolygonIndices")," array. A polygon that has an outer ring consisting of 60 vertices and a hole with 40 vertices is represented as:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"polygons: {\n  positions: {value: Float32Array([x0, y0, ...]), size: 2},\n  polygonIndices: {value: Uint16Array([0, 100, ...]), size: 1}\n  primitivePolygonIndices: {value: Uint16Array([0, 60, 100, ...]), size: 1}\n}\n")),(0,o.kt)("p",null,"Note the subtle difference here to other columnar formats (like ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/geoarrow/geoarrow/"},"GeoArrow"),") where the indices are nested, i.e. ",(0,o.kt)("inlineCode",{parentName:"p"},"polygonIndices")," point into the ",(0,o.kt)("inlineCode",{parentName:"p"},"primitivePolygonIndices")," array rather than directly into ",(0,o.kt)("inlineCode",{parentName:"p"},"positions"),"."),(0,o.kt)("h4",{id:"global-feature-ids"},"Global feature ids"),(0,o.kt)("p",null,"Because the ",(0,o.kt)("inlineCode",{parentName:"p"},"features")," array in the GeoJSON can contain a mix of different geometry types, in order to represent this ordering each of the ",(0,o.kt)("inlineCode",{parentName:"p"},"points"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"lines")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"polygons")," objects contains a ",(0,o.kt)("inlineCode",{parentName:"p"},"globalFeatureIds")," array, which contains the per-vertex indices into the original GeoJSON `features' array."),(0,o.kt)("h3",{id:"overriding-attibutes"},"Overriding attibutes"),(0,o.kt)("p",null,"In order to pass ",(0,o.kt)("a",{parentName:"p",href:"/deck.gl/docs/developer-guide/performance#supply-attributes-directly"},"pass attributes directly")," directly to the sublayers, an optional ",(0,o.kt)("inlineCode",{parentName:"p"},"attributes")," member can be added to the ",(0,o.kt)("inlineCode",{parentName:"p"},"points"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"lines")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"polygons"),". For example to pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"getWidth")," attribute to the ",(0,o.kt)("inlineCode",{parentName:"p"},"PathLayer"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"lines: {\n  ...,\n  attributes: {\n    getWidth: {value: new Float32Array([1, 2, 3, ....]), size: 1}\n  }\n}\n\n")),(0,o.kt)("h2",{id:"remarks"},"Remarks"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Geometry transition can be enabled with ",(0,o.kt)("inlineCode",{parentName:"li"},"props.transitions: {geometry: <transition_settings>}"),"."),(0,o.kt)("li",{parentName:"ul"},"Input data must adhere to the ",(0,o.kt)("a",{parentName:"li",href:"https://tools.ietf.org/html/rfc7946"},"GeoJSON specification"),". Most GIS software support exporting to GeoJSON format. You may validate your data with free tools such as ",(0,o.kt)("a",{parentName:"li",href:"https://geojson.io/"},"this"),"."),(0,o.kt)("li",{parentName:"ul"},"The GeoJsonLayer renders 3D geometries if each feature's ",(0,o.kt)("inlineCode",{parentName:"li"},"coordinates")," contain 3D points.")),(0,o.kt)("h2",{id:"source"},"Source"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/visgl/deck.gl/tree/master/modules/layers/src/geojson-layer"},"modules/layers/src/geojson-layer")))}h.isMDXComponent=!0},96070:()=>{},39875:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});const i=1e20;class o{constructor({fontSize:e=24,buffer:t=3,radius:n=8,cutoff:i=.25,fontFamily:o="sans-serif",fontWeight:r="normal",fontStyle:s="normal"}={}){this.buffer=t,this.cutoff=i,this.radius=n;const a=this.size=e+4*t,l=this._createCanvas(a),c=this.ctx=l.getContext("2d",{willReadFrequently:!0});c.font=`${s} ${r} ${e}px ${o}`,c.textBaseline="alphabetic",c.textAlign="left",c.fillStyle="black",this.gridOuter=new Float64Array(a*a),this.gridInner=new Float64Array(a*a),this.f=new Float64Array(a),this.z=new Float64Array(a+1),this.v=new Uint16Array(a)}_createCanvas(e){const t=document.createElement("canvas");return t.width=t.height=e,t}draw(e){const{width:t,actualBoundingBoxAscent:n,actualBoundingBoxDescent:o,actualBoundingBoxLeft:s,actualBoundingBoxRight:a}=this.ctx.measureText(e),l=Math.ceil(n),c=Math.max(0,Math.min(this.size-this.buffer,Math.ceil(a-s))),d=Math.min(this.size-this.buffer,l+Math.ceil(o)),p=c+2*this.buffer,u=d+2*this.buffer,h=Math.max(p*u,0),g=new Uint8ClampedArray(h),f={data:g,width:p,height:u,glyphWidth:c,glyphHeight:d,glyphTop:l,glyphLeft:0,glyphAdvance:t};if(0===c||0===d)return f;const{ctx:m,buffer:y,gridInner:v,gridOuter:_}=this;m.clearRect(y,y,c,d),m.fillText(e,y,y+l);const w=m.getImageData(y,y,c,d);_.fill(i,0,h),v.fill(0,0,h);for(let r=0;r<d;r++)for(let e=0;e<c;e++){const t=w.data[4*(r*c+e)+3]/255;if(0===t)continue;const n=(r+y)*p+e+y;if(1===t)_[n]=0,v[n]=i;else{const e=.5-t;_[n]=e>0?e*e:0,v[n]=e<0?e*e:0}}r(_,0,0,p,u,p,this.f,this.v,this.z),r(v,y,y,c,d,p,this.f,this.v,this.z);for(let i=0;i<h;i++){const e=Math.sqrt(_[i])-Math.sqrt(v[i]);g[i]=Math.round(255-255*(e/this.radius+this.cutoff))}return f}}function r(e,t,n,i,o,r,a,l,c){for(let d=t;d<t+i;d++)s(e,n*r+d,r,o,a,l,c);for(let d=n;d<n+o;d++)s(e,d*r+t,1,i,a,l,c)}function s(e,t,n,o,r,s,a){s[0]=0,a[0]=-i,a[1]=i,r[0]=e[t];for(let l=1,c=0,d=0;l<o;l++){r[l]=e[t+l*n];const o=l*l;do{const e=s[c];d=(r[l]-r[e]+o-e*e)/(l-e)/2}while(d<=a[c]&&--c>-1);c++,s[c]=l,a[c]=d,a[c+1]=i}for(let i=0,l=0;i<o;i++){for(;a[l+1]<i;)l++;const o=s[l],c=i-o;e[t+i*n]=r[o]+c*c}}}}]);