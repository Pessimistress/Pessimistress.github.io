(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[8782],{32900:(t,e,n)=>{"use strict";n.d(e,{Z:()=>d});var i=n(15804),o=n(51355);const r=new Uint16Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]),s=new Float32Array([-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1]),a=new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0]),l=new Float32Array([0,0,1,0,1,1,0,1,1,0,1,1,0,1,0,0,0,1,0,0,1,0,1,1,1,1,0,1,0,0,1,0,1,0,1,1,0,1,0,0,0,0,1,0,1,1,0,1]),c={POSITION:{size:3,value:new Float32Array(s)},NORMAL:{size:3,value:new Float32Array(a)},TEXCOORD_0:{size:2,value:new Float32Array(l)}};class d extends i.Z{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{id:e=(0,o.hQ)("cube-geometry")}=t;super({...t,id:e,indices:{size:1,value:new Uint16Array(r)},attributes:{...c,...t.attributes}})}}},3905:(t,e,n)=>{"use strict";n.d(e,{Zo:()=>d,kt:()=>g});var i=n(67294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function a(t,e){if(null==t)return{};var n,i,o=function(t,e){if(null==t)return{};var n,i,o={},r=Object.keys(t);for(i=0;i<r.length;i++)n=r[i],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(i=0;i<r.length;i++)n=r[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var l=i.createContext({}),c=function(t){var e=i.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},d=function(t){var e=c(t.components);return i.createElement(l.Provider,{value:e},t.children)},p="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},h=i.forwardRef((function(t,e){var n=t.components,o=t.mdxType,r=t.originalType,l=t.parentName,d=a(t,["components","mdxType","originalType","parentName"]),p=c(n),h=o,g=p["".concat(l,".").concat(h)]||p[h]||u[h]||r;return n?i.createElement(g,s(s({ref:e},d),{},{components:n})):i.createElement(g,s({ref:e},d))}));function g(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var r=n.length,s=new Array(r);s[0]=h;var a={};for(var l in e)hasOwnProperty.call(e,l)&&(a[l]=e[l]);a.originalType=t,a[p]="string"==typeof t?t:o,s[1]=a;for(var c=2;c<r;c++)s[c]=n[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},93932:(t,e,n)=>{"use strict";n.d(e,{Z:()=>w});var i=n(62833);const o=()=>{},r=2,s=3,a=t=>t,l=1;class c{constructor(t){this._onTransitionUpdate=t=>{const{time:e,settings:{interpolator:n,startProps:i,endProps:o,duration:r,easing:s}}=t,a=s(e/r),l=n.interpolateProps(i,o,a);this.propsInTransition=this.getControllerState({...this.props,...l}).getViewportProps(),this.onViewStateChange({viewState:this.propsInTransition,oldViewState:this.props})},this.getControllerState=t.getControllerState,this.propsInTransition=null,this.transition=new i.Z(t.timeline),this.onViewStateChange=t.onViewStateChange||o,this.onStateChange=t.onStateChange||o}finalize(){this.transition.cancel()}getViewportInTransition(){return this.propsInTransition}processViewStateChange(t){let e=!1;const n=this.props;if(this.props=t,!n||this._shouldIgnoreViewportChange(n,t))return!1;if(this._isTransitionEnabled(t)){let i=n;if(this.transition.inProgress){const{interruption:t,endProps:e}=this.transition.settings;i={...n,...t===r?e:this.propsInTransition||n}}this._triggerTransition(i,t),e=!0}else this.transition.cancel();return e}updateTransition(){this.transition.update()}_isTransitionEnabled(t){const{transitionDuration:e,transitionInterpolator:n}=t;return(e>0||"auto"===e)&&Boolean(n)}_isUpdateDueToCurrentTransition(t){return!(!this.transition.inProgress||!this.propsInTransition)&&this.transition.settings.interpolator.arePropsEqual(t,this.propsInTransition)}_shouldIgnoreViewportChange(t,e){return this.transition.inProgress?this.transition.settings.interruption===s||this._isUpdateDueToCurrentTransition(e):!this._isTransitionEnabled(e)||e.transitionInterpolator.arePropsEqual(t,e)}_triggerTransition(t,e){const n=this.getControllerState(t),i=this.getControllerState(e).shortestPathFrom(n),o=e.transitionInterpolator,r=o.getDuration?o.getDuration(t,e):e.transitionDuration;if(0===r)return;const s=o.initializeProps(t,i);this.propsInTransition={};const c={duration:r,easing:e.transitionEasing||a,interpolator:o,interruption:e.transitionInterruption||l,startProps:s.start,endProps:s.end,onStart:e.onTransitionStart,onUpdate:this._onTransitionUpdate,onInterrupt:this._onTransitionEnd(e.onTransitionInterrupt),onEnd:this._onTransitionEnd(e.onTransitionEnd)};this.transition.start(c),this.onStateChange({inTransition:!0}),this.updateTransition()}_onTransitionEnd(t){return e=>{this.propsInTransition=null,this.onStateChange({inTransition:!1,isZooming:!1,isPanning:!1,isRotating:!1}),null==t||t(e)}}}var d=n(60499);const p={transitionDuration:0},u=t=>1-(1-t)*(1-t),h=["wheel"],g=["panstart","panmove","panend"],f=["pinchstart","pinchmove","pinchend"],m=["tripanstart","tripanmove","tripanend"],y=["doubletap"],v=["keydown"],_={};class w{constructor(t){this.state={},this._events={},this._interactionState={isDragging:!1},this._customEvents=[],this._eventStartBlocked=null,this._panMove=!1,this.invertPan=!1,this.dragMode="rotate",this.inertia=0,this.scrollZoom=!0,this.dragPan=!0,this.dragRotate=!0,this.doubleClickZoom=!0,this.touchZoom=!0,this.touchRotate=!1,this.keyboard=!0,this.transitionManager=new c({...t,getControllerState:t=>new this.ControllerState(t),onViewStateChange:this._onTransition.bind(this),onStateChange:this._setInteractionState.bind(this)}),this.handleEvent=this.handleEvent.bind(this),this.eventManager=t.eventManager,this.onViewStateChange=t.onViewStateChange||(()=>{}),this.onStateChange=t.onStateChange||(()=>{}),this.makeViewport=t.makeViewport}set events(t){this.toggleEvents(this._customEvents,!1),this.toggleEvents(t,!0),this._customEvents=t,this.props&&this.setProps(this.props)}finalize(){for(const e in this._events){var t;if(this._events[e])null==(t=this.eventManager)||t.off(e,this.handleEvent)}this.transitionManager.finalize()}handleEvent(t){this._controllerState=void 0;const e=this._eventStartBlocked;switch(t.type){case"panstart":return!e&&this._onPanStart(t);case"panmove":return this._onPan(t);case"panend":return this._onPanEnd(t);case"pinchstart":return!e&&this._onPinchStart(t);case"pinchmove":return this._onPinch(t);case"pinchend":return this._onPinchEnd(t);case"tripanstart":return!e&&this._onTriplePanStart(t);case"tripanmove":return this._onTriplePan(t);case"tripanend":return this._onTriplePanEnd(t);case"doubletap":return this._onDoubleTap(t);case"wheel":return this._onWheel(t);case"keydown":return this._onKeyDown(t);default:return!1}}get controllerState(){return this._controllerState=this._controllerState||new this.ControllerState({makeViewport:this.makeViewport,...this.props,...this.state}),this._controllerState}getCenter(t){const{x:e,y:n}=this.props,{offsetCenter:i}=t;return[i.x-e,i.y-n]}isPointInBounds(t,e){const{width:n,height:i}=this.props;if(e&&e.handled)return!1;const o=t[0]>=0&&t[0]<=n&&t[1]>=0&&t[1]<=i;return o&&e&&e.stopPropagation(),o}isFunctionKeyPressed(t){const{srcEvent:e}=t;return Boolean(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}isDragging(){return this._interactionState.isDragging||!1}blockEvents(t){const e=setTimeout((()=>{this._eventStartBlocked===e&&(this._eventStartBlocked=null)}),t);this._eventStartBlocked=e}setProps(t){t.dragMode&&(this.dragMode=t.dragMode),this.props=t,"transitionInterpolator"in t||(t.transitionInterpolator=this._getTransitionProps().transitionInterpolator),this.transitionManager.processViewStateChange(t);const{inertia:e}=t;this.inertia=Number.isFinite(e)?e:!0===e?300:0;const{scrollZoom:n=!0,dragPan:i=!0,dragRotate:o=!0,doubleClickZoom:r=!0,touchZoom:s=!0,touchRotate:a=!1,keyboard:l=!0}=t,c=Boolean(this.onViewStateChange);this.toggleEvents(h,c&&n),this.toggleEvents(g,c&&(i||o)),this.toggleEvents(f,c&&(s||a)),this.toggleEvents(m,c&&a),this.toggleEvents(y,c&&r),this.toggleEvents(v,c&&l),this.scrollZoom=n,this.dragPan=i,this.dragRotate=o,this.doubleClickZoom=r,this.touchZoom=s,this.touchRotate=a,this.keyboard=l}updateTransition(){this.transitionManager.updateTransition()}toggleEvents(t,e){this.eventManager&&t.forEach((t=>{this._events[t]!==e&&(this._events[t]=e,e?this.eventManager.on(t,this.handleEvent):this.eventManager.off(t,this.handleEvent))}))}updateViewport(t,e,n){void 0===e&&(e=null),void 0===n&&(n={});const i={...t.getViewportProps(),...e},o=this.controllerState!==t;if(this.state=t.getState(),this._setInteractionState(n),o){const t=this.controllerState&&this.controllerState.getViewportProps();this.onViewStateChange&&this.onViewStateChange({viewState:i,interactionState:this._interactionState,oldViewState:t})}}_onTransition(t){this.onViewStateChange({...t,interactionState:this._interactionState})}_setInteractionState(t){Object.assign(this._interactionState,t),this.onStateChange(this._interactionState)}_onPanStart(t){const e=this.getCenter(t);if(!this.isPointInBounds(e,t))return!1;let n=this.isFunctionKeyPressed(t)||t.rightButton||!1;(this.invertPan||"pan"===this.dragMode)&&(n=!n);const i=this.controllerState[n?"panStart":"rotateStart"]({pos:e});return this._panMove=n,this.updateViewport(i,p,{isDragging:!0}),!0}_onPan(t){return!!this.isDragging()&&(this._panMove?this._onPanMove(t):this._onPanRotate(t))}_onPanEnd(t){return!!this.isDragging()&&(this._panMove?this._onPanMoveEnd(t):this._onPanRotateEnd(t))}_onPanMove(t){if(!this.dragPan)return!1;const e=this.getCenter(t),n=this.controllerState.pan({pos:e});return this.updateViewport(n,p,{isDragging:!0,isPanning:!0}),!0}_onPanMoveEnd(t){const{inertia:e}=this;if(this.dragPan&&e&&t.velocity){const n=this.getCenter(t),i=[n[0]+t.velocityX*e/2,n[1]+t.velocityY*e/2],o=this.controllerState.pan({pos:i}).panEnd();this.updateViewport(o,{...this._getTransitionProps(),transitionDuration:e,transitionEasing:u},{isDragging:!1,isPanning:!0})}else{const t=this.controllerState.panEnd();this.updateViewport(t,null,{isDragging:!1,isPanning:!1})}return!0}_onPanRotate(t){if(!this.dragRotate)return!1;const e=this.getCenter(t),n=this.controllerState.rotate({pos:e});return this.updateViewport(n,p,{isDragging:!0,isRotating:!0}),!0}_onPanRotateEnd(t){const{inertia:e}=this;if(this.dragRotate&&e&&t.velocity){const n=this.getCenter(t),i=[n[0]+t.velocityX*e/2,n[1]+t.velocityY*e/2],o=this.controllerState.rotate({pos:i}).rotateEnd();this.updateViewport(o,{...this._getTransitionProps(),transitionDuration:e,transitionEasing:u},{isDragging:!1,isRotating:!0})}else{const t=this.controllerState.rotateEnd();this.updateViewport(t,null,{isDragging:!1,isRotating:!1})}return!0}_onWheel(t){if(!this.scrollZoom)return!1;t.srcEvent.preventDefault();const e=this.getCenter(t);if(!this.isPointInBounds(e,t))return!1;const{speed:n=.01,smooth:i=!1}=!0===this.scrollZoom?{}:this.scrollZoom,{delta:o}=t;let r=2/(1+Math.exp(-Math.abs(o*n)));o<0&&0!==r&&(r=1/r);const s=this.controllerState.zoom({pos:e,scale:r});return this.updateViewport(s,{...this._getTransitionProps({around:e}),transitionDuration:i?250:1},{isZooming:!0,isPanning:!0}),!0}_onTriplePanStart(t){const e=this.getCenter(t);if(!this.isPointInBounds(e,t))return!1;const n=this.controllerState.rotateStart({pos:e});return this.updateViewport(n,p,{isDragging:!0}),!0}_onTriplePan(t){if(!this.touchRotate)return!1;if(!this.isDragging())return!1;const e=this.getCenter(t);e[0]-=t.deltaX;const n=this.controllerState.rotate({pos:e});return this.updateViewport(n,p,{isDragging:!0,isRotating:!0}),!0}_onTriplePanEnd(t){if(!this.isDragging())return!1;const{inertia:e}=this;if(this.touchRotate&&e&&t.velocityY){const n=this.getCenter(t),i=[n[0],n[1]+=t.velocityY*e/2],o=this.controllerState.rotate({pos:i});this.updateViewport(o,{...this._getTransitionProps(),transitionDuration:e,transitionEasing:u},{isDragging:!1,isRotating:!0}),this.blockEvents(e)}else{const t=this.controllerState.rotateEnd();this.updateViewport(t,null,{isDragging:!1,isRotating:!1})}return!0}_onPinchStart(t){const e=this.getCenter(t);if(!this.isPointInBounds(e,t))return!1;const n=this.controllerState.zoomStart({pos:e}).rotateStart({pos:e});return _._startPinchRotation=t.rotation,_._lastPinchEvent=t,this.updateViewport(n,p,{isDragging:!0}),!0}_onPinch(t){if(!this.touchZoom&&!this.touchRotate)return!1;if(!this.isDragging())return!1;let e=this.controllerState;if(this.touchZoom){const{scale:n}=t,i=this.getCenter(t);e=e.zoom({pos:i,scale:n})}if(this.touchRotate){const{rotation:n}=t;e=e.rotate({deltaAngleX:_._startPinchRotation-n})}return this.updateViewport(e,p,{isDragging:!0,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:this.touchRotate}),_._lastPinchEvent=t,!0}_onPinchEnd(t){if(!this.isDragging())return!1;const{inertia:e}=this,{_lastPinchEvent:n}=_;if(this.touchZoom&&e&&n&&t.scale!==n.scale){const i=this.getCenter(t);let o=this.controllerState.rotateEnd();const r=Math.log2(t.scale),s=(r-Math.log2(n.scale))/(t.deltaTime-n.deltaTime),a=Math.pow(2,r+s*e/2);o=o.zoom({pos:i,scale:a}).zoomEnd(),this.updateViewport(o,{...this._getTransitionProps({around:i}),transitionDuration:e,transitionEasing:u},{isDragging:!1,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:!1}),this.blockEvents(e)}else{const t=this.controllerState.zoomEnd().rotateEnd();this.updateViewport(t,null,{isDragging:!1,isPanning:!1,isZooming:!1,isRotating:!1})}return _._startPinchRotation=null,_._lastPinchEvent=null,!0}_onDoubleTap(t){if(!this.doubleClickZoom)return!1;const e=this.getCenter(t);if(!this.isPointInBounds(e,t))return!1;const n=this.isFunctionKeyPressed(t),i=this.controllerState.zoom({pos:e,scale:n?.5:2});return this.updateViewport(i,this._getTransitionProps({around:e}),{isZooming:!0,isPanning:!0}),this.blockEvents(100),!0}_onKeyDown(t){if(!this.keyboard)return!1;const e=this.isFunctionKeyPressed(t),{zoomSpeed:n,moveSpeed:i,rotateSpeedX:o,rotateSpeedY:r}=!0===this.keyboard?{}:this.keyboard,{controllerState:s}=this;let a;const l={};switch(t.srcEvent.code){case"Minus":a=e?s.zoomOut(n).zoomOut(n):s.zoomOut(n),l.isZooming=!0;break;case"Equal":a=e?s.zoomIn(n).zoomIn(n):s.zoomIn(n),l.isZooming=!0;break;case"ArrowLeft":e?(a=s.rotateLeft(o),l.isRotating=!0):(a=s.moveLeft(i),l.isPanning=!0);break;case"ArrowRight":e?(a=s.rotateRight(o),l.isRotating=!0):(a=s.moveRight(i),l.isPanning=!0);break;case"ArrowUp":e?(a=s.rotateUp(r),l.isRotating=!0):(a=s.moveUp(i),l.isPanning=!0);break;case"ArrowDown":e?(a=s.rotateDown(r),l.isRotating=!0):(a=s.moveDown(i),l.isPanning=!0);break;default:return!1}return this.updateViewport(a,this._getTransitionProps(),l),!0}_getTransitionProps(t){const{transition:e}=this;return e&&e.transitionInterpolator?t?{...e,transitionInterpolator:new d.Z({...t,...e.transitionInterpolator.opts,makeViewport:this.controllerState.makeViewport})}:e:p}}},26810:(t,e,n)=>{"use strict";n.d(e,{U:()=>c,Z:()=>d});var i=n(28835),o=n(93932),r=n(28793),s=n(92797),a=n(13405),l=n(60499);class c extends r.Z{constructor(t){const{width:e,height:n,latitude:i,longitude:o,zoom:r,bearing:s=0,pitch:l=0,altitude:c=1.5,position:d=[0,0,0],maxZoom:p=20,minZoom:u=0,maxPitch:h=60,minPitch:g=0,startPanLngLat:f,startZoomLngLat:m,startRotatePos:y,startBearing:v,startPitch:_,startZoom:w,normalize:P=!0}=t;(0,a.Z)(Number.isFinite(o)),(0,a.Z)(Number.isFinite(i)),(0,a.Z)(Number.isFinite(r)),super({width:e,height:n,latitude:i,longitude:o,zoom:r,bearing:s,pitch:l,altitude:c,maxZoom:p,minZoom:u,maxPitch:h,minPitch:g,normalize:P,position:d},{startPanLngLat:f,startZoomLngLat:m,startRotatePos:y,startBearing:v,startPitch:_,startZoom:w}),this.makeViewport=t.makeViewport}panStart(t){let{pos:e}=t;return this._getUpdatedState({startPanLngLat:this._unproject(e)})}pan(t){let{pos:e,startPos:n}=t;const i=this.getState().startPanLngLat||this._unproject(n);if(!i)return this;const o=this.makeViewport(this.getViewportProps()).panByPosition(i,e);return this._getUpdatedState(o)}panEnd(){return this._getUpdatedState({startPanLngLat:null})}rotateStart(t){let{pos:e}=t;return this._getUpdatedState({startRotatePos:e,startBearing:this.getViewportProps().bearing,startPitch:this.getViewportProps().pitch})}rotate(t){let{pos:e,deltaAngleX:n=0,deltaAngleY:i=0}=t;const{startRotatePos:o,startBearing:r,startPitch:s}=this.getState();if(!o||void 0===r||void 0===s)return this;let a;return a=e?this._getNewRotation(e,o,s,r):{bearing:r+n,pitch:s+i},this._getUpdatedState(a)}rotateEnd(){return this._getUpdatedState({startBearing:null,startPitch:null})}zoomStart(t){let{pos:e}=t;return this._getUpdatedState({startZoomLngLat:this._unproject(e),startZoom:this.getViewportProps().zoom})}zoom(t){let{pos:e,startPos:n,scale:o}=t,{startZoom:r,startZoomLngLat:s}=this.getState();if(s||(r=this.getViewportProps().zoom,s=this._unproject(n)||this._unproject(e)),!s)return this;const{maxZoom:a,minZoom:l}=this.getViewportProps();let c=r+Math.log2(o);c=(0,i.uZ)(c,l,a);const d=this.makeViewport({...this.getViewportProps(),zoom:c});return this._getUpdatedState({zoom:c,...d.panByPosition(s,e)})}zoomEnd(){return this._getUpdatedState({startZoomLngLat:null,startZoom:null})}zoomIn(t){return void 0===t&&(t=2),this._zoomFromCenter(t)}zoomOut(t){return void 0===t&&(t=2),this._zoomFromCenter(1/t)}moveLeft(t){return void 0===t&&(t=100),this._panFromCenter([t,0])}moveRight(t){return void 0===t&&(t=100),this._panFromCenter([-t,0])}moveUp(t){return void 0===t&&(t=100),this._panFromCenter([0,t])}moveDown(t){return void 0===t&&(t=100),this._panFromCenter([0,-t])}rotateLeft(t){return void 0===t&&(t=15),this._getUpdatedState({bearing:this.getViewportProps().bearing-t})}rotateRight(t){return void 0===t&&(t=15),this._getUpdatedState({bearing:this.getViewportProps().bearing+t})}rotateUp(t){return void 0===t&&(t=10),this._getUpdatedState({pitch:this.getViewportProps().pitch+t})}rotateDown(t){return void 0===t&&(t=10),this._getUpdatedState({pitch:this.getViewportProps().pitch-t})}shortestPathFrom(t){const e=t.getViewportProps(),n={...this.getViewportProps()},{bearing:i,longitude:o}=n;return Math.abs(i-e.bearing)>180&&(n.bearing=i<0?i+360:i-360),Math.abs(o-e.longitude)>180&&(n.longitude=o<0?o+360:o-360),n}applyConstraints(t){const{maxZoom:e,minZoom:n,zoom:o}=t;t.zoom=(0,i.uZ)(o,n,e);const{maxPitch:r,minPitch:a,pitch:l}=t;t.pitch=(0,i.uZ)(l,a,r);const{normalize:c=!0}=t;return c&&Object.assign(t,(0,s.QA)(t)),t}_zoomFromCenter(t){const{width:e,height:n}=this.getViewportProps();return this.zoom({pos:[e/2,n/2],scale:t})}_panFromCenter(t){const{width:e,height:n}=this.getViewportProps();return this.pan({startPos:[e/2,n/2],pos:[e/2+t[0],n/2+t[1]]})}_getUpdatedState(t){return new this.constructor({makeViewport:this.makeViewport,...this.getViewportProps(),...this.getState(),...t})}_unproject(t){const e=this.makeViewport(this.getViewportProps());return t&&e.unproject(t)}_getNewRotation(t,e,n,o){const r=t[0]-e[0],s=t[1]-e[1],a=t[1],l=e[1],{width:c,height:d}=this.getViewportProps(),p=r/c;let u=0;s>0?Math.abs(d-l)>5&&(u=s/(l-d)*1.2):s<0&&l>5&&(u=1-a/l),u=(0,i.uZ)(u,-1,1);const{minPitch:h,maxPitch:g}=this.getViewportProps();let f=n;return u>0?f=n+u*(g-n):u<0&&(f=n-u*(h-n)),{pitch:f,bearing:o+180*p}}}class d extends o.Z{constructor(){super(...arguments),this.ControllerState=c,this.transition={transitionDuration:300,transitionInterpolator:new l.Z({transitionProps:{compare:["longitude","latitude","zoom","bearing","pitch","position"],required:["longitude","latitude","zoom"]}})},this.dragMode="pan"}setProps(t){t.position=t.position||[0,0,0];const e=this.props;super.setProps(t);(!e||e.height!==t.height)&&this.updateViewport(new this.ControllerState({makeViewport:this.makeViewport,...t,...this.state}))}}},28793:(t,e,n)=>{"use strict";n.d(e,{Z:()=>i});class i{constructor(t,e){this._viewportProps=this.applyConstraints(t),this._state=e}getViewportProps(){return this._viewportProps}getState(){return this._state}}},14503:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s,z:()=>r});var i=n(89745);let o={};function r(t){o=t}function s(t,e,n,r){i.Z.level>0&&o[t]&&o[t].call(null,e,n,r)}},35503:(t,e,n)=>{"use strict";n.d(e,{M:()=>s});const i=[255,255,255],o=1;let r=0;class s{constructor(t){void 0===t&&(t={}),this.type="ambient";const{color:e=i}=t,{intensity:n=o}=t;this.id=t.id||"ambient-"+r++,this.color=e,this.intensity=n}}},42697:(t,e,n)=>{"use strict";n.d(e,{O:()=>l});var i=n(59122);const o=[255,255,255],r=1,s=[0,0,-1];let a=0;class l{constructor(t){void 0===t&&(t={}),this.type="directional";const{color:e=o}=t,{intensity:n=r}=t,{direction:l=s}=t,{_shadow:c=!1}=t;this.id=t.id||"directional-"+a++,this.color=e,this.intensity=n,this.type="directional",this.direction=new i.Z(l).normalize().toArray(),this.shadow=c}getProjectedLight(t){return this}}},6192:(t,e,n)=>{"use strict";n.d(e,{Z:()=>S});var i=n(74797),o=n(43970),r=n(35503),s=n(42697),a=n(76450),l=n(59122),c=n(5259),d=n(40984),p=n(79762),u=n(7092);class h extends c.Z{constructor(t,e){super(t,e),this.shadowMap=new o.Z(t,{width:1,height:1,parameters:{10241:9729,10240:9729,10242:33071,10243:33071}}),this.depthBuffer=new d.Z(t,{format:33189,width:1,height:1}),this.fbo=new p.Z(t,{id:"shadowmap",width:1,height:1,attachments:{36064:this.shadowMap,36096:this.depthBuffer}})}render(t){const e=this.fbo;(0,u.s8)(this.gl,{depthRange:[0,1],depthTest:!0,blend:!1,clearColor:[1,1,1,1]},(()=>{const n=t.viewports[0],i=(0,u.w)(this.gl),o=n.width*i,r=n.height*i;o===e.width&&r===e.height||e.resize({width:o,height:r}),super.render({...t,target:e,pass:"shadow"})}))}shouldDrawLayer(t){return!1!==t.props.shadowEnabled}getModuleParameters(){return{drawToShadowMap:!0}}delete(){this.fbo&&(this.fbo.delete(),this.fbo=null),this.shadowMap&&(this.shadowMap.delete(),this.shadowMap=null),this.depthBuffer&&(this.depthBuffer.delete(),this.depthBuffer=null)}}var g=n(43631),f=n(73782),m=n(66508),y=n(92797);const v=(0,m.Z)((function(t){let{viewport:e,center:n}=t;return new a.Z(e.viewProjectionMatrix).invert().transform(n)})),_=(0,m.Z)((function(t){let{viewport:e,shadowMatrices:n}=t;const i=[],o=e.pixelUnprojectionMatrix,r=e.isGeospatial?void 0:1,s=[[0,0,r],[e.width,0,r],[0,e.height,r],[e.width,e.height,r],[0,0,-1],[e.width,0,-1],[0,e.height,-1],[e.width,e.height,-1]].map((t=>function(t,e){const[n,i,o]=t,r=(0,y.CT)([n,i,o],e);if(Number.isFinite(o))return r;return[r[0],r[1],0]}(t,o)));for(const c of n){const t=c.clone().translate(new l.Z(e.center).negate()),n=s.map((e=>t.transform(e))),o=(new a.Z).ortho({left:Math.min(...n.map((t=>t[0]))),right:Math.max(...n.map((t=>t[0]))),bottom:Math.min(...n.map((t=>t[1]))),top:Math.max(...n.map((t=>t[1]))),near:Math.min(...n.map((t=>-t[2]))),far:Math.max(...n.map((t=>-t[2])))});i.push(o.multiplyRight(c))}return i})),w=[0,0,0,1],P=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0];const b={name:"shadow",dependencies:[f.Z],vs:"\nconst int max_lights = 2;\nuniform mat4 shadow_uViewProjectionMatrices[max_lights];\nuniform vec4 shadow_uProjectCenters[max_lights];\nuniform bool shadow_uDrawShadowMap;\nuniform bool shadow_uUseShadowMap;\nuniform int shadow_uLightId;\nuniform float shadow_uLightCount;\n\nvarying vec3 shadow_vPosition[max_lights];\n\nvec4 shadow_setVertexPosition(vec4 position_commonspace) {\n  if (shadow_uDrawShadowMap) {\n    return project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[shadow_uLightId], shadow_uProjectCenters[shadow_uLightId]);\n  }\n  if (shadow_uUseShadowMap) {\n    for (int i = 0; i < max_lights; i++) {\n      if(i < int(shadow_uLightCount)) {\n        vec4 shadowMap_position = project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[i], shadow_uProjectCenters[i]);\n        shadow_vPosition[i] = (shadowMap_position.xyz / shadowMap_position.w + 1.0) / 2.0;\n      }\n    }\n  }\n  return gl_Position;\n}\n",fs:"\nconst int max_lights = 2;\nuniform bool shadow_uDrawShadowMap;\nuniform bool shadow_uUseShadowMap;\nuniform sampler2D shadow_uShadowMap0;\nuniform sampler2D shadow_uShadowMap1;\nuniform vec4 shadow_uColor;\nuniform float shadow_uLightCount;\n\nvarying vec3 shadow_vPosition[max_lights];\n\nconst vec4 bitPackShift = vec4(1.0, 255.0, 65025.0, 16581375.0);\nconst vec4 bitUnpackShift = 1.0 / bitPackShift;\nconst vec4 bitMask = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0,  0.0);\n\nfloat shadow_getShadowWeight(vec3 position, sampler2D shadowMap) {\n  vec4 rgbaDepth = texture2D(shadowMap, position.xy);\n\n  float z = dot(rgbaDepth, bitUnpackShift);\n  return smoothstep(0.001, 0.01, position.z - z);\n}\n\nvec4 shadow_filterShadowColor(vec4 color) {\n  if (shadow_uDrawShadowMap) {\n    vec4 rgbaDepth = fract(gl_FragCoord.z * bitPackShift);\n    rgbaDepth -= rgbaDepth.gbaa * bitMask;\n    return rgbaDepth;\n  }\n  if (shadow_uUseShadowMap) {\n    float shadowAlpha = 0.0;\n    shadowAlpha += shadow_getShadowWeight(shadow_vPosition[0], shadow_uShadowMap0);\n    if(shadow_uLightCount > 1.0) {\n      shadowAlpha += shadow_getShadowWeight(shadow_vPosition[1], shadow_uShadowMap1);\n    }\n    shadowAlpha *= shadow_uColor.a / shadow_uLightCount;\n    float blendedAlpha = shadowAlpha + color.a * (1.0 - shadowAlpha);\n\n    return vec4(\n      mix(color.rgb, shadow_uColor.rgb, shadowAlpha / blendedAlpha),\n      blendedAlpha\n    );\n  }\n  return color;\n}\n",inject:{"vs:DECKGL_FILTER_GL_POSITION":"\n    position = shadow_setVertexPosition(geometry.position);\n    ","fs:DECKGL_FILTER_COLOR":"\n    color = shadow_filterShadowColor(color);\n    "},getUniforms:function(t,e){return void 0===t&&(t={}),void 0===e&&(e={}),"viewport"in t&&(t.drawToShadowMap||t.shadowMaps&&t.shadowMaps.length>0)?function(t,e){const{shadowEnabled:n=!0}=t;if(!n||!t.shadowMatrices||!t.shadowMatrices.length)return{shadow_uDrawShadowMap:!1,shadow_uUseShadowMap:!1};const i={shadow_uDrawShadowMap:Boolean(t.drawToShadowMap),shadow_uUseShadowMap:!!t.shadowMaps&&t.shadowMaps.length>0,shadow_uColor:t.shadowColor||w,shadow_uLightId:t.shadowLightId||0,shadow_uLightCount:t.shadowMatrices.length},o=v({viewport:t.viewport,center:e.project_uCenter}),r=[],s=_({shadowMatrices:t.shadowMatrices,viewport:t.viewport}).slice();for(let a=0;a<t.shadowMatrices.length;a++){const n=s[a],i=n.clone().translate(new l.Z(t.viewport.center).negate());e.project_uCoordinateSystem===g.Df.LNGLAT&&e.project_uProjectionMode===g.zG.WEB_MERCATOR?(s[a]=i,r[a]=o):(s[a]=n.clone().multiplyRight(P),r[a]=i.transform(o))}for(let a=0;a<s.length;a++)i["shadow_uViewProjectionMatrices["+a+"]"]=s[a],i["shadow_uProjectCenters["+a+"]"]=r[a],t.shadowMaps&&t.shadowMaps.length>0?i["shadow_uShadowMap"+a]=t.shadowMaps[a]:i["shadow_uShadowMap"+a]=t.dummyShadowMap;return i}(t,e):{}}},x={color:[255,255,255],intensity:1},C=[{color:[255,255,255],intensity:1,direction:[-1,3,-1]},{color:[255,255,255],intensity:.9,direction:[1,-8,-2.5]}],k=[0,0,0,200/255];class S{constructor(t){void 0===t&&(t={}),this.id="lighting-effect",this.shadowColor=k,this.shadowPasses=[],this.shadowMaps=[],this.dummyShadowMap=null,this.setProps(t)}setProps(t){this.ambientLight=null,this.directionalLights=[],this.pointLights=[];for(const e in t){const n=t[e];switch(n.type){case"ambient":this.ambientLight=n;break;case"directional":this.directionalLights.push(n);break;case"point":this.pointLights.push(n)}}this._applyDefaultLights(),this.shadow=this.directionalLights.some((t=>t.shadow)),this.props=t}preRender(t,e){let{layers:n,layerFilter:r,viewports:s,onViewportActive:a,views:l}=e;if(this.shadow){this.shadowMatrices=this._calculateMatrices(),0===this.shadowPasses.length&&this._createShadowPasses(t),this.programManager||(this.programManager=i.Z.getDefaultProgramManager(t),b&&this.programManager.addDefaultModule(b)),this.dummyShadowMap||(this.dummyShadowMap=new o.Z(t,{width:1,height:1}));for(let t=0;t<this.shadowPasses.length;t++){this.shadowPasses[t].render({layers:n,layerFilter:r,viewports:s,onViewportActive:a,views:l,moduleParameters:{shadowLightId:t,dummyShadowMap:this.dummyShadowMap,shadowMatrices:this.shadowMatrices}})}}}getModuleParameters(t){const e=this.shadow?{shadowMaps:this.shadowMaps,dummyShadowMap:this.dummyShadowMap,shadowColor:this.shadowColor,shadowMatrices:this.shadowMatrices}:{};return e.lightSources={ambientLight:this.ambientLight,directionalLights:this.directionalLights.map((e=>e.getProjectedLight({layer:t}))),pointLights:this.pointLights.map((e=>e.getProjectedLight({layer:t})))},e}cleanup(){for(const t of this.shadowPasses)t.delete();this.shadowPasses.length=0,this.shadowMaps.length=0,this.dummyShadowMap&&(this.dummyShadowMap.delete(),this.dummyShadowMap=null),this.shadow&&this.programManager&&(this.programManager.removeDefaultModule(b),this.programManager=null)}_calculateMatrices(){const t=[];for(const e of this.directionalLights){const n=(new a.Z).lookAt({eye:new l.Z(e.direction).negate()});t.push(n)}return t}_createShadowPasses(t){for(let e=0;e<this.directionalLights.length;e++){const n=new h(t);this.shadowPasses[e]=n,this.shadowMaps[e]=n.shadowMap}}_applyDefaultLights(){const{ambientLight:t,pointLights:e,directionalLights:n}=this;t||0!==e.length||0!==n.length||(this.ambientLight=new r.M(x),this.directionalLights.push(new s.O(C[0]),new s.O(C[1])))}}},52747:(t,e,n)=>{"use strict";n.d(e,{Z:()=>T});var i=n(19227),o=n(83757),r=n(80241);class s{constructor(t,e){this.opts=e,this.source=t}get value(){return this.source.value}getValue(){const t=this.source.getBuffer(),e=this.getAccessor();if(t)return[t,e];const{value:n}=this.source,{size:i}=e;let o=n;if(n&&n.length!==i){o=new Float32Array(i);const t=e.elementOffset||0;for(let e=0;e<i;++e)o[e]=n[t+e]}return o}getAccessor(){return{...this.source.getAccessor(),...this.opts}}}var a=n(67258),l=n(4563),c=n(89745);function d(t){return t.stride||t.size*t.bytesPerElement}function p(t,e){e.offset&&c.Z.removed("shaderAttribute.offset","vertexOffset, elementOffset")();const n=d(t),i=(void 0!==e.vertexOffset?e.vertexOffset:t.vertexOffset||0)*n+(e.elementOffset||0)*t.bytesPerElement+(t.offset||0);return{...e,offset:i,stride:n}}class u{constructor(t,e,n){this.gl=t,this.id=e.id||"",this.size=e.size||1;const r=e.logicalType||e.type,s=5130===r;let a,{defaultValue:l}=e;l=Number.isFinite(l)?[l]:l||new Array(this.size).fill(0),a=s?5126:!r&&e.isIndexed?t&&(0,i.U6)(t,o.h.ELEMENT_INDEX_UINT32)?5125:5123:r||5126;let c=function(t){switch(t){case 5126:return Float32Array;case 5130:return Float64Array;case 5123:case 33635:case 32819:case 32820:return Uint16Array;case 5125:return Uint32Array;case 5121:return Uint8ClampedArray;case 5120:return Int8Array;case 5122:return Int16Array;case 5124:return Int32Array;default:throw new Error("Unknown GL type")}}(r||a||5126);this.doublePrecision=s,s&&!1===e.fp64&&(c=Float32Array),this.value=null,this.settings={...e,defaultType:c,defaultValue:l,logicalType:r,type:a,size:this.size,bytesPerElement:c.BYTES_PER_ELEMENT},this.state={...n,externalBuffer:null,bufferAccessor:this.settings,allocatedValue:null,numInstances:0,bounds:null,constant:!1},this._buffer=null}get isConstant(){return this.state.constant}get buffer(){if(!this._buffer){const{isIndexed:t,type:e}=this.settings;this._buffer=new r.Z(this.gl,{id:this.id,target:t?34963:34962,accessor:{type:e}})}return this._buffer}get byteOffset(){const t=this.getAccessor();return t.vertexOffset?t.vertexOffset*d(t):0}get numInstances(){return this.state.numInstances}set numInstances(t){this.state.numInstances=t}delete(){this._buffer&&(this._buffer.delete(),this._buffer=null),a.Z.release(this.state.allocatedValue)}getShaderAttributes(t,e){if(this.doublePrecision){const n={},i=this.value instanceof Float64Array,o=function(t,e){const n=p(t,e);return{high:n,low:{...n,offset:n.offset+4*t.size}}}(this.getAccessor(),e||{});return n[t]=new s(this,o.high),n[t+"64Low"]=i?new s(this,o.low):new Float32Array(this.size),n}if(e){const n=p(this.getAccessor(),e);return{[t]:new s(this,n)}}return{[t]:this}}getBuffer(){return this.state.constant?null:this.state.externalBuffer||this._buffer}getValue(){return this.state.constant?this.value:[this.getBuffer(),this.getAccessor()]}getAccessor(){return this.state.bufferAccessor}getBounds(){if(this.state.bounds)return this.state.bounds;let t=null;if(this.state.constant&&this.value){const e=Array.from(this.value);t=[e,e]}else{const{value:e,numInstances:n,size:i}=this,o=n*i;if(e&&o&&e.length>=o){const n=new Array(i).fill(1/0),r=new Array(i).fill(-1/0);for(let t=0;t<o;)for(let o=0;o<i;o++){const i=e[t++];i<n[o]&&(n[o]=i),i>r[o]&&(r[o]=i)}t=[n,r]}}return this.state.bounds=t,t}setData(t){const{state:e}=this;let n;n=ArrayBuffer.isView(t)?{value:t}:t instanceof r.Z?{buffer:t}:t;const i={...this.settings,...n};if(e.bufferAccessor=i,e.bounds=null,n.constant){let t=n.value;t=this._normalizeValue(t,[],0),this.settings.normalized&&(t=this.normalizeConstant(t));if(!(!e.constant||!this._areValuesEqual(t,this.value)))return!1;e.externalBuffer=null,e.constant=!0,this.value=t}else if(n.buffer){const t=n.buffer;e.externalBuffer=t,e.constant=!1,this.value=n.value||null;const o=n.value instanceof Float64Array;i.type=n.type||t.accessor.type,i.bytesPerElement=t.accessor.BYTES_PER_ELEMENT*(o?2:1),i.stride=d(i)}else if(n.value){this._checkExternalBuffer(n);let t=n.value;e.externalBuffer=null,e.constant=!1,this.value=t,i.bytesPerElement=t.BYTES_PER_ELEMENT,i.stride=d(i);const{buffer:o,byteOffset:r}=this;this.doublePrecision&&t instanceof Float64Array&&(t=(0,l.TK)(t,i));const s=t.byteLength+r+2*i.stride;o.byteLength<s&&o.reallocate(s),o.setAccessor(null),o.subData({data:t,offset:r}),i.type=n.type||o.accessor.type}return!0}updateSubBuffer(t){void 0===t&&(t={}),this.state.bounds=null;const e=this.value,{startOffset:n=0,endOffset:i}=t;this.buffer.subData({data:this.doublePrecision&&e instanceof Float64Array?(0,l.TK)(e,{size:this.size,startIndex:n,endIndex:i}):e.subarray(n,i),offset:n*e.BYTES_PER_ELEMENT+this.byteOffset})}allocate(t,e){void 0===e&&(e=!1);const{state:n}=this,i=n.allocatedValue,o=a.Z.allocate(i,t+1,{size:this.size,type:this.settings.defaultType,copy:e});this.value=o;const{buffer:r,byteOffset:s}=this;return r.byteLength<o.byteLength+s&&(r.reallocate(o.byteLength+s),e&&i&&r.subData({data:i instanceof Float64Array?(0,l.TK)(i,this):i,offset:s})),n.allocatedValue=o,n.constant=!1,n.externalBuffer=null,n.bufferAccessor=this.settings,!0}_checkExternalBuffer(t){const{value:e}=t;if(!ArrayBuffer.isView(e))throw new Error("Attribute "+this.id+" value is not TypedArray");const n=this.settings.defaultType;let i=!1;if(this.doublePrecision&&(i=e.BYTES_PER_ELEMENT<4),i)throw new Error("Attribute "+this.id+" does not support "+e.constructor.name);e instanceof n||!this.settings.normalized||"normalized"in t||c.Z.warn("Attribute "+this.id+" is normalized")()}normalizeConstant(t){switch(this.settings.type){case 5120:return new Float32Array(t).map((t=>(t+128)/255*2-1));case 5122:return new Float32Array(t).map((t=>(t+32768)/65535*2-1));case 5121:return new Float32Array(t).map((t=>t/255));case 5123:return new Float32Array(t).map((t=>t/65535));default:return t}}_normalizeValue(t,e,n){const{defaultValue:i,size:o}=this.settings;if(Number.isFinite(t))return e[n]=t,e;if(!t)return e[n]=i[0],e;switch(o){case 4:e[n+3]=Number.isFinite(t[3])?t[3]:i[3];case 3:e[n+2]=Number.isFinite(t[2])?t[2]:i[2];case 2:e[n+1]=Number.isFinite(t[1])?t[1]:i[1];case 1:e[n+0]=Number.isFinite(t[0])?t[0]:i[0];break;default:let r=o;for(;--r>=0;)e[n+r]=Number.isFinite(t[r])?t[r]:i[r]}return e}_areValuesEqual(t,e){if(!t||!e)return!1;const{size:n}=this;for(let i=0;i<n;i++)if(t[i]!==e[i])return!1;return!0}}var h=n(13405),g=n(37944),f=n(32332);const m=[],y=[[0,1/0]];var v=n(98489);class _ extends u{constructor(t,e){super(t,e,{startIndices:null,lastExternalBuffer:null,binaryValue:null,binaryAccessor:null,needsUpdate:!0,needsRedraw:!1,updateRanges:y}),this.constant=!1,this.settings.update=e.update||(e.accessor?this._autoUpdater:void 0),Object.seal(this.settings),Object.seal(this.state),this._validateAttributeUpdaters()}get startIndices(){return this.state.startIndices}set startIndices(t){this.state.startIndices=t}needsUpdate(){return this.state.needsUpdate}needsRedraw(t){let{clearChangedFlags:e=!1}=void 0===t?{}:t;const n=this.state.needsRedraw;return this.state.needsRedraw=n&&!e,n}getUpdateTriggers(){const{accessor:t}=this.settings;return[this.id].concat("function"!=typeof t&&t||[])}supportsTransition(){return Boolean(this.settings.transition)}getTransitionSetting(t){if(!t||!this.supportsTransition())return null;const{accessor:e}=this.settings,n=this.settings.transition,i=Array.isArray(e)?t[e.find((e=>t[e]))]:t[e];return(0,v.M0)(i,n)}setNeedsUpdate(t,e){if(void 0===t&&(t=this.id),this.state.needsUpdate=this.state.needsUpdate||t,this.setNeedsRedraw(t),e){const{startRow:t=0,endRow:n=1/0}=e;this.state.updateRanges=function(t,e){if(t===y)return t;if(e[0]<0&&(e[0]=0),e[0]>=e[1])return t;const n=[],i=t.length;let o=0;for(let r=0;r<i;r++){const i=t[r];i[1]<e[0]?(n.push(i),o=r+1):i[0]>e[1]?n.push(i):e=[Math.min(i[0],e[0]),Math.max(i[1],e[1])]}return n.splice(o,0,e),n}(this.state.updateRanges,[t,n])}else this.state.updateRanges=y}clearNeedsUpdate(){this.state.needsUpdate=!1,this.state.updateRanges=m}setNeedsRedraw(t){void 0===t&&(t=this.id),this.state.needsRedraw=this.state.needsRedraw||t}allocate(t){const{state:e,settings:n}=this;return!n.noAlloc&&(!!n.update&&(super.allocate(t,e.updateRanges!==y),!0))}updateBuffer(t){let{numInstances:e,data:n,props:i,context:o}=t;if(!this.needsUpdate())return!1;const{state:{updateRanges:r},settings:{update:s,noAlloc:a}}=this;let l=!0;if(s){for(const[t,a]of r)s.call(o,this,{data:n,startRow:t,endRow:a,props:i,numInstances:e});if(this.value)if(this.constant||this.buffer.byteLength<this.value.byteLength+this.byteOffset)this.setData({value:this.value,constant:this.constant}),this.constant=!1;else for(const[t,n]of r){const i=Number.isFinite(t)?this.getVertexOffset(t):0,o=Number.isFinite(n)?this.getVertexOffset(n):a||!Number.isFinite(e)?this.value.length:e*this.size;super.updateSubBuffer({startOffset:i,endOffset:o})}else;this._checkAttributeArray()}else l=!1;return this.clearNeedsUpdate(),this.setNeedsRedraw(),l}setConstantValue(t){if(void 0===t||"function"==typeof t)return!1;return this.setData({constant:!0,value:t})&&this.setNeedsRedraw(),this.clearNeedsUpdate(),!0}setExternalBuffer(t){const{state:e}=this;return t?(this.clearNeedsUpdate(),e.lastExternalBuffer===t||(e.lastExternalBuffer=t,this.setNeedsRedraw(),this.setData(t)),!0):(e.lastExternalBuffer=null,!1)}setBinaryValue(t,e){void 0===e&&(e=null);const{state:n,settings:i}=this;if(!t)return n.binaryValue=null,n.binaryAccessor=null,!1;if(i.noAlloc)return!1;if(n.binaryValue===t)return this.clearNeedsUpdate(),!0;n.binaryValue=t,this.setNeedsRedraw();if(i.transform||e!==this.startIndices){ArrayBuffer.isView(t)&&(t={value:t});const o=t;(0,h.Z)(ArrayBuffer.isView(o.value),"invalid "+i.accessor);const r=Boolean(o.size)&&o.size!==this.size;return n.binaryAccessor=(0,g.jr)(o.value,{size:o.size||this.size,stride:o.stride,offset:o.offset,startIndices:e,nested:r}),!1}return this.clearNeedsUpdate(),this.setData(t),!0}getVertexOffset(t){const{startIndices:e}=this;return(e?t<e.length?e[t]:this.numInstances:t)*this.size}getShaderAttributes(){const t=this.settings.shaderAttributes||{[this.id]:null},e={};for(const n in t)Object.assign(e,super.getShaderAttributes(n,t[n]));return e}_autoUpdater(t,e){let{data:n,startRow:i,endRow:o,props:r,numInstances:s}=e;if(t.constant)return;const{settings:a,state:l,value:c,size:d,startIndices:p}=t,{accessor:u,transform:m}=a,y=l.binaryAccessor||("function"==typeof u?u:r[u]);(0,h.Z)("function"==typeof y,'accessor "'+u+'" is not a function');let v=t.getVertexOffset(i);const{iterable:_,objectInfo:w}=(0,g.jB)(n,i,o);for(const h of _){w.index++;let e=y(h,w);if(m&&(e=m.call(this,e)),p){const n=(w.index<p.length-1?p[w.index+1]:s)-p[w.index];if(e&&Array.isArray(e[0])){let n=v;for(const i of e)t._normalizeValue(i,c,n),n+=d}else e&&e.length>d?c.set(e,v):(t._normalizeValue(e,w.target,0),(0,f.k)({target:c,source:w.target,start:v,count:n}));v+=n*d}else t._normalizeValue(e,c,v),v+=d}}_validateAttributeUpdaters(){const{settings:t}=this;if(!(t.noAlloc||"function"==typeof t.update))throw new Error("Attribute "+this.id+" missing update or accessor")}_checkAttributeArray(){const{value:t}=this,e=Math.min(4,this.size);if(t&&t.length>=e){let n=!0;switch(e){case 4:n=n&&Number.isFinite(t[3]);case 3:n=n&&Number.isFinite(t[2]);case 2:n=n&&Number.isFinite(t[1]);case 1:n=n&&Number.isFinite(t[0]);break;default:n=!1}if(!n)throw new Error("Illegal attribute generated for "+this.id)}}}var w=n(14503),P=n(50031),b=n(62833);const x="\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nuniform float time;\nattribute ATTRIBUTE_TYPE aFrom;\nattribute ATTRIBUTE_TYPE aTo;\nvarying ATTRIBUTE_TYPE vCurrent;\n\nvoid main(void) {\n  vCurrent = mix(aFrom, aTo, time);\n  gl_Position = vec4(0.0);\n}\n";var C=n(88163),k=n(43970),S=n(79762);const M={interpolation:class{constructor(t){let{gl:e,attribute:n,timeline:i}=t;this.type="interpolation",this.gl=e,this.transition=new b.Z(i),this.attribute=n,this.attributeInTransition=new _(e,n.settings),this.currentStartIndices=n.startIndices,this.currentLength=0,this.transform=function(t,e){const n=(0,v.w)(e.size);return new P.Z(t,{vs:x,defines:{ATTRIBUTE_TYPE:n},varyings:["vCurrent"]})}(e,n);const o={byteLength:0,usage:35050};this.buffers=[new r.Z(e,o),new r.Z(e,o)]}get inProgress(){return this.transition.inProgress}start(t,e){if(t.duration<=0)return void this.transition.cancel();this.settings=t;const{gl:n,buffers:i,attribute:o}=this;(0,v.DY)(i);const r={numInstances:e,attribute:o,fromLength:this.currentLength,fromStartIndices:this.currentStartIndices,getData:t.enter};for(const s of i)(0,v.IV)({buffer:s,...r});this.currentStartIndices=o.startIndices,this.currentLength=(0,v.pi)(o,e),this.attributeInTransition.setData({buffer:i[1],value:o.value}),this.transition.start(t),this.transform.update({elementCount:Math.floor(this.currentLength/o.size),sourceBuffers:{aFrom:i[0],aTo:(0,v.AQ)(n,o)},feedbackBuffers:{vCurrent:i[1]}})}update(){const t=this.transition.update();if(t){const{duration:t,easing:e}=this.settings,{time:n}=this.transition;let i=n/t;e&&(i=e(i)),this.transform.run({uniforms:{time:i}})}return t}cancel(){this.transition.cancel(),this.transform.delete();for(const t of this.buffers)t.delete();this.buffers.length=0}},spring:class{constructor(t){let{gl:e,attribute:n,timeline:i}=t;this.type="spring",this.gl=e,this.type="spring",this.transition=new b.Z(i),this.attribute=n,this.attributeInTransition=new _(e,{...n.settings,normalized:!1}),this.currentStartIndices=n.startIndices,this.currentLength=0,this.texture=function(t){return new k.Z(t,{data:new Uint8Array(4),format:6408,type:5121,border:0,mipmaps:!1,dataFormat:6408,width:1,height:1})}(e),this.framebuffer=function(t,e){return new S.Z(t,{id:"spring-transition-is-transitioning-framebuffer",width:1,height:1,attachments:{36064:e}})}(e,this.texture),this.transform=function(t,e,n){const i=(0,v.w)(e.size);return new P.Z(t,{framebuffer:n,vs:"\n#define SHADER_NAME spring-transition-vertex-shader\n\n#define EPSILON 0.00001\n\nuniform float stiffness;\nuniform float damping;\nattribute ATTRIBUTE_TYPE aPrev;\nattribute ATTRIBUTE_TYPE aCur;\nattribute ATTRIBUTE_TYPE aTo;\nvarying ATTRIBUTE_TYPE vNext;\nvarying float vIsTransitioningFlag;\n\nATTRIBUTE_TYPE getNextValue(ATTRIBUTE_TYPE cur, ATTRIBUTE_TYPE prev, ATTRIBUTE_TYPE dest) {\n  ATTRIBUTE_TYPE velocity = cur - prev;\n  ATTRIBUTE_TYPE delta = dest - cur;\n  ATTRIBUTE_TYPE spring = delta * stiffness;\n  ATTRIBUTE_TYPE damper = velocity * -1.0 * damping;\n  return spring + damper + velocity + cur;\n}\n\nvoid main(void) {\n  bool isTransitioning = length(aCur - aPrev) > EPSILON || length(aTo - aCur) > EPSILON;\n  vIsTransitioningFlag = isTransitioning ? 1.0 : 0.0;\n\n  vNext = getNextValue(aCur, aPrev, aTo);\n  gl_Position = vec4(0, 0, 0, 1);\n  gl_PointSize = 100.0;\n}\n",fs:"\n#define SHADER_NAME spring-transition-is-transitioning-fragment-shader\n\nvarying float vIsTransitioningFlag;\n\nvoid main(void) {\n  if (vIsTransitioningFlag == 0.0) {\n    discard;\n  }\n  gl_FragColor = vec4(1.0);\n}",defines:{ATTRIBUTE_TYPE:i},varyings:["vNext"]})}(e,n,this.framebuffer);const o={byteLength:0,usage:35050};this.buffers=[new r.Z(e,o),new r.Z(e,o),new r.Z(e,o)]}get inProgress(){return this.transition.inProgress}start(t,e){const{gl:n,buffers:i,attribute:o}=this,r={numInstances:e,attribute:o,fromLength:this.currentLength,fromStartIndices:this.currentStartIndices,getData:t.enter};for(const s of i)(0,v.IV)({buffer:s,...r});this.settings=t,this.currentStartIndices=o.startIndices,this.currentLength=(0,v.pi)(o,e),this.attributeInTransition.setData({buffer:i[1],value:o.value}),this.transition.start({...t,duration:1/0}),this.transform.update({elementCount:Math.floor(this.currentLength/o.size),sourceBuffers:{aTo:(0,v.AQ)(n,o)}})}update(){const{buffers:t,transform:e,framebuffer:n,transition:i}=this;if(!i.update())return!1;const o=this.settings;e.update({sourceBuffers:{aPrev:t[0],aCur:t[1]},feedbackBuffers:{vNext:t[2]}}),e.run({framebuffer:n,discard:!1,clearRenderTarget:!0,uniforms:{stiffness:o.stiffness,damping:o.damping},parameters:{depthTest:!1,blend:!0,viewport:[0,0,1,1],blendFunc:[1,1],blendEquation:[32776,32776]}}),(0,v.DY)(t),this.attributeInTransition.setData({buffer:t[1],value:this.attribute.value});return(0,C.z6)(n)[0]>0||i.end(),!0}cancel(){this.transition.cancel(),this.transform.delete();for(const t of this.buffers)t.delete();this.buffers.length=0,this.texture.delete(),this.framebuffer.delete()}}};class L{constructor(t,e){let{id:n,timeline:i}=e;this.id=n,this.gl=t,this.timeline=i,this.transitions={},this.needsRedraw=!1,this.numInstances=1,this.isSupported=P.Z.isSupported(t)}finalize(){for(const t in this.transitions)this._removeTransition(t)}update(t){let{attributes:e,transitions:n,numInstances:i}=t;this.numInstances=i||1;for(const o in e){const t=e[o],i=t.getTransitionSetting(n);i&&this._updateAttribute(o,t,i)}for(const o in this.transitions){const t=e[o];t&&t.getTransitionSetting(n)||this._removeTransition(o)}}hasAttribute(t){const e=this.transitions[t];return e&&e.inProgress}getAttributes(){const t={};for(const e in this.transitions){const n=this.transitions[e];n.inProgress&&(t[e]=n.attributeInTransition)}return t}run(){if(!this.isSupported||0===this.numInstances)return!1;for(const e in this.transitions){this.transitions[e].update()&&(this.needsRedraw=!0)}const t=this.needsRedraw;return this.needsRedraw=!1,t}_removeTransition(t){this.transitions[t].cancel(),delete this.transitions[t]}_updateAttribute(t,e,n){const i=this.transitions[t];let o=!i||i.type!==n.type;if(o){if(!this.isSupported)return void c.Z.warn("WebGL2 not supported by this browser. Transition for "+t+" is disabled.")();i&&this._removeTransition(t);const r=M[n.type];r?this.transitions[t]=new r({attribute:e,timeline:this.timeline,gl:this.gl}):(c.Z.error("unsupported transition type '"+n.type+"'")(),o=!1)}(o||e.needsRedraw())&&(this.needsRedraw=!0,this.transitions[t].start(n,this.numInstances))}}const N="attributeManager.invalidate";class T{constructor(t,e){let{id:n="attribute-manager",stats:i,timeline:o}=void 0===e?{}:e;this.id=n,this.gl=t,this.attributes={},this.updateTriggers={},this.needsRedraw=!0,this.userData={},this.stats=i,this.attributeTransitionManager=new L(t,{id:n+"-transitions",timeline:o}),Object.seal(this)}finalize(){for(const t in this.attributes)this.attributes[t].delete();this.attributeTransitionManager.finalize()}getNeedsRedraw(t){void 0===t&&(t={clearRedrawFlags:!1});const e=this.needsRedraw;return this.needsRedraw=this.needsRedraw&&!t.clearRedrawFlags,e&&this.id}setNeedsRedraw(){this.needsRedraw=!0}add(t){this._add(t)}addInstanced(t){this._add(t,{instanced:1})}remove(t){for(const e of t)void 0!==this.attributes[e]&&(this.attributes[e].delete(),delete this.attributes[e])}invalidate(t,e){const n=this._invalidateTrigger(t,e);(0,w.Z)(N,this,t,n)}invalidateAll(t){for(const e in this.attributes)this.attributes[e].setNeedsUpdate(e,t);(0,w.Z)(N,this,"all")}update(t){let{data:e,numInstances:n,startIndices:i=null,transitions:o,props:r={},buffers:s={},context:a={}}=t,l=!1;(0,w.Z)("attributeManager.updateStart",this),this.stats&&this.stats.get("Update Attributes").timeStart();for(const d in this.attributes){const t=this.attributes[d],o=t.settings.accessor;t.startIndices=i,t.numInstances=n,r[d]&&c.Z.removed("props."+d,"data.attributes."+d)(),t.setExternalBuffer(s[d])||t.setBinaryValue("string"==typeof o?s[o]:void 0,e.startIndices)||"string"==typeof o&&!s[o]&&t.setConstantValue(r[o])||t.needsUpdate()&&(l=!0,this._updateAttribute({attribute:t,numInstances:n,data:e,props:r,context:a})),this.needsRedraw=this.needsRedraw||t.needsRedraw()}l&&(0,w.Z)("attributeManager.updateEnd",this,n),this.stats&&this.stats.get("Update Attributes").timeEnd(),this.attributeTransitionManager.update({attributes:this.attributes,numInstances:n,transitions:o})}updateTransition(){const{attributeTransitionManager:t}=this,e=t.run();return this.needsRedraw=this.needsRedraw||e,e}getAttributes(){return this.attributes}getChangedAttributes(t){void 0===t&&(t={clearChangedFlags:!1});const{attributes:e,attributeTransitionManager:n}=this,i={...n.getAttributes()};for(const o in e){const r=e[o];r.needsRedraw(t)&&!n.hasAttribute(o)&&(i[o]=r)}return i}getShaderAttributes(t,e){void 0===e&&(e={}),t||(t=this.getAttributes());const n={};for(const i in t)e[i]||Object.assign(n,t[i].getShaderAttributes());return n}_add(t,e){void 0===e&&(e={});for(const n in t){const i=t[n];this.attributes[n]=this._createAttribute(n,i,e)}this._mapUpdateTriggersToAttributes()}_createAttribute(t,e,n){const i={...e,id:t,size:(e.isIndexed?1:e.size)||1,divisor:n.instanced?1:e.divisor||0};return new _(this.gl,i)}_mapUpdateTriggersToAttributes(){const t={};for(const e in this.attributes){this.attributes[e].getUpdateTriggers().forEach((n=>{t[n]||(t[n]=[]),t[n].push(e)}))}this.updateTriggers=t}_invalidateTrigger(t,e){const{attributes:n,updateTriggers:i}=this,o=i[t];return o&&o.forEach((t=>{const i=n[t];i&&i.setNeedsUpdate(i.id,e)})),o}_updateAttribute(t){const{attribute:e,numInstances:n}=t;if((0,w.Z)("attribute.updateStart",e),e.constant)return void e.setConstantValue(e.value);e.allocate(n)&&(0,w.Z)("attribute.allocate",e,n);e.updateBuffer(t)&&(this.needsRedraw=!0,(0,w.Z)("attribute.updateEnd",e,n))}}},98489:(t,e,n)=>{"use strict";function i(t){const{source:e,target:n,start:i=0,size:o,getData:r}=t,s=t.end||n.length,a=e.length,l=s-i;if(a>l)return void n.set(e.subarray(0,l),i);if(n.set(e,i),!r)return;let c=a;for(;c<l;){const t=r(c,e);for(let e=0;e<o;e++)n[i+c]=t[e]||0,c++}}n.d(e,{DY:()=>l,pi:()=>c,w:()=>a,AQ:()=>s,M0:()=>r,IV:()=>d});const o={interpolation:{duration:0,easing:t=>t},spring:{stiffness:.05,damping:.5}};function r(t,e){if(!t)return null;Number.isFinite(t)&&(t={type:"interpolation",duration:t});const n=t.type||"interpolation";return{...o[n],...e,...t,type:n}}function s(t,e){const n=e.getBuffer();return n?[n,{divisor:0,size:e.size,normalized:e.settings.normalized}]:e.value}function a(t){switch(t){case 1:return"float";case 2:return"vec2";case 3:return"vec3";case 4:return"vec4";default:throw new Error('No defined attribute type for size "'+t+'"')}}function l(t){t.push(t.shift())}function c(t,e){const{doublePrecision:n,settings:i,value:o,size:r}=t,s=n&&o instanceof Float64Array?2:1;return(i.noAlloc?o.length:e*r)*s}function d(t){let{buffer:e,numInstances:n,attribute:o,fromLength:r,fromStartIndices:s,getData:a=(t=>t)}=t;const l=o.doublePrecision&&o.value instanceof Float64Array?2:1,d=o.size*l,p=o.byteOffset,u=o.startIndices,h=s&&u,g=c(o,n),f=o.isConstant;if(!h&&r>=g)return;const m=f?o.value:o.getBuffer().getData({srcByteOffset:p});if(o.settings.normalized&&!f){const t=a;a=(e,n)=>o.normalizeConstant(t(e,n))}const y=f?(t,e)=>a(m,e):(t,e)=>a(m.subarray(t,t+d),e),v=e.getData({length:r}),_=new Float32Array(g);!function(t){let{source:e,target:n,size:o,getData:r,sourceStartIndices:s,targetStartIndices:a}=t;if(!Array.isArray(a))return i({source:e,target:n,size:o,getData:r}),n;let l=0,c=0;const d=r&&((t,e)=>r(t+c,e)),p=Math.min(s.length,a.length);for(let u=1;u<p;u++){const t=s[u]*o,r=a[u]*o;i({source:e.subarray(l,t),target:n,start:c,end:r,size:o,getData:d}),l=t,c=r}c<n.length&&i({source:[],target:n,start:c,size:o,getData:d})}({source:v,target:_,sourceStartIndices:s,targetStartIndices:u,size:d,getData:y}),e.byteLength<_.byteLength+p&&e.reallocate(_.byteLength+p),e.subData({data:_,offset:p})}},19871:(t,e,n)=>{"use strict";n.d(e,{Z:()=>a});var i=n(47251),o=n(14503),r=n(32332),s=n(65663);class a extends i.Z{get isComposite(){return!0}get isLoaded(){return super.isLoaded&&this.getSubLayers().every((t=>t.isLoaded))}getSubLayers(){return this.internalState&&this.internalState.subLayers||[]}initializeState(t){}setState(t){super.setState(t),this.setNeedsUpdate()}getPickingInfo(t){let{info:e}=t;const{object:n}=e;return n&&n.__source&&n.__source.parent&&n.__source.parent.id===this.id?(e.object=n.__source.object,e.index=n.__source.index,e):e}filterSubLayer(t){return!0}shouldRenderSubLayer(t,e){return e&&e.length}getSubLayerClass(t,e){const{_subLayerProps:n}=this.props;return n&&n[t]&&n[t].type||e}getSubLayerRow(t,e,n){return t.__source={parent:this,object:e,index:n},t}getSubLayerAccessor(t){if("function"==typeof t){const e={index:-1,data:this.props.data,target:[]};return(n,i)=>n&&n.__source?(e.index=n.__source.index,t(n.__source.object,e)):t(n,i)}return t}getSubLayerProps(t){var e;void 0===t&&(t={});const{opacity:n,pickable:i,visible:o,parameters:r,getPolygonOffset:a,highlightedObjectIndex:l,autoHighlight:c,highlightColor:d,coordinateSystem:p,coordinateOrigin:u,wrapLongitude:h,positionFormat:g,modelMatrix:f,extensions:m,fetch:y,operation:v,_subLayerProps:_}=this.props,w={id:"",updateTriggers:{},opacity:n,pickable:i,visible:o,parameters:r,getPolygonOffset:a,highlightedObjectIndex:l,autoHighlight:c,highlightColor:d,coordinateSystem:p,coordinateOrigin:u,wrapLongitude:h,positionFormat:g,modelMatrix:f,extensions:m,fetch:y,operation:v},P=_&&t.id&&_[t.id],b=P&&P.updateTriggers,x=t.id||"sublayer";if(P){const e=this.props[s.Wb],n=t.type?t.type._propTypes:{};for(const t in P){const i=n[t]||e[t];i&&"accessor"===i.type&&(P[t]=this.getSubLayerAccessor(P[t]))}}Object.assign(w,t,P),w.id=this.props.id+"-"+x,w.updateTriggers={all:null==(e=this.props.updateTriggers)?void 0:e.all,...t.updateTriggers,...b};for(const s of m){const t=s.getSubLayerProps.call(this,s);t&&Object.assign(w,t,{updateTriggers:Object.assign(w.updateTriggers,t.updateTriggers)})}return w}_updateAutoHighlight(t){for(const e of this.getSubLayers())e.updateAutoHighlight(t)}_getAttributeManager(){return null}_postUpdate(t,e){let n=this.internalState.subLayers;const i=!n||this.needsUpdate();if(i){const t=this.renderLayers();n=(0,r.x)(t,Boolean),this.internalState.subLayers=n}(0,o.Z)("compositeLayer.renderLayers",this,i,n);for(const o of n)o.parent=this}}a.layerName="CompositeLayer"},43631:(t,e,n)=>{"use strict";n.d(e,{Df:()=>o,FP:()=>a,iI:()=>s,zG:()=>r});var i=n(89745);const o={DEFAULT:-1,LNGLAT:1,METER_OFFSETS:2,LNGLAT_OFFSETS:3,CARTESIAN:0};Object.defineProperty(o,"IDENTITY",{get:()=>(i.Z.deprecated("COORDINATE_SYSTEM.IDENTITY","COORDINATE_SYSTEM.CARTESIAN")(),0)});const r={WEB_MERCATOR:1,GLOBE:2,WEB_MERCATOR_AUTO_OFFSET:4,IDENTITY:0},s={common:0,meters:1,pixels:2},a={click:{handler:"onClick"},panstart:{handler:"onDragStart"},panmove:{handler:"onDrag"},panend:{handler:"onDragEnd"}}},83779:(t,e,n)=>{"use strict";n.d(e,{Z:()=>et});var i=n(26236),o=n(65663),r=n(89745),s=n(14503),a=n(32332),l=n(23881),c=n(96742);class d{constructor(t,e,n){this._loadCount=0,this._subscribers=new Set,this.id=t,this.context=n,this.setData(e)}subscribe(t){this._subscribers.add(t)}unsubscribe(t){this._subscribers.delete(t)}inUse(){return this._subscribers.size>0}delete(){}getData(){return this.isLoaded?this._error?Promise.reject(this._error):this._content:this._loader.then((()=>this.getData()))}setData(t,e){if(t===this._data&&!e)return;this._data=t;const n=++this._loadCount;let i=t;"string"==typeof t&&(i=(0,c.z)(t)),i instanceof Promise?(this.isLoaded=!1,this._loader=i.then((t=>{this._loadCount===n&&(this.isLoaded=!0,this._error=void 0,this._content=t)})).catch((t=>{this._loadCount===n&&(this.isLoaded=!0,this._error=t||!0)}))):(this.isLoaded=!0,this._error=void 0,this._content=t);for(const o of this._subscribers)o.onChange(this.getData())}}class p{constructor(t){let{gl:e,protocol:n}=t;this.protocol=n||"resource://",this._context={gl:e,resourceManager:this},this._resources={},this._consumers={},this._pruneRequest=null}contains(t){return!!t.startsWith(this.protocol)||t in this._resources}add(t){let{resourceId:e,data:n,forceUpdate:i=!1,persistent:o=!0}=t,r=this._resources[e];r?r.setData(n,i):(r=new d(e,n,this._context),this._resources[e]=r),r.persistent=o}remove(t){const e=this._resources[t];e&&(e.delete(),delete this._resources[t])}unsubscribe(t){let{consumerId:e}=t;const n=this._consumers[e];if(n){for(const t in n){const e=n[t],i=this._resources[e.resourceId];i&&i.unsubscribe(e)}delete this._consumers[e],this.prune()}}subscribe(t){let{resourceId:e,onChange:n,consumerId:i,requestId:o="default"}=t;const{_resources:r,protocol:s}=this;e.startsWith(s)&&(e=e.replace(s,""),r[e]||this.add({resourceId:e,data:null,persistent:!1}));const a=r[e];if(this._track(i,o,a,n),a)return a.getData()}prune(){this._pruneRequest||(this._pruneRequest=setTimeout((()=>this._prune()),0))}finalize(){for(const t in this._resources)this._resources[t].delete()}_track(t,e,n,i){const o=this._consumers,r=o[t]=o[t]||{},s=r[e]||{},a=s.resourceId&&this._resources[s.resourceId];a&&(a.unsubscribe(s),this.prune()),n&&(r[e]=s,s.onChange=i,s.resourceId=n.id,n.subscribe(s))}_prune(){this._pruneRequest=null;for(const t of Object.keys(this._resources)){const e=this._resources[t];e.persistent||e.inUse()||(e.delete(),delete this._resources[t])}}}var u=n(48332),h=n(74797);const g=[n(73782).Z],f=["vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)","vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)","vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)","fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)"];function m(t){const e=h.Z.getDefaultProgramManager(t);for(const n of g)e.addDefaultModule(n);for(const n of f)e.addShaderHook(n);return e}class y{constructor(t,e){let{deck:n,stats:o,viewport:r,timeline:a}=void 0===e?{}:e;this._lastRenderedLayers=[],this._needsRedraw=!1,this._needsUpdate=!1,this._nextLayers=null,this._debug=!1,this.activateViewport=t=>{(0,s.Z)("layerManager.activateViewport",this,t),t&&(this.context.viewport=t)},this.layers=[],this.resourceManager=new p({gl:t,protocol:"deck://"}),this.context={mousePosition:null,userData:{},layerManager:this,gl:t,deck:n,programManager:t&&m(t),stats:o||new l.Z({id:"deck.gl"}),viewport:r||new u.Z({id:"DEFAULT-INITIAL-VIEWPORT"}),timeline:a||new i.T,resourceManager:this.resourceManager,onError:void 0},Object.seal(this)}finalize(){this.resourceManager.finalize();for(const t of this.layers)this._finalizeLayer(t)}needsRedraw(t){void 0===t&&(t={clearRedrawFlags:!1});let e=this._needsRedraw;t.clearRedrawFlags&&(this._needsRedraw=!1);for(const n of this.layers){const i=n.getNeedsRedraw(t);e=e||i}return e}needsUpdate(){return this._nextLayers&&this._nextLayers!==this._lastRenderedLayers?"layers changed":this._needsUpdate}setNeedsRedraw(t){this._needsRedraw=this._needsRedraw||t}setNeedsUpdate(t){this._needsUpdate=this._needsUpdate||t}getLayers(t){let{layerIds:e}=void 0===t?{}:t;return e?this.layers.filter((t=>e.find((e=>0===t.id.indexOf(e))))):this.layers}setProps(t){"debug"in t&&(this._debug=t.debug),"userData"in t&&(this.context.userData=t.userData),"layers"in t&&(this._nextLayers=t.layers),"onError"in t&&(this.context.onError=t.onError)}setLayers(t,e){(0,s.Z)("layerManager.setLayers",this,e,t),this._lastRenderedLayers=t;const n=(0,a.x)(t,Boolean);for(const i of n)i.context=this.context;this._updateLayers(this.layers,n)}updateLayers(){const t=this.needsUpdate();t&&(this.setNeedsRedraw("updating layers: "+t),this.setLayers(this._nextLayers||this._lastRenderedLayers,t)),this._nextLayers=null}_handleError(t,e,n){n.raiseError(e,t+" of "+n)}_updateLayers(t,e){const n={};for(const s of t)n[s.id]?r.Z.warn("Multiple old layers with same id "+s.id)():n[s.id]=s;const i=[];this._updateSublayersRecursively(e,n,i),this._finalizeOldLayers(n);let o=!1;for(const r of i)if(r.hasUniformTransition()){o="Uniform transition in "+r;break}this._needsUpdate=o,this.layers=i}_updateSublayersRecursively(t,e,n){for(const o of t){o.context=this.context;const t=e[o.id];null===t&&r.Z.warn("Multiple new layers with same id "+o.id)(),e[o.id]=null;let s=null;try{this._debug&&t!==o&&o.validateProps(),t?(this._transferLayerState(t,o),this._updateLayer(o)):this._initializeLayer(o),n.push(o),s=o.isComposite?o.getSubLayers():null}catch(i){this._handleError("matching",i,o)}s&&this._updateSublayersRecursively(s,e,n)}}_finalizeOldLayers(t){for(const e in t){const n=t[e];n&&this._finalizeLayer(n)}}_initializeLayer(t){try{t._initialize(),t.lifecycle=o.dt.INITIALIZED}catch(e){this._handleError("initialization",e,t)}}_transferLayerState(t,e){e._transferState(t),e.lifecycle=o.dt.MATCHED,e!==t&&(t.lifecycle=o.dt.AWAITING_GC)}_updateLayer(t){try{t._update()}catch(e){this._handleError("update",e,t)}}_finalizeLayer(t){this._needsRedraw=this._needsRedraw||"finalized "+t,t.lifecycle=o.dt.AWAITING_FINALIZATION;try{t._finalize(),t.lifecycle=o.dt.FINALIZED}catch(e){this._handleError("finalization",e,t)}}}var v=n(77607);class _{constructor(t){this.views=[],this.width=100,this.height=100,this.viewState={},this.controllers={},this.timeline=t.timeline,this._viewports=[],this._viewportMap={},this._isUpdating=!1,this._needsRedraw="First render",this._needsUpdate="Initialize",this._eventManager=t.eventManager,this._eventCallbacks={onViewStateChange:t.onViewStateChange,onInteractionStateChange:t.onInteractionStateChange},Object.seal(this),this.setProps(t)}finalize(){for(const t in this.controllers){const e=this.controllers[t];e&&e.finalize()}this.controllers={}}needsRedraw(t){void 0===t&&(t={clearRedrawFlags:!1});const e=this._needsRedraw;return t.clearRedrawFlags&&(this._needsRedraw=!1),e}setNeedsUpdate(t){this._needsUpdate=this._needsUpdate||t,this._needsRedraw=this._needsRedraw||t}updateViewStates(){for(const t in this.controllers){const e=this.controllers[t];e&&e.updateTransition()}}getViewports(t){return t?this._viewports.filter((e=>e.containsPixel(t))):this._viewports}getViews(){const t={};return this.views.forEach((e=>{t[e.id]=e})),t}getView(t){return this.views.find((e=>e.id===t))}getViewState(t){const e="string"==typeof t?this.getView(t):t,n=e&&this.viewState[e.getViewStateId()]||this.viewState;return e?e.filterViewState(n):n}getViewport(t){return this._viewportMap[t]}unproject(t,e){const n=this.getViewports(),i={x:t[0],y:t[1]};for(let o=n.length-1;o>=0;--o){const r=n[o];if(r.containsPixel(i)){const n=t.slice();return n[0]-=r.x,n[1]-=r.y,r.unproject(n,e)}}return null}setProps(t){t.views&&this._setViews(t.views),t.viewState&&this._setViewState(t.viewState),("width"in t||"height"in t)&&this._setSize(t.width,t.height),this._isUpdating||this._update()}_update(){this._isUpdating=!0,this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports()),this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports()),this._isUpdating=!1}_setSize(t,e){t===this.width&&e===this.height||(this.width=t,this.height=e,this.setNeedsUpdate("Size changed"))}_setViews(t){t=(0,a.x)(t,Boolean);this._diffViews(t,this.views)&&this.setNeedsUpdate("views changed"),this.views=t}_setViewState(t){if(t){!(0,v.v)(t,this.viewState,1)&&this.setNeedsUpdate("viewState changed"),this.viewState=t}else r.Z.warn("missing `viewState` or `initialViewState`")()}_onViewStateChange(t,e){this._eventCallbacks.onViewStateChange&&this._eventCallbacks.onViewStateChange({...e,viewId:t})}_createController(t,e){return new(0,e.type)({timeline:this.timeline,eventManager:this._eventManager,onViewStateChange:this._onViewStateChange.bind(this,e.id),onStateChange:this._eventCallbacks.onInteractionStateChange,makeViewport:e=>{var n;return null==(n=this.getView(t.id))?void 0:n.makeViewport({viewState:e,width:this.width,height:this.height})}})}_updateController(t,e,n,i){const o=t.controller;if(o){const r={...e,...o,id:t.id,x:n.x,y:n.y,width:n.width,height:n.height};return i||(i=this._createController(t,r)),i&&i.setProps(r),i}return null}_rebuildViewports(){const{views:t}=this,e=this.controllers;this._viewports=[],this.controllers={};let n=!1;for(let i=t.length;i--;){const o=t[i],r=this.getViewState(o),s=o.makeViewport({viewState:r,width:this.width,height:this.height});let a=e[o.id];const l=Boolean(o.controller);l&&!a&&(n=!0),!n&&l||!a||(a.finalize(),a=null),this.controllers[o.id]=this._updateController(o,r,s,a),this._viewports.unshift(s)}for(const i in e){const t=e[i];t&&!this.controllers[i]&&t.finalize()}this._buildViewportMap()}_buildViewportMap(){this._viewportMap={},this._viewports.forEach((t=>{t.id&&(this._viewportMap[t.id]=this._viewportMap[t.id]||t)}))}_diffViews(t,e){return t.length!==e.length||t.some(((n,i)=>!t[i].equals(e[i])))}}var w=n(6362),P=n(6192);const b=new P.Z;class x{constructor(){this._resolvedEffects=[],this._defaultEffects=[],this.effects=[],this._needsRedraw="Initial render",this._setEffects([])}addDefaultEffect(t){const e=this._defaultEffects;if(!e.find((e=>e.id===t.id))){const n=e.findIndex((e=>{return n=t,(null!=(i=e.order)?i:1/0)-(null!=(o=n.order)?o:1/0)>0;var n,i,o}));n<0?e.push(t):e.splice(n,0,t),this._setEffects(this.effects)}}setProps(t){"effects"in t&&(t.effects.length===this.effects.length&&(0,v.v)(t.effects,this.effects,1)||this._setEffects(t.effects))}needsRedraw(t){void 0===t&&(t={clearRedrawFlags:!1});const e=this._needsRedraw;return t.clearRedrawFlags&&(this._needsRedraw=!1),e}getEffects(){return this._resolvedEffects}_setEffects(t){const e={};for(const i of this.effects)e[i.id]=i;const n=[];for(const i of t){const t=e[i.id];t&&t!==i?t.setProps?(t.setProps(i.props),n.push(t)):(t.cleanup(),n.push(i)):n.push(i),delete e[i.id]}for(const i in e)e[i].cleanup();this.effects=n,this._resolvedEffects=n.concat(this._defaultEffects),t.some((t=>t instanceof P.Z))||this._resolvedEffects.push(b),this._needsRedraw="effects changed"}finalize(){for(const t of this._resolvedEffects)t.cleanup();this.effects.length=0,this._resolvedEffects.length=0,this._defaultEffects.length=0}}var C=n(5259);class k extends C.Z{shouldDrawLayer(t){const{operation:e}=t.props;return e.includes("draw")||e.includes("terrain")}}var S=n(7092);const M={blendFunc:[1,0,32771,0],blendEquation:32774};class L extends C.Z{constructor(){super(...arguments),this._colorEncoderState=null}render(t){return"pickingFBO"in t?this._drawPickingBuffer(t):super.render(t)}_drawPickingBuffer(t){let{layers:e,layerFilter:n,views:i,viewports:o,onViewportActive:r,pickingFBO:s,deviceRect:{x:a,y:l,width:c,height:d},cullRect:p,effects:u,pass:h="picking",pickZ:g,moduleParameters:f}=t;const m=this.gl;this.pickZ=g;const y=this._resetColorEncoder(g),v=(0,S.s8)(m,{scissorTest:!0,scissor:[a,l,c,d],clearColor:[0,0,0,0],depthMask:!0,depthTest:!0,depthRange:[0,1],colorMask:[!0,!0,!0,!0],...M,blend:!g},(()=>super.render({target:s,layers:e,layerFilter:n,views:i,viewports:o,onViewportActive:r,cullRect:p,effects:null==u?void 0:u.filter((t=>t.useInPicking)),pass:h,isPicking:!0,moduleParameters:f})));this._colorEncoderState=null;return{decodePickingColor:y&&N.bind(null,y),stats:v}}shouldDrawLayer(t){const{pickable:e,operation:n}=t.props;return e&&n.includes("draw")||n.includes("terrain")}getModuleParameters(){return{pickingActive:1,pickingAttribute:this.pickZ,lightSources:{}}}getLayerParameters(t,e,n){const i={...t.props.parameters},{pickable:o,operation:s}=t.props;return this._colorEncoderState?o&&s.includes("draw")&&(Object.assign(i,M),i.blend=!0,i.blendColor=function(t,e,n){const{byLayer:i,byAlpha:o}=t;let s,a=i.get(e);a?(a.viewports.push(n),s=a.a):(s=i.size+1,s<=255?(a={a:s,layer:e,viewports:[n]},i.set(e,a),o[s]=a):(r.Z.warn("Too many pickable layers, only picking the first 255")(),s=0));return[0,0,0,s/255]}(this._colorEncoderState,t,n)):i.blend=!1,s.includes("terrain")&&(i.blend=!1),i}_resetColorEncoder(t){return this._colorEncoderState=t?null:{byLayer:new Map,byAlpha:[]},this._colorEncoderState}}function N(t,e){const n=t.byAlpha[e[3]];return n&&{pickedLayer:n.layer,pickedViewports:n.viewports,pickedObjectIndex:n.layer.decodePickingColor(e)}}var T=n(79762);class E{constructor(t){this.gl=t,this.layerFilter=null,this.drawPickingColors=!1,this.drawLayersPass=new k(t),this.pickLayersPass=new L(t),this.renderCount=0,this._needsRedraw="Initial render",this.renderBuffers=[],this.lastPostProcessEffect=null}setProps(t){this.layerFilter!==t.layerFilter&&(this.layerFilter=t.layerFilter,this._needsRedraw="layerFilter changed"),this.drawPickingColors!==t.drawPickingColors&&(this.drawPickingColors=t.drawPickingColors,this._needsRedraw="drawPickingColors changed")}renderLayers(t){const e=this.drawPickingColors?this.pickLayersPass:this.drawLayersPass,n={layerFilter:this.layerFilter,isPicking:this.drawPickingColors,...t,target:t.target||T.Z.getDefaultFramebuffer(this.gl)};n.effects&&this._preRender(n.effects,n);const i=this.lastPostProcessEffect?this.renderBuffers[0]:n.target,o=e.render({...n,target:i});n.effects&&this._postRender(n.effects,n),this.renderCount++,(0,s.Z)("deckRenderer.renderLayers",this,o,t)}needsRedraw(t){void 0===t&&(t={clearRedrawFlags:!1});const e=this._needsRedraw;return t.clearRedrawFlags&&(this._needsRedraw=!1),e}finalize(){const{renderBuffers:t}=this;for(const e of t)e.delete();t.length=0}_preRender(t,e){this.lastPostProcessEffect=null,e.preRenderStats=e.preRenderStats||{};for(const n of t)e.preRenderStats[n.id]=n.preRender(this.gl,e),n.postRender&&(this.lastPostProcessEffect=n.id);this.lastPostProcessEffect&&this._resizeRenderBuffers()}_resizeRenderBuffers(){const{renderBuffers:t}=this;0===t.length&&t.push(new T.Z(this.gl),new T.Z(this.gl));for(const e of t)e.resize()}_postRender(t,e){const{renderBuffers:n}=this,i={...e,inputBuffer:n[0],swapBuffer:n[1],target:null};for(const o of t)if(o.postRender){if(o.id===this.lastPostProcessEffect){i.target=e.target,o.postRender(this.gl,i);break}const t=o.postRender(this.gl,i);i.inputBuffer=t,i.swapBuffer=t===n[0]?n[1]:n[0]}}}var A=n(43970),I=n(88163);const O={pickedColor:null,pickedObjectIndex:-1};function R(t){let{pickedColors:e,decodePickingColor:n,deviceX:i,deviceY:o,deviceRadius:s,deviceRect:a}=t;const{x:l,y:c,width:d,height:p}=a;let u=s*s,h=-1,g=0;for(let r=0;r<p;r++){const t=r+c-o,n=t*t;if(n>u)g+=4*d;else for(let o=0;o<d;o++){if(e[g+3]-1>=0){const t=o+l-i,e=t*t+n;e<=u&&(u=e,h=g)}g+=4}}if(h>=0){const t=e.slice(h,h+4),i=n(t);if(i){const e=Math.floor(h/4/d),n=h/4-e*d;return{...i,pickedColor:t,pickedX:l+n,pickedY:c+e}}r.Z.error("Picked non-existent layer. Is picking buffer corrupt?")()}return O}function z(t){let e,{pickInfo:n,viewports:i,pixelRatio:o,x:r,y:s,z:a}=t,l=i[0];if(i.length>1&&(l=function(t,e){for(let n=t.length-1;n>=0;n--){const i=t[n];if(i.containsPixel(e))return i}return t[0]}((null==n?void 0:n.pickedViewports)||i,{x:r,y:s})),l){const t=[r-l.x,s-l.y];void 0!==a&&(t[2]=a),e=l.unproject(t)}return{color:null,layer:null,viewport:l,index:-1,picked:!1,x:r,y:s,pixel:[r,s],coordinate:e,devicePixel:n&&"pickedX"in n?[n.pickedX,n.pickedY]:void 0,pixelRatio:o}}function j(t){const{pickInfo:e,lastPickedInfo:n,mode:i,layers:o}=t,{pickedColor:r,pickedLayer:s,pickedObjectIndex:a}=e,l=s?[s]:[];if("hover"===i){const t=n.index,e=n.layerId,i=s?s.props.id:null;if(i!==e||a!==t){if(i!==e){const t=o.find((t=>t.props.id===e));t&&l.unshift(t)}n.layerId=i,n.index=a,n.info=null}}const c=z(t),d=new Map;return d.set(null,c),l.forEach((t=>{let e={...c};t===s&&(e.color=r,e.index=a,e.picked=!0),e=F({layer:t,info:e,mode:i});const o=e.layer;t===s&&"hover"===i&&(n.info=e),d.set(o.id,e),"hover"===i&&o.updateAutoHighlight(e)})),d}function F(t){let{layer:e,info:n,mode:i}=t;for(;e&&n;){const t=n.layer||null;n.sourceLayer=t,n.layer=e,n=e.getPickingInfo({info:n,mode:i,sourceLayer:t}),e=e.parent}return n}class D{constructor(t){this._pickable=!0,this.gl=t,this.pickLayersPass=new L(t),this.lastPickedInfo={index:-1,layerId:null,info:null}}setProps(t){"layerFilter"in t&&(this.layerFilter=t.layerFilter),"_pickable"in t&&(this._pickable=t._pickable)}finalize(){this.pickingFBO&&this.pickingFBO.delete(),this.depthFBO&&(this.depthFBO.color.delete(),this.depthFBO.delete())}pickObject(t){return this._pickClosestObject(t)}pickObjects(t){return this._pickVisibleObjects(t)}getLastPickedObject(t,e){let{x:n,y:i,layers:o,viewports:r}=t;void 0===e&&(e=this.lastPickedInfo.info);const s=e&&e.layer&&e.layer.id,a=e&&e.viewport&&e.viewport.id,l=s?o.find((t=>t.id===s)):null,c=a&&r.find((t=>t.id===a))||r[0],d=c&&c.unproject([n-c.x,i-c.y]),p={x:n,y:i,viewport:c,coordinate:d,layer:l};return{...e,...p}}_resizeBuffer(){var t,e;const{gl:n}=this;if(!this.pickingFBO&&(this.pickingFBO=new T.Z(n),T.Z.isSupported(n,{colorBufferFloat:!0}))){const t=new T.Z(n);t.attach({36064:new A.Z(n,{format:(0,S.D0)(n)?34836:6408,type:5126})}),this.depthFBO=t}null==(t=this.pickingFBO)||t.resize({width:n.canvas.width,height:n.canvas.height}),null==(e=this.depthFBO)||e.resize({width:n.canvas.width,height:n.canvas.height})}_getPickable(t){if(!1===this._pickable)return null;const e=t.filter((t=>this.pickLayersPass.shouldDrawLayer(t)&&!t.isComposite));return e.length?e:null}_pickClosestObject(t){let{layers:e,views:n,viewports:i,x:o,y:r,radius:s=0,depth:a=1,mode:l="query",unproject3D:c,onViewportActive:d,effects:p}=t;const u=this._getPickable(e),h=(0,S.w)(this.gl);if(!u)return{result:[],emptyInfo:z({viewports:i,x:o,y:r,pixelRatio:h})};this._resizeBuffer();const g=(0,S.JY)(this.gl,[o,r],!0),f=[g.x+Math.floor(g.width/2),g.y+Math.floor(g.height/2)],m=Math.round(s*h),{width:y,height:v}=this.pickingFBO,_=this._getPickingRect({deviceX:f[0],deviceY:f[1],deviceRadius:m,deviceWidth:y,deviceHeight:v}),w={x:o-s,y:r-s,width:2*s+1,height:2*s+1};let P;const b=[],x=new Set;for(let C=0;C<a;C++){let t,e;if(_){t=R({...this._drawAndSample({layers:u,views:n,viewports:i,onViewportActive:d,deviceRect:_,cullRect:w,effects:p,pass:"picking:"+l}),deviceX:f[0],deviceY:f[1],deviceRadius:m,deviceRect:_})}else t={pickedColor:null,pickedObjectIndex:-1};if(t.pickedLayer&&c&&this.depthFBO){const{pickedColors:o}=this._drawAndSample({layers:[t.pickedLayer],views:n,viewports:i,onViewportActive:d,deviceRect:{x:t.pickedX,y:t.pickedY,width:1,height:1},cullRect:w,effects:p,pass:"picking:"+l+":z"},!0);o[3]&&(e=o[0])}t.pickedLayer&&C+1<a&&(x.add(t.pickedLayer),t.pickedLayer.disablePickingIndex(t.pickedObjectIndex)),P=j({pickInfo:t,lastPickedInfo:this.lastPickedInfo,mode:l,layers:u,viewports:i,x:o,y:r,z:e,pixelRatio:h});for(const n of P.values())n.layer&&b.push(n);if(!t.pickedColor)break}for(const C of x)C.restorePickingColors();return{result:b,emptyInfo:P.get(null)}}_pickVisibleObjects(t){let{layers:e,views:n,viewports:i,x:o,y:s,width:a=1,height:l=1,mode:c="query",maxObjects:d=null,onViewportActive:p,effects:u}=t;const h=this._getPickable(e);if(!h)return[];this._resizeBuffer();const g=(0,S.w)(this.gl),f=(0,S.JY)(this.gl,[o,s],!0),m=f.x,y=f.y+f.height,v=(0,S.JY)(this.gl,[o+a,s+l],!0),_=v.x+v.width,w=v.y,P={x:m,y:w,width:_-m,height:y-w},b=function(t){let{pickedColors:e,decodePickingColor:n}=t;const i=new Map;if(e)for(let o=0;o<e.length;o+=4)if(e[o+3]-1>=0){const t=e.slice(o,o+4),s=t.join(",");if(!i.has(s)){const e=n(t);e?i.set(s,{...e,color:t}):r.Z.error("Picked non-existent layer. Is picking buffer corrupt?")()}}return Array.from(i.values())}(this._drawAndSample({layers:h,views:n,viewports:i,onViewportActive:p,deviceRect:P,cullRect:{x:o,y:s,width:a,height:l},effects:u,pass:"picking:"+c})),x=new Map,C=Number.isFinite(d);for(let r=0;r<b.length&&!(C&&d&&x.size>=d);r++){const t=b[r];let e={color:t.pickedColor,layer:null,index:t.pickedObjectIndex,picked:!0,x:o,y:s,pixelRatio:g};e=F({layer:t.pickedLayer,info:e,mode:c}),x.has(e.object)||x.set(e.object,e)}return Array.from(x.values())}_drawAndSample(t,e){let{layers:n,views:i,viewports:o,onViewportActive:r,deviceRect:s,cullRect:a,effects:l,pass:c}=t;void 0===e&&(e=!1);const d=e?this.depthFBO:this.pickingFBO,p={layers:n,layerFilter:this.layerFilter,views:i,viewports:o,onViewportActive:r,pickingFBO:d,deviceRect:s,cullRect:a,effects:l,pass:c,pickZ:e,preRenderStats:{}};for(const v of l)v.useInPicking&&(p.preRenderStats[v.id]=v.preRender(this.gl,p));const{decodePickingColor:u}=this.pickLayersPass.render(p),{x:h,y:g,width:f,height:m}=s,y=new(e?Float32Array:Uint8Array)(f*m*4);return(0,I.z6)(d,{sourceX:h,sourceY:g,sourceWidth:f,sourceHeight:m,target:y}),{pickedColors:y,decodePickingColor:u}}_getPickingRect(t){let{deviceX:e,deviceY:n,deviceRadius:i,deviceWidth:o,deviceHeight:r}=t;const s=Math.max(0,e-i),a=Math.max(0,n-i),l=Math.min(o,e+i+1)-s,c=Math.min(r,n+i+1)-a;return l<=0||c<=0?null:{x:s,y:a,width:l,height:c}}}const U={zIndex:"1",position:"absolute",pointerEvents:"none",color:"#a0a7b4",backgroundColor:"#29323c",padding:"10px",top:"0",left:"0",display:"none"};class Z{constructor(t){this.el=null,this.isVisible=!1;const e=t.parentElement;e&&(this.el=document.createElement("div"),this.el.className="deck-tooltip",Object.assign(this.el.style,U),e.appendChild(this.el))}setTooltip(t,e,n){const i=this.el;if(i){if("string"==typeof t)i.innerText=t;else{if(!t)return this.isVisible=!1,void(i.style.display="none");t.text&&(i.innerText=t.text),t.html&&(i.innerHTML=t.html),t.className&&(i.className=t.className),Object.assign(i.style,t.style)}this.isVisible=!0,i.style.display="block",i.style.transform="translate("+e+"px, "+n+"px)"}}remove(){this.el&&(this.el.remove(),this.el=null)}}var V=n(67258),B=n(28119),W=n(17074);const G={id:"JSON",name:"JSON",module:"",version:"",options:{},extensions:["json","geojson"],mimeTypes:["application/json","application/geo+json"],testText:function(t){const e=t[0],n=t[t.length-1];return"{"===e&&"}"===n||"["===e&&"]"===n},parseTextSync:JSON.parse};const H=function(){const t="0.0.0",e=globalThis.deck&&globalThis.deck.VERSION;if(e&&e!==t)throw new Error("deck.gl - multiple versions detected: "+e+" vs "+t);return e||(r.Z.log(1,"deck.gl "+t)(),globalThis.deck={...globalThis.deck,VERSION:t,version:t,log:r.Z,_registerLoggers:s.z},(0,B.fh)([G,[W.S,{imagebitmap:{premultiplyAlpha:"none"}}]])),t}();var K=n(9749),q=n(28775),Y=n(65259),J=n(10437),X=n(13405),$=n(43631);function Q(){}const tt={id:"",width:"100%",height:"100%",style:null,viewState:null,initialViewState:null,pickingRadius:0,layerFilter:null,glOptions:{},parameters:{},parent:null,gl:null,canvas:null,layers:[],effects:[],views:null,controller:null,useDevicePixels:!0,touchAction:"none",eventRecognizerOptions:{},_framebuffer:null,_animate:!1,_pickable:!0,_typedArrayManagerProps:{},_customRender:null,onWebGLInitialized:Q,onResize:Q,onViewStateChange:Q,onInteractionStateChange:Q,onBeforeRender:Q,onAfterRender:Q,onLoad:Q,onError:t=>r.Z.error(t.message)(),onHover:null,onClick:null,onDragStart:null,onDrag:null,onDragEnd:null,_onMetrics:null,getCursor:t=>{let{isDragging:e}=t;return e?"grabbing":"grab"},getTooltip:null,debug:!1,drawPickingColors:!1};class et{constructor(t){this.width=0,this.height=0,this.userData={},this.canvas=null,this.viewManager=null,this.layerManager=null,this.effectManager=null,this.deckRenderer=null,this.deckPicker=null,this.eventManager=null,this.tooltip=null,this._lastPointerDownInfo=null,this._onPointerMove=t=>{const{_pickRequest:e}=this;if("pointerleave"===t.type)e.x=-1,e.y=-1,e.radius=0;else{if(t.leftButton||t.rightButton)return;{const n=t.offsetCenter;if(!n)return;e.x=n.x,e.y=n.y,e.radius=this.props.pickingRadius}}this.layerManager&&(this.layerManager.context.mousePosition={x:e.x,y:e.y}),e.event=t},this._onEvent=t=>{const e=$.FP[t.type],n=t.offsetCenter;if(!e||!n||!this.layerManager)return;const i=this.layerManager.getLayers(),o=this.deckPicker.getLastPickedObject({x:n.x,y:n.y,layers:i,viewports:this.getViewports(n)},this._lastPointerDownInfo),{layer:r}=o,s=r&&(r[e.handler]||r.props[e.handler]),a=this.props[e.handler];let l=!1;s&&(l=s.call(r,o,t)),!l&&a&&a(o,t)},this._onPointerDown=t=>{const e=t.offsetCenter,n=this._pick("pickObject","pickObject Time",{x:e.x,y:e.y,radius:this.props.pickingRadius});this._lastPointerDownInfo=n.result[0]||n.emptyInfo},this.props={...tt,...t},t=this.props,this._needsRedraw="Initial render",this._pickRequest={mode:"hover",x:-1,y:-1,radius:0,event:null},this.cursorState={isHovering:!1,isDragging:!1},t.viewState&&t.initialViewState&&r.Z.warn("View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.")(),"IE"===(0,K.Z)()&&r.Z.warn("IE 11 is not supported")(),this.viewState=t.initialViewState,t.gl||"undefined"!=typeof document&&(this.canvas=this._createCanvas(t)),this.animationLoop=this._createAnimationLoop(t),this.stats=new l.Z({id:"deck.gl"}),this.metrics={fps:0,setPropsTime:0,updateAttributesTime:0,framesRedrawn:0,pickTime:0,pickCount:0,gpuTime:0,gpuTimePerFrame:0,cpuTime:0,cpuTimePerFrame:0,bufferMemory:0,textureMemory:0,renderbufferMemory:0,gpuMemory:0},this._metricsCounter=0,this.setProps(t),t._typedArrayManagerProps&&V.Z.setOptions(t._typedArrayManagerProps),this.animationLoop.start()}finalize(){var t,e,n,i,o,r,s,a;(this.animationLoop.stop(),this.animationLoop=null,this._lastPointerDownInfo=null,null==(t=this.layerManager)||t.finalize(),this.layerManager=null,null==(e=this.viewManager)||e.finalize(),this.viewManager=null,null==(n=this.effectManager)||n.finalize(),this.effectManager=null,null==(i=this.deckRenderer)||i.finalize(),this.deckRenderer=null,null==(o=this.deckPicker)||o.finalize(),this.deckPicker=null,null==(r=this.eventManager)||r.destroy(),this.eventManager=null,null==(s=this.tooltip)||s.remove(),this.tooltip=null,this.props.canvas||this.props.gl||!this.canvas)||(null==(a=this.canvas.parentElement)||a.removeChild(this.canvas),this.canvas=null)}setProps(t){this.stats.get("setProps Time").timeStart(),"onLayerHover"in t&&r.Z.removed("onLayerHover","onHover")(),"onLayerClick"in t&&r.Z.removed("onLayerClick","onClick")(),t.initialViewState&&!(0,v.v)(this.props.initialViewState,t.initialViewState,1)&&(this.viewState=t.initialViewState),Object.assign(this.props,t),this._setCanvasSize(this.props);const e=Object.create(this.props);Object.assign(e,{views:this._getViews(),width:this.width,height:this.height,viewState:this._getViewState()}),this.animationLoop.setProps(e),this.layerManager&&(this.viewManager.setProps(e),this.layerManager.activateViewport(this.getViewports()[0]),this.layerManager.setProps(e),this.effectManager.setProps(e),this.deckRenderer.setProps(e),this.deckPicker.setProps(e)),this.stats.get("setProps Time").timeEnd()}needsRedraw(t){if(void 0===t&&(t={clearRedrawFlags:!1}),!this.layerManager)return!1;if(this.props._animate)return"Deck._animate";let e=this._needsRedraw;t.clearRedrawFlags&&(this._needsRedraw=!1);const n=this.viewManager.needsRedraw(t),i=this.layerManager.needsRedraw(t),o=this.effectManager.needsRedraw(t),r=this.deckRenderer.needsRedraw(t);return e=e||n||i||o||r,e}redraw(t){if(!this.layerManager)return;let e=this.needsRedraw({clearRedrawFlags:!0});e=t||e,e&&(this.stats.get("Redraw Count").incrementCount(),this.props._customRender?this.props._customRender(e):this._drawLayers(e))}get isInitialized(){return null!==this.viewManager}getViews(){return(0,X.Z)(this.viewManager),this.viewManager.views}getViewports(t){return(0,X.Z)(this.viewManager),this.viewManager.getViewports(t)}pickObject(t){const e=this._pick("pickObject","pickObject Time",t).result;return e.length?e[0]:null}pickMultipleObjects(t){return t.depth=t.depth||10,this._pick("pickObject","pickMultipleObjects Time",t).result}pickObjects(t){return this._pick("pickObjects","pickObjects Time",t)}_addResources(t,e){void 0===e&&(e=!1);for(const n in t)this.layerManager.resourceManager.add({resourceId:n,data:t[n],forceUpdate:e})}_removeResources(t){for(const e of t)this.layerManager.resourceManager.remove(e)}_addDefaultEffect(t){this.effectManager.addDefaultEffect(t)}_pick(t,e,n){(0,X.Z)(this.deckPicker);const{stats:i}=this;i.get("Pick Count").incrementCount(),i.get(e).timeStart();const o=this.deckPicker[t]({layers:this.layerManager.getLayers(n),views:this.viewManager.getViews(),viewports:this.getViewports(n),onViewportActive:this.layerManager.activateViewport,effects:this.effectManager.getEffects(),...n});return i.get(e).timeEnd(),o}_createCanvas(t){let e=t.canvas;if("string"==typeof e&&(e=document.getElementById(e),(0,X.Z)(e)),!e){e=document.createElement("canvas"),e.id=t.id||"deckgl-overlay";(t.parent||document.body).appendChild(e)}return Object.assign(e.style,t.style),e}_setCanvasSize(t){if(!this.canvas)return;const{width:e,height:n}=t;if(e||0===e){const t=Number.isFinite(e)?e+"px":e;this.canvas.style.width=t}if(n||0===n){var i;const e=Number.isFinite(n)?n+"px":n;this.canvas.style.position=(null==(i=t.style)?void 0:i.position)||"absolute",this.canvas.style.height=e}}_updateCanvasSize(){const{canvas:t}=this;if(!t)return;const e=t.clientWidth||t.width,n=t.clientHeight||t.height;var i;e===this.width&&n===this.height||(this.width=e,this.height=n,null==(i=this.viewManager)||i.setProps({width:e,height:n}),this.props.onResize({width:e,height:n}))}_createAnimationLoop(t){const{width:e,height:n,gl:i,glOptions:o,debug:r,onError:s,onBeforeRender:a,onAfterRender:l,useDevicePixels:c}=t;return new q.Z({width:e,height:n,useDevicePixels:c,autoResizeViewport:!1,gl:i,onCreateContext:t=>(0,S.s9)({...o,...t,canvas:this.canvas,debug:r,onContextLost:()=>this._onContextLost()}),onInitialize:t=>this._setGLContext(t.gl),onRender:this._onRenderFrame.bind(this),onBeforeRender:a,onAfterRender:l,onError:s})}_getViewState(){return this.props.viewState||this.viewState}_getViews(){let t=this.props.views||[new w.Z({id:"default-view"})];return t=Array.isArray(t)?t:[t],t.length&&this.props.controller&&(t[0].props.controller=this.props.controller),t}_onContextLost(){const{onError:t}=this.props;this.animationLoop&&t&&t(new Error("WebGL context is lost"))}_pickAndCallback(){const{_pickRequest:t}=this;if(t.event){const{result:n,emptyInfo:i}=this._pick("pickObject","pickObject Time",t);this.cursorState.isHovering=n.length>0;let o=i,r=!1;for(const s of n){var e;o=s,r=(null==(e=s.layer)?void 0:e.onHover(s,t.event))||r}if(!r&&this.props.onHover&&this.props.onHover(o,t.event),this.props.getTooltip&&this.tooltip){const t=this.props.getTooltip(o);this.tooltip.setTooltip(t,o.x,o.y)}t.event=null}}_updateCursor(){const t=this.props.parent||this.canvas;t&&(t.style.cursor=this.props.getCursor(this.cursorState))}_setGLContext(t){if(this.layerManager)return;this.canvas||(this.canvas=t.canvas,(0,S.yW)(t,{enable:!0,copyState:!0})),this.tooltip=new Z(this.canvas),(0,S.dR)(t,{blend:!0,blendFunc:[770,771,1,771],polygonOffsetFill:!0,depthTest:!0,depthFunc:515}),this.props.onWebGLInitialized(t);const e=new i.T;e.play(),this.animationLoop.attachTimeline(e),this.eventManager=new J.Q(this.props.parent||t.canvas,{touchAction:this.props.touchAction,recognizerOptions:this.props.eventRecognizerOptions,events:{pointerdown:this._onPointerDown,pointermove:this._onPointerMove,pointerleave:this._onPointerMove}});for(const i in $.FP)this.eventManager.on(i,this._onEvent);this.viewManager=new _({timeline:e,eventManager:this.eventManager,onViewStateChange:this._onViewStateChange.bind(this),onInteractionStateChange:this._onInteractionStateChange.bind(this),views:this._getViews(),viewState:this._getViewState(),width:this.width,height:this.height});const n=this.viewManager.getViewports()[0];this.layerManager=new y(t,{deck:this,stats:this.stats,viewport:n,timeline:e}),this.effectManager=new x,this.deckRenderer=new E(t),this.deckPicker=new D(t),this.setProps(this.props),this._updateCanvasSize(),this.props.onLoad()}_drawLayers(t,e){const{gl:n}=this.layerManager.context;(0,S.dR)(n,this.props.parameters),this.props.onBeforeRender({gl:n}),this.deckRenderer.renderLayers({target:this.props._framebuffer,layers:this.layerManager.getLayers(),viewports:this.viewManager.getViewports(),onViewportActive:this.layerManager.activateViewport,views:this.viewManager.getViews(),pass:"screen",effects:this.effectManager.getEffects(),...e}),this.props.onAfterRender({gl:n})}_onRenderFrame(t){this._getFrameStats(),this._metricsCounter++%60==0&&(this._getMetrics(),this.stats.reset(),r.Z.table(4,this.metrics)(),this.props._onMetrics&&this.props._onMetrics(this.metrics)),this._updateCanvasSize(),this._updateCursor(),this.tooltip.isVisible&&this.viewManager.needsRedraw()&&this.tooltip.setTooltip(null),this.layerManager.updateLayers(),this._pickAndCallback(),this.redraw(),this.viewManager&&this.viewManager.updateViewStates()}_onViewStateChange(t){const e=this.props.onViewStateChange(t)||t.viewState;this.viewState&&(this.viewState={...this.viewState,[t.viewId]:e},this.props.viewState||this.viewManager&&this.viewManager.setProps({viewState:this.viewState}))}_onInteractionStateChange(t){this.cursorState.isDragging=t.isDragging||!1,this.props.onInteractionStateChange(t)}_getFrameStats(){const{stats:t}=this;t.get("frameRate").timeEnd(),t.get("frameRate").timeStart();const e=this.animationLoop.stats;t.get("GPU Time").addTime(e.get("GPU Time").lastTiming),t.get("CPU Time").addTime(e.get("CPU Time").lastTiming)}_getMetrics(){const{metrics:t,stats:e}=this;t.fps=e.get("frameRate").getHz(),t.setPropsTime=e.get("setProps Time").time,t.updateAttributesTime=e.get("Update Attributes").time,t.framesRedrawn=e.get("Redraw Count").count,t.pickTime=e.get("pickObject Time").time+e.get("pickMultipleObjects Time").time+e.get("pickObjects Time").time,t.pickCount=e.get("Pick Count").count,t.gpuTime=e.get("GPU Time").time,t.cpuTime=e.get("CPU Time").time,t.gpuTimePerFrame=e.get("GPU Time").getAverageTime(),t.cpuTimePerFrame=e.get("CPU Time").getAverageTime();const n=Y.lR.get("Memory Usage");t.bufferMemory=n.get("Buffer Memory").count,t.textureMemory=n.get("Texture Memory").count,t.renderbufferMemory=n.get("Renderbuffer Memory").count,t.gpuMemory=n.get("GPU Memory").count}}et.defaultProps=tt,et.VERSION=H},47251:(t,e,n)=>{"use strict";n.d(e,{Z:()=>nt});var i=n(43631),o=n(52747),r=n(98489),s=n(28835),a=n(62833);class l extends a.Z{get value(){return this._value}_onUpdate(){const{time:t,settings:{fromValue:e,toValue:n,duration:i,easing:o}}=this,r=o(t/i);this._value=(0,s.t7)(e,n,r)}}const c=1e-5;function d(t,e,n,i,o){const r=e-t;return(n-e)*o+-r*i+r+e}function p(t,e){if(Array.isArray(t)){let n=0;for(let i=0;i<t.length;i++){const o=t[i]-e[i];n+=o*o}return Math.sqrt(n)}return Math.abs(t-e)}class u extends a.Z{get value(){return this._currValue}_onUpdate(){const{fromValue:t,toValue:e,damping:n,stiffness:i}=this.settings,{_prevValue:o=t,_currValue:r=t}=this;let s=function(t,e,n,i,o){if(Array.isArray(n)){const r=[];for(let s=0;s<n.length;s++)r[s]=d(t[s],e[s],n[s],i,o);return r}return d(t,e,n,i,o)}(o,r,e,n,i);const a=p(s,e),l=p(s,r);a<c&&l<c&&(s=e,this.end()),this._prevValue=r,this._currValue=s}}var h=n(89745);const g={interpolation:l,spring:u};class f{constructor(t){this.transitions=new Map,this.timeline=t}get active(){return this.transitions.size>0}add(t,e,n,i){const{transitions:o}=this;if(o.has(t)){const n=o.get(t),{value:i=n.settings.fromValue}=n;e=i,this.remove(t)}if(!(i=(0,r.M0)(i)))return;const s=g[i.type];if(!s)return void h.Z.error("unsupported transition type '"+i.type+"'")();const a=new s(this.timeline);a.start({...i,fromValue:e,toValue:n}),o.set(t,a)}remove(t){const{transitions:e}=this;e.has(t)&&(e.get(t).cancel(),e.delete(t))}update(){const t={};for(const[e,n]of this.transitions)n.update(),t[e]=n.value,n.inProgress||this.remove(e);return t}clear(){for(const t of this.transitions.keys())this.remove(t)}}var m=n(65756),y=n(65663);const v="count(): argument not an object",_="count(): argument not a container";function w(t){if(null===(e=t)||"object"!=typeof e)throw new Error(v);var e;if("function"==typeof t.count)return t.count();if(Number.isFinite(t.size))return t.size;if(Number.isFinite(t.length))return t.length;if(function(t){return null!==t&&"object"==typeof t&&t.constructor===Object}(t))return Object.keys(t).length;throw new Error(_)}var P=n(14503),b=n(7092),x=n(13405),C=n(66508),k=n(16862),S=n(50961),M=n(67258),L=n(37944),N=n(43970);const T={10241:9987,10240:9729,10242:33071,10243:33071},E={};var A=n(77607);const I={boolean:{validate:(t,e)=>!0,equal:(t,e,n)=>Boolean(t)===Boolean(e)},number:{validate:(t,e)=>Number.isFinite(t)&&(!("max"in e)||t<=e.max)&&(!("min"in e)||t>=e.min)},color:{validate:(t,e)=>e.optional&&!t||j(t)&&(3===t.length||4===t.length),equal:(t,e,n)=>O(t,e)},accessor:{validate(t,e){const n=F(t);return"function"===n||n===F(e.value)},equal:(t,e,n)=>"function"==typeof e||O(t,e)},array:{validate:(t,e)=>e.optional&&!t||j(t),equal:(t,e,n)=>n.compare?O(t,e):t===e},object:{equal:(t,e,n)=>n.compare?(0,A.v)(t,e,n.depth||0):t===e},function:{validate:(t,e)=>e.optional&&!t||"function"==typeof t,equal:(t,e,n)=>!n.compare||t===e},data:{transform:(t,e,n)=>{const{dataTransform:i}=n.props;return i&&t?i(t):t}},image:{transform:(t,e,n)=>{const i=n.context;return i&&i.gl?function(t,e,n){if(e instanceof N.Z)return e;e.constructor&&"Object"!==e.constructor.name&&(e={data:e});let i=null;e.compressed&&(i={10241:e.data.length>1?9985:9729});const o=new N.Z(t,{...e,parameters:{...T,...i,...n}});return E[o.id]=!0,o}(i.gl,t,{...e.parameters,...n.props.textureParameters}):null},release:t=>{var e;(e=t)&&e instanceof N.Z&&E[e.id]&&(e.delete(),delete E[e.id])}}};function O(t,e){if(t===e)return!0;if(!j(t)||!j(e))return!1;const n=t.length;if(n!==e.length)return!1;for(let i=0;i<n;i++)if(t[i]!==e[i])return!1;return!0}function R(t,e){switch(F(e)){case"object":return z(t,e);case"array":return z(t,{type:"array",value:e,compare:!1});case"boolean":return z(t,{type:"boolean",value:e});case"number":return z(t,{type:"number",value:e});case"function":return z(t,{type:"function",value:e,compare:!0});default:return{name:t,type:"unknown",value:e}}}function z(t,e){return"type"in e?{name:t,...I[e.type],...e}:"value"in e?{name:t,type:F(e.value),...e}:{name:t,type:"object",value:e}}function j(t){return Array.isArray(t)||ArrayBuffer.isView(t)}function F(t){return j(t)?"array":null===t?"null":typeof t}const D="_mergedDefaultProps";function U(t,e){let n=D;if(e)for(const o of e){const t=o.constructor;t&&(n+=":"+(t.extensionName||t.name))}const i=B(t,n);return i||(t[n]=function(t,e){const n=t.prototype;if(!n)return null;const i=Object.getPrototypeOf(t),o=U(i),r=B(t,"defaultProps")||{},s=function(t){const e={},n={},i={};for(const[o,r]of Object.entries(t)){const t=null==r?void 0:r.deprecatedFor;if(t)i[o]=Array.isArray(t)?t:[t];else{const t=R(o,r);e[o]=t,n[o]=t.value}}return{propTypes:e,defaultProps:n,deprecatedProps:i}}(r),a=Object.assign(Object.create(null),o,s.defaultProps),l=Object.assign(Object.create(null),null==o?void 0:o[y.Wb],s.propTypes),c=Object.assign(Object.create(null),null==o?void 0:o[y.E7],s.deprecatedProps);for(const d of e){const t=U(d.constructor);t&&(Object.assign(a,t),Object.assign(l,t[y.Wb]),Object.assign(c,t[y.E7]))}(function(t,e){const n=function(t){const e=B(t,"layerName")||B(t,"componentName");e||h.Z.once(0,t.name+".componentName not specified")();return e||t.name}(e);Object.defineProperties(t,{id:{writable:!0,value:n}})})(a,t),function(t,e){const n={},i={};for(const o in e){const t=e[o],{name:r,value:s}=t;t.async&&(n[r]=s,i[r]=Z(r))}t[y.lY]=n,t[y.fO]={},Object.defineProperties(t,i)}(a,l),function(t,e){for(const n in e)Object.defineProperty(t,n,{enumerable:!1,set(t){const i=this.id+": "+n;for(const o of e[n])V(this,o)||(this[o]=t);h.Z.deprecated(i,e[n].join("/"))()}})}(a,c),a[y.Wb]=l,a[y.E7]=c,0!==e.length||V(t,"_propTypes")||(t._propTypes=l);return a}(t,e||[]))}function Z(t){return{enumerable:!0,set(e){"string"==typeof e||e instanceof Promise||(0,L.D0)(e)?this[y.fO][t]=e:this[y.bN][t]=e},get(){if(this[y.bN]){if(t in this[y.bN]){return this[y.bN][t]||this[y.lY][t]}if(t in this[y.fO]){const e=this[y.fm]&&this[y.fm].internalState;if(e&&e.hasAsyncProp(t))return e.getAsyncProp(t)||this[y.lY][t]}}return this[y.lY][t]}}}function V(t,e){return Object.prototype.hasOwnProperty.call(t,e)}function B(t,e){return V(t,e)&&t[e]}let W=0;class G{constructor(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];this.props=function(t,e){let n;for(let r=e.length-1;r>=0;r--){const t=e[r];"extensions"in t&&(n=t.extensions)}const i=U(t.constructor,n),o=Object.create(i);o[y.fm]=t,o[y.fO]={},o[y.bN]={};for(let r=0;r<e.length;++r){const t=e[r];for(const e in t)o[e]=t[e]}return Object.freeze(o),o}(this,e),this.id=this.props.id,this.count=W++}clone(t){const{props:e}=this,n={};for(const i in e[y.lY])i in e[y.bN]?n[i]=e[y.bN][i]:i in e[y.fO]&&(n[i]=e[y.fO][i]);return new this.constructor({...e,...n,...t})}}G.componentName="Component",G.defaultProps={};const H=Object.freeze({});class K{constructor(t){this.component=t,this.asyncProps={},this.onAsyncPropUpdated=()=>{},this.oldProps=null,this.oldAsyncProps=null}finalize(){for(const t in this.asyncProps){const e=this.asyncProps[t];e&&e.type&&e.type.release&&e.type.release(e.resolvedValue,e.type,this.component)}this.asyncProps={},this.component=null,this.resetOldProps()}getOldProps(){return this.oldAsyncProps||this.oldProps||H}resetOldProps(){this.oldAsyncProps=null,this.oldProps=this.component?this.component.props:null}hasAsyncProp(t){return t in this.asyncProps}getAsyncProp(t){const e=this.asyncProps[t];return e&&e.resolvedValue}isAsyncPropLoading(t){if(t){const e=this.asyncProps[t];return Boolean(e&&e.pendingLoadCount>0&&e.pendingLoadCount!==e.resolvedLoadCount)}for(const e in this.asyncProps)if(this.isAsyncPropLoading(e))return!0;return!1}reloadAsyncProp(t,e){this._watchPromise(t,Promise.resolve(e))}setAsyncProps(t){this.component=t[y.fm]||this.component;const e=t[y.bN]||{},n=t[y.fO]||t,i=t[y.lY]||{};for(const o in e){const t=e[o];this._createAsyncPropData(o,i[o]),this._updateAsyncProp(o,t),e[o]=this.getAsyncProp(o)}for(const o in n){const t=n[o];this._createAsyncPropData(o,i[o]),this._updateAsyncProp(o,t)}}_fetch(t,e){return null}_onResolve(t,e){}_onError(t,e){}_updateAsyncProp(t,e){this._didAsyncInputValueChange(t,e)&&("string"==typeof e&&(e=this._fetch(t,e)),e instanceof Promise?this._watchPromise(t,e):(0,L.D0)(e)?this._resolveAsyncIterable(t,e):this._setPropValue(t,e))}_freezeAsyncOldProps(){if(!this.oldAsyncProps&&this.oldProps){this.oldAsyncProps=Object.create(this.oldProps);for(const t in this.asyncProps)Object.defineProperty(this.oldAsyncProps,t,{enumerable:!0,value:this.oldProps[t]})}}_didAsyncInputValueChange(t,e){const n=this.asyncProps[t];return e!==n.resolvedValue&&e!==n.lastValue&&(n.lastValue=e,!0)}_setPropValue(t,e){this._freezeAsyncOldProps();const n=this.asyncProps[t];n&&(e=this._postProcessValue(n,e),n.resolvedValue=e,n.pendingLoadCount++,n.resolvedLoadCount=n.pendingLoadCount)}_setAsyncPropValue(t,e,n){const i=this.asyncProps[t];i&&n>=i.resolvedLoadCount&&void 0!==e&&(this._freezeAsyncOldProps(),i.resolvedValue=e,i.resolvedLoadCount=n,this.onAsyncPropUpdated(t,e))}_watchPromise(t,e){const n=this.asyncProps[t];if(n){n.pendingLoadCount++;const i=n.pendingLoadCount;e.then((e=>{this.component&&(e=this._postProcessValue(n,e),this._setAsyncPropValue(t,e,i),this._onResolve(t,e))})).catch((e=>{this._onError(t,e)}))}}async _resolveAsyncIterable(t,e){if("data"!==t)return void this._setPropValue(t,e);const n=this.asyncProps[t];if(!n)return;n.pendingLoadCount++;const i=n.pendingLoadCount;let o=[],r=0;for await(const s of e){if(!this.component)return;const{dataTransform:e}=this.component.props;o=e?e(s,o):o.concat(s),Object.defineProperty(o,"__diff",{enumerable:!1,value:[{startRow:r,endRow:o.length}]}),r=o.length,this._setAsyncPropValue(t,o,i)}this._onResolve(t,o)}_postProcessValue(t,e){const n=t.type;return n&&this.component&&(n.release&&n.release(t.resolvedValue,n,this.component),n.transform)?n.transform(e,n,this.component):e}_createAsyncPropData(t,e){if(!this.asyncProps[t]){const n=this.component&&this.component.props[y.Wb];this.asyncProps[t]={type:n&&n[t],lastValue:null,resolvedValue:e,pendingLoadCount:0,resolvedLoadCount:0}}}}class q extends K{constructor(t){let{attributeManager:e,layer:n}=t;super(n),this.attributeManager=e,this.needsRedraw=!0,this.needsUpdate=!0,this.subLayers=null,this.usesPickingColorCache=!1}get layer(){return this.component}_fetch(t,e){const n=this.layer,i=null==n?void 0:n.props.fetch;return i?i(e,{propName:t,layer:n}):super._fetch(t,e)}_onResolve(t,e){const n=this.layer;if(n){const i=n.props.onDataLoad;"data"===t&&i&&i(e,{propName:t,layer:n})}}_onError(t,e){const n=this.layer;n&&n.raiseError(e,"loading "+t+" of "+this.layer)}}var Y=n(92797),J=n(96742);const X=2**24-1,$=Object.freeze([]),Q=(0,C.Z)((t=>{let{oldViewport:e,viewport:n}=t;return e.equals(n)}));let tt=new Uint8ClampedArray(0);const et={data:{type:"data",value:$,async:!0},dataComparator:{type:"function",value:null,compare:!1,optional:!0},_dataDiff:{type:"function",value:t=>t&&t.__diff,compare:!1,optional:!0},dataTransform:{type:"function",value:null,compare:!1,optional:!0},onDataLoad:{type:"function",value:null,compare:!1,optional:!0},onError:{type:"function",value:null,compare:!1,optional:!0},fetch:{type:"function",value:(t,e)=>{let{propName:n,layer:i,loaders:o,loadOptions:r,signal:s}=e;const{resourceManager:a}=i.context;var l;(r=r||i.getLoadOptions(),o=o||i.props.loaders,s)&&(r={...r,fetch:{...null==(l=r)?void 0:l.fetch,signal:s}});let c=a.contains(t);return c||r||(a.add({resourceId:t,data:(0,J.z)(t,o),persistent:!1}),c=!0),c?a.subscribe({resourceId:t,onChange:t=>{var e;return null==(e=i.internalState)?void 0:e.reloadAsyncProp(n,t)},consumerId:i.id,requestId:n}):(0,J.z)(t,o,r)},compare:!1},updateTriggers:{},visible:!0,pickable:!1,opacity:{type:"number",min:0,max:1,value:1},operation:"draw",onHover:{type:"function",value:null,compare:!1,optional:!0},onClick:{type:"function",value:null,compare:!1,optional:!0},onDragStart:{type:"function",value:null,compare:!1,optional:!0},onDrag:{type:"function",value:null,compare:!1,optional:!0},onDragEnd:{type:"function",value:null,compare:!1,optional:!0},coordinateSystem:i.Df.DEFAULT,coordinateOrigin:{type:"array",value:[0,0,0],compare:!0},modelMatrix:{type:"array",value:null,compare:!0,optional:!0},wrapLongitude:!1,positionFormat:"XYZ",colorFormat:"RGBA",parameters:{type:"object",value:{},optional:!0,compare:!0,depth:1},loadOptions:{type:"object",value:null,optional:!0,compare:!0,depth:3},transitions:null,extensions:[],loaders:{type:"array",value:[],optional:!0,compare:!0},getPolygonOffset:{type:"function",value:t=>{let{layerIndex:e}=t;return[0,100*-e]},compare:!1},highlightedObjectIndex:null,autoHighlight:!1,highlightColor:{type:"accessor",value:[0,0,128,128]}};class nt extends G{constructor(){super(...arguments),this.internalState=null,this.lifecycle=y.dt.NO_STATE,this.parent=null}get root(){let t=this;for(;t.parent;)t=t.parent;return t}toString(){return(this.constructor.layerName||this.constructor.name)+"({id: '"+this.props.id+"'})"}project(t){(0,x.Z)(this.internalState);const e=this.internalState.viewport||this.context.viewport,n=(0,S.T)(t,{viewport:e,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem}),[i,o,r]=(0,Y.aW)(n,e.pixelProjectionMatrix);return 2===t.length?[i,o]:[i,o,r]}unproject(t){(0,x.Z)(this.internalState);return(this.internalState.viewport||this.context.viewport).unproject(t)}projectPosition(t,e){(0,x.Z)(this.internalState);const n=this.internalState.viewport||this.context.viewport;return(0,S.D)(t,{viewport:n,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem,...e})}get isComposite(){return!1}setState(t){this.setChangeFlags({stateChanged:!0}),Object.assign(this.state,t),this.setNeedsRedraw()}setNeedsRedraw(){this.internalState&&(this.internalState.needsRedraw=!0)}setNeedsUpdate(){this.internalState&&(this.context.layerManager.setNeedsUpdate(String(this)),this.internalState.needsUpdate=!0)}get isLoaded(){return!!this.internalState&&!this.internalState.isAsyncPropLoading()}get wrapLongitude(){return this.props.wrapLongitude}isPickable(){return this.props.pickable&&this.props.visible}getModels(){return this.state&&(this.state.models||this.state.model&&[this.state.model])||[]}setModuleParameters(t){for(const e of this.getModels())e.updateModuleSettings(t)}getAttributeManager(){return this.internalState&&this.internalState.attributeManager}getCurrentLayer(){return this.internalState&&this.internalState.layer}getLoadOptions(){return this.props.loadOptions}use64bitPositions(){const{coordinateSystem:t}=this.props;return t===i.Df.DEFAULT||t===i.Df.LNGLAT||t===i.Df.CARTESIAN}onHover(t,e){return this.props.onHover&&this.props.onHover(t,e)||!1}onClick(t,e){return this.props.onClick&&this.props.onClick(t,e)||!1}nullPickingColor(){return[0,0,0]}encodePickingColor(t,e){return void 0===e&&(e=[]),e[0]=t+1&255,e[1]=t+1>>8&255,e[2]=t+1>>8>>8&255,e}decodePickingColor(t){(0,x.Z)(t instanceof Uint8Array);const[e,n,i]=t;return e+256*n+65536*i-1}getNumInstances(){return Number.isFinite(this.props.numInstances)?this.props.numInstances:this.state&&void 0!==this.state.numInstances?this.state.numInstances:w(this.props.data)}getStartIndices(){return this.props.startIndices?this.props.startIndices:this.state&&this.state.startIndices?this.state.startIndices:null}getBounds(){var t;const e=this.getAttributeManager();if(!e)return null;const{positions:n,instancePositions:i}=e.attributes;return null==(t=n||i)?void 0:t.getBounds()}getShaders(t){for(const e of this.props.extensions)t=(0,k.l)(t,e.getShaders.call(this,e));return t}shouldUpdateState(t){return t.changeFlags.propsOrDataChanged}updateState(t){const e=this.getAttributeManager(),{dataChanged:n}=t.changeFlags;if(n&&e)if(Array.isArray(n))for(const i of n)e.invalidateAll(i);else e.invalidateAll();if(e){const{props:n}=t,i=this.internalState.hasPickingBuffer,o=Number.isInteger(n.highlightedObjectIndex)||n.pickable||n.extensions.some((t=>t.getNeedsPickingBuffer.call(this,t)));if(i!==o){this.internalState.hasPickingBuffer=o;const{pickingColors:t,instancePickingColors:n}=e.attributes,i=t||n;i&&(o&&i.constant&&(i.constant=!1,e.invalidate(i.id)),i.value||o||(i.constant=!0,i.value=[0,0,0]))}}}finalizeState(t){for(const n of this.getModels())n.delete();const e=this.getAttributeManager();e&&e.finalize(),this.context&&this.context.resourceManager.unsubscribe({consumerId:this.id}),this.internalState&&(this.internalState.uniformTransitions.clear(),this.internalState.finalize())}draw(t){for(const e of this.getModels())e.draw(t)}getPickingInfo(t){let{info:e,mode:n,sourceLayer:i}=t;const{index:o}=e;return o>=0&&Array.isArray(this.props.data)&&(e.object=this.props.data[o]),e}raiseError(t,e){var n,i,o;(e&&(t.message=e+": "+t.message),null!=(n=(i=this.props).onError)&&n.call(i,t))||(null==(o=this.context)||null==o.onError||o.onError(t,this))}getNeedsRedraw(t){return void 0===t&&(t={clearRedrawFlags:!1}),this._getNeedsRedraw(t)}needsUpdate(){return!!this.internalState&&(this.internalState.needsUpdate||this.hasUniformTransition()||this.shouldUpdateState(this._getUpdateParams()))}hasUniformTransition(){var t;return(null==(t=this.internalState)?void 0:t.uniformTransitions.active)||!1}activateViewport(t){if(!this.internalState)return;const e=this.internalState.viewport;this.internalState.viewport=t,e&&Q({oldViewport:e,viewport:t})||(this.setChangeFlags({viewportChanged:!0}),this.isComposite?this.needsUpdate()&&this.setNeedsUpdate():this._update())}invalidateAttribute(t){void 0===t&&(t="all");const e=this.getAttributeManager();e&&("all"===t?e.invalidateAll():e.invalidate(t))}updateAttributes(t){for(const e of this.getModels())this._setModelAttributes(e,t)}_updateAttributes(){const t=this.getAttributeManager();if(!t)return;const e=this.props,n=this.getNumInstances(),i=this.getStartIndices();t.update({data:e.data,numInstances:n,startIndices:i,props:e,transitions:e.transitions,buffers:e.data.attributes,context:this});const o=t.getChangedAttributes({clearChangedFlags:!0});this.updateAttributes(o)}_updateAttributeTransition(){const t=this.getAttributeManager();t&&t.updateTransition()}_updateUniformTransition(){const{uniformTransitions:t}=this.internalState;if(t.active){const e=t.update(),n=Object.create(this.props);for(const t in e)Object.defineProperty(n,t,{value:e[t]});return n}return this.props}calculateInstancePickingColors(t,e){let{numInstances:n}=e;if(t.constant)return;const i=Math.floor(tt.length/3);if(this.internalState.usesPickingColorCache=!0,i<n){n>X&&h.Z.warn("Layer has too many data objects. Picking might not be able to distinguish all objects.")(),tt=M.Z.allocate(tt,n,{size:3,copy:!0,maxCount:Math.max(n,X)});const t=Math.floor(tt.length/3),e=[];for(let n=i;n<t;n++)this.encodePickingColor(n,e),tt[3*n+0]=e[0],tt[3*n+1]=e[1],tt[3*n+2]=e[2]}t.value=tt.subarray(0,3*n)}_setModelAttributes(t,e){const n=this.getAttributeManager(),i=t.userData.excludeAttributes||{},o=n.getShaderAttributes(e,i);t.setAttributes(o)}disablePickingIndex(t){this._disablePickingIndex(t)}_disablePickingIndex(t){const{pickingColors:e,instancePickingColors:n}=this.getAttributeManager().attributes,i=e||n;if(!i)return;const o=i.getVertexOffset(t),r=i.getVertexOffset(t+1);i.buffer.subData({data:new Uint8Array(r-o),offset:o})}restorePickingColors(){const{pickingColors:t,instancePickingColors:e}=this.getAttributeManager().attributes,n=t||e;n&&(this.internalState.usesPickingColorCache&&n.value.buffer!==tt.buffer&&(n.value=tt.subarray(0,n.value.length)),n.updateSubBuffer({startOffset:0}))}_initialize(){(0,x.Z)(!this.internalState),(0,x.Z)(Number.isFinite(this.props.coordinateSystem)),(0,P.Z)("layer.initialize",this);const t=this._getAttributeManager();t&&t.addInstanced({instancePickingColors:{type:5121,size:3,noAlloc:!0,update:this.calculateInstancePickingColors}}),this.internalState=new q({attributeManager:t,layer:this}),this._clearChangeFlags(),this.state={},Object.defineProperty(this.state,"attributeManager",{get:()=>(h.Z.deprecated("layer.state.attributeManager","layer.getAttributeManager()")(),t)}),this.internalState.uniformTransitions=new f(this.context.timeline),this.internalState.onAsyncPropUpdated=this._onAsyncPropUpdated.bind(this),this.internalState.setAsyncProps(this.props),this.initializeState(this.context);for(const e of this.props.extensions)e.initializeState.call(this,this.context,e);this.setChangeFlags({dataChanged:"init",propsChanged:"init",viewportChanged:!0,extensionsChanged:!0}),this._update()}_transferState(t){(0,P.Z)("layer.matched",this,this===t);const{state:e,internalState:n}=t;this!==t&&(this.internalState=n,this.state=e,this.internalState.setAsyncProps(this.props),this._diffProps(this.props,this.internalState.getOldProps()))}_update(){const t=this.needsUpdate();if((0,P.Z)("layer.update",this,t),!t)return;const e=this.props,n=this.context,i=this.internalState,o=n.viewport,r=this._updateUniformTransition();i.propsInTransition=r,n.viewport=i.viewport||o,this.props=r;try{const t=this._getUpdateParams(),e=this.getModels();if(n.gl)this.updateState(t);else try{this.updateState(t)}catch(s){}for(const n of this.props.extensions)n.updateState.call(this,t,n);const i=this.getModels()[0]!==e[0];this._postUpdate(t,i)}finally{n.viewport=o,this.props=e,this._clearChangeFlags(),i.needsUpdate=!1,i.resetOldProps()}}_finalize(){(0,P.Z)("layer.finalize",this),this.finalizeState(this.context);for(const t of this.props.extensions)t.finalizeState.call(this,this.context,t)}_drawLayer(t){let{moduleParameters:e=null,uniforms:n={},parameters:i={}}=t;this._updateAttributeTransition();const o=this.props,r=this.context;this.props=this.internalState.propsInTransition||o;const s=this.props.opacity;n.opacity=Math.pow(s,1/2.2);try{e&&this.setModuleParameters(e);const{getPolygonOffset:t}=this.props,o=t&&t(n)||[0,0];(0,b.dR)(r.gl,{polygonOffset:o}),(0,b.s8)(r.gl,i,(()=>{const t={moduleParameters:e,uniforms:n,parameters:i,context:r};for(const e of this.props.extensions)e.draw.call(this,t,e);this.draw(t)}))}finally{this.props=o}}getChangeFlags(){var t;return null==(t=this.internalState)?void 0:t.changeFlags}setChangeFlags(t){if(!this.internalState)return;const{changeFlags:e}=this.internalState;for(const i in t)if(t[i]){let n=!1;if("dataChanged"===i){const o=t[i],r=e[i];o&&Array.isArray(r)&&(e.dataChanged=Array.isArray(o)?r.concat(o):o,n=!0)}e[i]||(e[i]=t[i],n=!0),n&&(0,P.Z)("layer.changeFlag",this,i,t)}const n=Boolean(e.dataChanged||e.updateTriggersChanged||e.propsChanged||e.extensionsChanged);e.propsOrDataChanged=n,e.somethingChanged=n||e.viewportChanged||e.stateChanged}_clearChangeFlags(){this.internalState.changeFlags={dataChanged:!1,propsChanged:!1,updateTriggersChanged:!1,viewportChanged:!1,stateChanged:!1,extensionsChanged:!1,propsOrDataChanged:!1,somethingChanged:!1}}_diffProps(t,e){const n=(0,m.Yt)(t,e);if(n.updateTriggersChanged)for(const o in n.updateTriggersChanged)n.updateTriggersChanged[o]&&this.invalidateAttribute(o);if(n.transitionsChanged)for(const o in n.transitionsChanged){var i;this.internalState.uniformTransitions.add(o,e[o],t[o],null==(i=t.transitions)?void 0:i[o])}return this.setChangeFlags(n)}validateProps(){(0,m.eQ)(this.props)}updateAutoHighlight(t){this.props.autoHighlight&&!Number.isInteger(this.props.highlightedObjectIndex)&&this._updateAutoHighlight(t)}_updateAutoHighlight(t){const e={pickingSelectedColor:t.picked?t.color:null},{highlightColor:n}=this.props;t.picked&&"function"==typeof n&&(e.pickingHighlightColor=n(t)),this.setModuleParameters(e),this.setNeedsRedraw()}_getAttributeManager(){const t=this.context;return new o.Z(t.gl,{id:this.props.id,stats:t.stats,timeline:t.timeline})}_postUpdate(t,e){const{props:n,oldProps:i}=t;this.setNeedsRedraw(),this._updateAttributes();const{model:o}=this.state;null==o||o.setInstanceCount(this.getNumInstances());const{autoHighlight:r,highlightedObjectIndex:s,highlightColor:a}=n;if(e||i.autoHighlight!==r||i.highlightedObjectIndex!==s||i.highlightColor!==a){const t={};r||(t.pickingSelectedColor=null),Array.isArray(a)&&(t.pickingHighlightColor=a),(e||s!==i.highlightedObjectIndex)&&(t.pickingSelectedColor=Number.isFinite(s)&&s>=0?this.encodePickingColor(s):null),this.setModuleParameters(t)}}_getUpdateParams(){return{props:this.props,oldProps:this.internalState.getOldProps(),context:this.context,changeFlags:this.internalState.changeFlags}}_getNeedsRedraw(t){if(!this.internalState)return!1;let e=!1;e=e||this.internalState.needsRedraw&&this.id;const n=this.getAttributeManager(),i=!!n&&n.getNeedsRedraw(t);if(e=e||i,e)for(const o of this.props.extensions)o.onNeedsRedraw.call(this,o);return this.internalState.needsRedraw=this.internalState.needsRedraw&&!t.clearRedrawFlags,e}_onAsyncPropUpdated(){this._diffProps(this.props,this.internalState.getOldProps()),this.setNeedsUpdate()}}nt.defaultProps=et,nt.layerName="Layer"},65663:(t,e,n)=>{"use strict";n.d(e,{E7:()=>s,Wb:()=>r,bN:()=>c,dt:()=>i,fO:()=>l,fm:()=>o,lY:()=>a});const i={NO_STATE:"Awaiting state",MATCHED:"Matched. State transferred from previous layer",INITIALIZED:"Initialized",AWAITING_GC:"Discarded. Awaiting garbage collection",AWAITING_FINALIZATION:"No longer matched. Awaiting garbage collection",FINALIZED:"Finalized! Awaiting garbage collection"},o=Symbol.for("component"),r=Symbol.for("propTypes"),s=Symbol.for("deprecatedProps"),a=Symbol.for("asyncPropDefaults"),l=Symbol.for("asyncPropOriginal"),c=Symbol.for("asyncPropResolved")},65756:(t,e,n)=>{"use strict";n.d(e,{Yt:()=>r,eQ:()=>o,tg:()=>a});var i=n(65663);function o(t){const e=t[i.Wb];for(const n in e){const i=e[n],{validate:o}=i;if(o&&!o(t[n],i))throw new Error("Invalid prop "+n+": "+t[n])}}function r(t,e){const n=a({newProps:t,oldProps:e,propTypes:t[i.Wb],ignoreProps:{data:null,updateTriggers:null,extensions:null,transitions:null}}),o=function(t,e){if(null===e)return"oldProps is null, initial diff";let n=!1;const{dataComparator:i,_dataDiff:o}=t;i?i(t.data,e.data)||(n="Data comparator detected a change"):t.data!==e.data&&(n="A new data container was supplied");n&&o&&(n=o(t.data,e.data)||n);return n}(t,e);let r=!1;return o||(r=function(t,e){if(null===e)return{all:!0};if("all"in t.updateTriggers){if(d(t,e,"all"))return{all:!0}}const n={};let i=!1;for(const o in t.updateTriggers)if("all"!==o){d(t,e,o)&&(n[o]=!0,i=!0)}return!!i&&n}(t,e)),{dataChanged:o,propsChanged:n,updateTriggersChanged:r,extensionsChanged:c(t,e),transitionsChanged:s(t,e)}}function s(t,e){if(!t.transitions)return!1;const n={},o=t[i.Wb];let r=!1;for(const i in t.transitions){const s=o[i],a=s&&s.type;("number"===a||"color"===a||"array"===a)&&l(t[i],e[i],s)&&(n[i]=!0,r=!0)}return!!r&&n}function a(t){let{newProps:e,oldProps:n,ignoreProps:i={},propTypes:o={},triggerName:r="props"}=t;if(n===e)return!1;if("object"!=typeof e||null===e)return r+" changed shallowly";if("object"!=typeof n||null===n)return r+" changed shallowly";for(const s of Object.keys(e))if(!(s in i)){if(!(s in n))return r+"."+s+" added";const t=l(e[s],n[s],o[s]);if(t)return r+"."+s+" "+t}for(const s of Object.keys(n))if(!(s in i)){if(!(s in e))return r+"."+s+" dropped";if(!Object.hasOwnProperty.call(e,s)){const t=l(e[s],n[s],o[s]);if(t)return r+"."+s+" "+t}}return!1}function l(t,e,n){let i=n&&n.equal;return i&&!i(t,e,n)?"changed deeply":i||(i=t&&e&&t.equals,!i||i.call(t,e))?i||e===t?null:"changed shallowly":"changed deeply"}function c(t,e){if(null===e)return!0;const n=e.extensions,{extensions:i}=t;if(i===n)return!1;if(!n||!i)return!0;if(i.length!==n.length)return!0;for(let o=0;o<i.length;o++)if(!i[o].equals(n[o]))return!0;return!1}function d(t,e,n){let i=t.updateTriggers[n];i=null==i?{}:i;let o=e.updateTriggers[n];o=null==o?{}:o;return a({oldProps:o,newProps:i,triggerName:n})}},5259:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});class i{constructor(t,e){void 0===e&&(e={id:"pass"});const{id:n}=e;this.id=n,this.gl=t,this.props={...e}}setProps(t){Object.assign(this.props,t)}render(t){}cleanup(){}}var o=n(7092),r=n(97581);class s extends i{constructor(){super(...arguments),this._lastRenderIndex=-1}render(t){const e=this.gl;return(0,o.dR)(e,{framebuffer:t.target}),this._drawLayers(t)}_drawLayers(t){const{target:e,moduleParameters:n,viewports:i,views:r,onViewportActive:s,clearStack:a=!0,clearCanvas:l=!0}=t;t.pass=t.pass||"unknown";const c=this.gl;l&&function(t,e){const n=e?e.width:t.drawingBufferWidth,i=e?e.height:t.drawingBufferHeight;(0,o.dR)(t,{viewport:[0,0,n,i]}),t.clear(16640)}(c,e),a&&(this._lastRenderIndex=-1);const d=[];for(const o of i){const i=r&&r[o.id];null==s||s(o);const a=this._getDrawLayerParams(o,t),l=o.subViewports||[o];for(const o of l){const r=this._drawLayersInViewport(c,{target:e,moduleParameters:n,viewport:o,view:i,pass:t.pass,layers:t.layers},a);d.push(r)}}return d}_getDrawLayerParams(t,e,n){let{layers:i,pass:o,isPicking:r=!1,layerFilter:s,cullRect:l,effects:c,moduleParameters:d}=e;void 0===n&&(n=!1);const p=[],u=a(this._lastRenderIndex+1),h={layer:i[0],viewport:t,isPicking:r,renderPass:o,cullRect:l},g={};for(let a=0;a<i.length;a++){const e=i[a],r=this._shouldDrawLayer(e,h,s,g),l={shouldDrawLayer:r};r&&!n&&(l.layerRenderIndex=u(e,r),l.moduleParameters=this._getModuleParameters(e,c,o,d),l.layerParameters=this.getLayerParameters(e,a,t)),p[a]=l}return p}_drawLayersInViewport(t,e,n){let{layers:i,moduleParameters:s,pass:a,target:l,viewport:c,view:d}=e;const p=function(t,e){let{moduleParameters:n,target:i,viewport:r}=e;const s=i&&"default-framebuffer"!==i.id,a=n&&n.devicePixelRatio||(0,o.w)(t),l=s?i.height:t.drawingBufferHeight,c=r;return[c.x*a,l-(c.y+c.height)*a,c.width*a,c.height*a]}(t,{moduleParameters:s,target:l,viewport:c});if(d&&d.props.clear){const e=!0===d.props.clear?{color:!0,depth:!0}:d.props.clear;(0,o.s8)(t,{scissorTest:!0,scissor:p},(()=>(0,r.Z)(t,e)))}const u={totalCount:i.length,visibleCount:0,compositeCount:0,pickableCount:0};(0,o.dR)(t,{viewport:p});for(let o=0;o<i.length;o++){const t=i[o],{shouldDrawLayer:e,layerRenderIndex:r,moduleParameters:s,layerParameters:l}=n[o];if(e&&t.props.pickable&&u.pickableCount++,t.isComposite)u.compositeCount++;else if(e){u.visibleCount++,this._lastRenderIndex=Math.max(this._lastRenderIndex,r),s.viewport=c;try{t._drawLayer({moduleParameters:s,uniforms:{layerIndex:r},parameters:l})}catch(h){t.raiseError(h,"drawing "+t+" to "+a)}}}return u}shouldDrawLayer(t){return!0}getModuleParameters(t,e){return null}getLayerParameters(t,e,n){return t.props.parameters}_shouldDrawLayer(t,e,n,i){if(!(t.props.visible&&this.shouldDrawLayer(t)))return!1;e.layer=t;let o=t.parent;for(;o;){if(!o.props.visible||!o.filterSubLayer(e))return!1;e.layer=o,o=o.parent}if(n){const t=e.layer.id;if(t in i||(i[t]=n(e)),!i[t])return!1}return t.activateViewport(e.viewport),!0}_getModuleParameters(t,e,n,i){var r;const s=Object.assign(Object.create((null==(r=t.internalState)?void 0:r.propsInTransition)||t.props),{autoWrapLongitude:t.wrapLongitude,viewport:t.context.viewport,mousePosition:t.context.mousePosition,pickingActive:0,devicePixelRatio:(0,o.w)(this.gl)});if(e)for(const o of e)Object.assign(s,null==o.getModuleParameters?void 0:o.getModuleParameters(t));return Object.assign(s,this.getModuleParameters(t,e),i)}}function a(t,e){void 0===t&&(t=0),void 0===e&&(e={});const n={},i=(o,r)=>{const s=o.props._offset,l=o.id,c=o.parent&&o.parent.id;let d;if(c&&!(c in e)&&i(o.parent,!1),c in n){const t=n[c]=n[c]||a(e[c],e);d=t(o,r),n[l]=t}else Number.isFinite(s)?(d=s+(e[c]||0),n[l]=null):d=t;return r&&d>=t&&(t=d+1),e[l]=d,d};return i}},71693:(t,e,n)=>{"use strict";n.d(e,{Z:()=>i});const i={inject:{"vs:DECKGL_FILTER_GL_POSITION":"\n    // for picking depth values\n    picking_setPickingAttribute(position.z / position.w);\n  ","vs:DECKGL_FILTER_COLOR":"\n  picking_setPickingColor(geometry.pickingColor);\n  ","fs:DECKGL_FILTER_COLOR":{order:99,injection:"\n  // use highlight color if this fragment belongs to the selected object.\n  color = picking_filterHighlightColor(color);\n\n  // use picking color if rendering to picking FBO.\n  color = picking_filterPickingColor(color);\n    "}},...n(98254).q}},50961:(t,e,n)=>{"use strict";n.d(e,{D:()=>u,T:()=>p});var i=n(43631),o=n(66084),r=n(11199),s=n(98333),a=n(77160),l=n(92797);const c=[0,0,0];function d(t,e,n){void 0===n&&(n=!1);const i=e.projectPosition(t);if(n&&e instanceof r.Z){const[n,o,r=0]=t,s=e.getDistanceScales([n,o]);i[2]=r*s.unitsPerMeter[2]}return i}function p(t,e){let{viewport:n,modelMatrix:o,coordinateSystem:r,coordinateOrigin:a,offsetMode:c}=e,[p,u,h=0]=t;switch(o&&([p,u,h]=s.fF([],[p,u,h,1],o)),r){case i.Df.LNGLAT:return d([p,u,h],n,c);case i.Df.LNGLAT_OFFSETS:return d([p+a[0],u+a[1],h+(a[2]||0)],n,c);case i.Df.METER_OFFSETS:return d((0,l.eG)(a,[p,u,h]),n,c);case i.Df.CARTESIAN:default:return n.isGeospatial?[p+a[0],u+a[1],h+a[2]]:n.projectPosition([p,u,h])}}function u(t,e){const{viewport:n,coordinateSystem:r,coordinateOrigin:s,modelMatrix:l,fromCoordinateSystem:d,fromCoordinateOrigin:u}=function(t){const{viewport:e,modelMatrix:n,coordinateOrigin:o}=t;let{coordinateSystem:r,fromCoordinateSystem:s,fromCoordinateOrigin:a}=t;return r===i.Df.DEFAULT&&(r=e.isGeospatial?i.Df.LNGLAT:i.Df.CARTESIAN),void 0===s&&(s=r),void 0===a&&(a=o),{viewport:e,coordinateSystem:r,coordinateOrigin:o,modelMatrix:n,fromCoordinateSystem:s,fromCoordinateOrigin:a}}(e),{autoOffset:h=!0}=e,{geospatialOrigin:g=c,shaderCoordinateOrigin:f=c,offsetMode:m=!1}=h?(0,o.v)(n,r,s):{},y=p(t,{viewport:n,modelMatrix:l,coordinateSystem:d,coordinateOrigin:u,offsetMode:m});if(m){const t=n.projectPosition(g||f);a.lu(y,y,t)}return y}},73782:(t,e,n)=>{"use strict";n.d(e,{Z:()=>d});var i=n(97678);const o="#define SMOOTH_EDGE_RADIUS 0.5",r={name:"geometry",vs:"\n"+o+"\n\nstruct VertexGeometry {\n  vec4 position;\n  vec3 worldPosition;\n  vec3 worldPositionAlt;\n  vec3 normal;\n  vec2 uv;\n  vec3 pickingColor;\n} geometry = VertexGeometry(\n  vec4(0.0, 0.0, 1.0, 0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec2(0.0),\n  vec3(0.0)\n);\n",fs:"\n"+o+"\n\nstruct FragmentGeometry {\n  vec2 uv;\n} geometry;\n\nfloat smoothedge(float edge, float x) {\n  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);\n}\n"};var s=n(43631);const a=Object.keys(s.Df).map((t=>"const int COORDINATE_SYSTEM_"+t+" = "+s.Df[t]+";")).join("")+"\n"+Object.keys(s.zG).map((t=>"const int PROJECTION_MODE_"+t+" = "+s.zG[t]+";")).join("")+"\n"+Object.keys(s.iI).map((t=>"const int UNIT_"+t.toUpperCase()+" = "+s.iI[t]+";")).join("")+"\n\nuniform int project_uCoordinateSystem;\nuniform int project_uProjectionMode;\nuniform float project_uScale;\nuniform bool project_uWrapLongitude;\nuniform vec3 project_uCommonUnitsPerMeter;\nuniform vec3 project_uCommonUnitsPerWorldUnit;\nuniform vec3 project_uCommonUnitsPerWorldUnit2;\nuniform vec4 project_uCenter;\nuniform mat4 project_uModelMatrix;\nuniform mat4 project_uViewProjectionMatrix;\nuniform vec2 project_uViewportSize;\nuniform float project_uDevicePixelRatio;\nuniform float project_uFocalDistance;\nuniform vec3 project_uCameraPosition;\nuniform vec3 project_uCoordinateOrigin;\nuniform vec3 project_uCommonOrigin;\nuniform bool project_uPseudoMeters;\n\nconst float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / (PI * 2.0);\nconst vec3 ZERO_64_LOW = vec3(0.0);\nconst float EARTH_RADIUS = 6370972.0;\nconst float GLOBE_RADIUS = 256.0;\nfloat project_size_at_latitude(float lat) {\n  float y = clamp(lat, -89.9, 89.9);\n  return 1.0 / cos(radians(y));\n}\n\nfloat project_size() {\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR &&\n    project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT &&\n    project_uPseudoMeters == false) {\n    \n    if (geometry.position.w == 0.0) {\n      return project_size_at_latitude(geometry.worldPosition.y);\n    }\n  \n    float y = geometry.position.y / TILE_SIZE * 2.0 - 1.0;\n    float y2 = y * y;\n    float y4 = y2 * y2;\n    float y6 = y4 * y2;\n    return 1.0 + 4.9348 * y2 + 4.0587 * y4 + 1.5642 * y6;\n  }\n  return 1.0;\n}\n\nfloat project_size_at_latitude(float meters, float lat) {\n  return meters * project_uCommonUnitsPerMeter.z * project_size_at_latitude(lat);\n}\nfloat project_size(float meters) {\n  return meters * project_uCommonUnitsPerMeter.z * project_size();\n}\n\nvec2 project_size(vec2 meters) {\n  return meters * project_uCommonUnitsPerMeter.xy * project_size();\n}\n\nvec3 project_size(vec3 meters) {\n  return meters * project_uCommonUnitsPerMeter * project_size();\n}\n\nvec4 project_size(vec4 meters) {\n  return vec4(meters.xyz * project_uCommonUnitsPerMeter, meters.w);\n}\nmat3 project_get_orientation_matrix(vec3 up) {\n  vec3 uz = normalize(up);\n  vec3 ux = abs(uz.z) == 1.0 ? vec3(1.0, 0.0, 0.0) : normalize(vec3(uz.y, -uz.x, 0));\n  vec3 uy = cross(uz, ux);\n  return mat3(ux, uy, uz);\n}\n\nbool project_needs_rotation(vec3 commonPosition, out mat3 transform) {\n  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {\n    transform = project_get_orientation_matrix(commonPosition);\n    return true;\n  }\n  return false;\n}\nvec3 project_normal(vec3 vector) {\n  vec4 normal_modelspace = project_uModelMatrix * vec4(vector, 0.0);\n  vec3 n = normalize(normal_modelspace.xyz * project_uCommonUnitsPerMeter);\n  mat3 rotation;\n  if (project_needs_rotation(geometry.position.xyz, rotation)) {\n    n = rotation * n;\n  }\n  return n;\n}\n\nvec4 project_offset_(vec4 offset) {\n  float dy = offset.y;\n  vec3 commonUnitsPerWorldUnit = project_uCommonUnitsPerWorldUnit + project_uCommonUnitsPerWorldUnit2 * dy;\n  return vec4(offset.xyz * commonUnitsPerWorldUnit, offset.w);\n}\nvec2 project_mercator_(vec2 lnglat) {\n  float x = lnglat.x;\n  if (project_uWrapLongitude) {\n    x = mod(x + 180., 360.0) - 180.;\n  }\n  float y = clamp(lnglat.y, -89.9, 89.9);\n  return vec2(\n    radians(x) + PI,\n    PI + log(tan_fp32(PI * 0.25 + radians(y) * 0.5))\n  ) * WORLD_SCALE;\n}\n\nvec3 project_globe_(vec3 lnglatz) {\n  float lambda = radians(lnglatz.x);\n  float phi = radians(lnglatz.y);\n  float cosPhi = cos(phi);\n  float D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;\n\n  return vec3(\n    sin(lambda) * cosPhi,\n    -cos(lambda) * cosPhi,\n    sin(phi)\n  ) * D;\n}\nvec4 project_position(vec4 position, vec3 position64Low) {\n  vec4 position_world = project_uModelMatrix * position;\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR) {\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4(\n        project_mercator_(position_world.xy),\n        project_size_at_latitude(position_world.z, position_world.y),\n        position_world.w\n      );\n    }\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {\n      position_world.xyz += project_uCoordinateOrigin;\n    }\n  }\n  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4(\n        project_globe_(position_world.xyz),\n        position_world.w\n      );\n    }\n  }\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      if (abs(position_world.y - project_uCoordinateOrigin.y) > 0.25) {\n        return vec4(\n          project_mercator_(position_world.xy) - project_uCommonOrigin.xy,\n          project_size(position_world.z),\n          position_world.w\n        );\n      }\n    }\n  }\n  if (project_uProjectionMode == PROJECTION_MODE_IDENTITY ||\n    (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&\n    (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\n     project_uCoordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {\n    position_world.xyz -= project_uCoordinateOrigin;\n  }\n  return project_offset_(position_world + project_uModelMatrix * vec4(position64Low, 0.0));\n}\n\nvec4 project_position(vec4 position) {\n  return project_position(position, ZERO_64_LOW);\n}\n\nvec3 project_position(vec3 position, vec3 position64Low) {\n  vec4 projected_position = project_position(vec4(position, 1.0), position64Low);\n  return projected_position.xyz;\n}\n\nvec3 project_position(vec3 position) {\n  vec4 projected_position = project_position(vec4(position, 1.0), ZERO_64_LOW);\n  return projected_position.xyz;\n}\n\nvec2 project_position(vec2 position) {\n  vec4 projected_position = project_position(vec4(position, 0.0, 1.0), ZERO_64_LOW);\n  return projected_position.xy;\n}\n\nvec4 project_common_position_to_clipspace(vec4 position, mat4 viewProjectionMatrix, vec4 center) {\n  return viewProjectionMatrix * position + center;\n}\nvec4 project_common_position_to_clipspace(vec4 position) {\n  return project_common_position_to_clipspace(position, project_uViewProjectionMatrix, project_uCenter);\n}\nvec2 project_pixel_size_to_clipspace(vec2 pixels) {\n  vec2 offset = pixels / project_uViewportSize * project_uDevicePixelRatio * 2.0;\n  return offset * project_uFocalDistance;\n}\n\nfloat project_size_to_pixel(float meters) {\n  return project_size(meters) * project_uScale;\n}\nfloat project_size_to_pixel(float size, int unit) {\n  if (unit == UNIT_METERS) return project_size_to_pixel(size);\n  if (unit == UNIT_COMMON) return size * project_uScale;\n  return size;\n}\nfloat project_pixel_size(float pixels) {\n  return pixels / project_uScale;\n}\nvec2 project_pixel_size(vec2 pixels) {\n  return pixels / project_uScale;\n}\n";var l=n(66084);const c={};const d={name:"project",dependencies:[i.O,r],vs:a,getUniforms:function(t){return void 0===t&&(t=c),"viewport"in t?(0,l.C)(t):{}}}},66084:(t,e,n)=>{"use strict";n.d(e,{C:()=>g,v:()=>h});var i=n(85975),o=n(98333),r=n(43631),s=n(66508);const a=[0,0,0,0],l=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0],c=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],d=[0,0,0],p=[0,0,0],u=(0,s.Z)((function(t){let{viewport:e,devicePixelRatio:n,coordinateSystem:s,coordinateOrigin:p}=t;const{projectionCenter:u,viewProjectionMatrix:g,originCommon:f,cameraPosCommon:m,shaderCoordinateOrigin:y,geospatialOrigin:v}=function(t,e,n){const{viewMatrixUncentered:r,projectionMatrix:s}=t;let{viewMatrix:c,viewProjectionMatrix:d}=t,p=a,u=a,g=t.cameraPosition;const{geospatialOrigin:f,shaderCoordinateOrigin:m,offsetMode:y}=h(t,e,n);y&&(u=t.projectPosition(f||m),g=[g[0]-u[0],g[1]-u[1],g[2]-u[2]],u[3]=1,p=o.fF([],u,d),c=r||c,d=i.Jp([],s,c),d=i.Jp([],d,l));return{viewMatrix:c,viewProjectionMatrix:d,projectionCenter:p,originCommon:u,cameraPosCommon:g,shaderCoordinateOrigin:m,geospatialOrigin:f}}(e,s,p),_=e.getDistanceScales(),w=[e.width*n,e.height*n],P=o.fF([],[0,0,-e.focalDistance,1],e.projectionMatrix)[3]||1,b={project_uCoordinateSystem:s,project_uProjectionMode:e.projectionMode,project_uCoordinateOrigin:y,project_uCommonOrigin:f.slice(0,3),project_uCenter:u,project_uPseudoMeters:Boolean(e._pseudoMeters),project_uViewportSize:w,project_uDevicePixelRatio:n,project_uFocalDistance:P,project_uCommonUnitsPerMeter:_.unitsPerMeter,project_uCommonUnitsPerWorldUnit:_.unitsPerMeter,project_uCommonUnitsPerWorldUnit2:d,project_uScale:e.scale,project_uWrapLongitude:!1,project_uViewProjectionMatrix:g,project_uModelMatrix:c,project_uCameraPosition:m};if(v){const t=e.getDistanceScales(v);switch(s){case r.Df.METER_OFFSETS:b.project_uCommonUnitsPerWorldUnit=t.unitsPerMeter,b.project_uCommonUnitsPerWorldUnit2=t.unitsPerMeter2;break;case r.Df.LNGLAT:case r.Df.LNGLAT_OFFSETS:e._pseudoMeters||(b.project_uCommonUnitsPerMeter=t.unitsPerMeter),b.project_uCommonUnitsPerWorldUnit=t.unitsPerDegree,b.project_uCommonUnitsPerWorldUnit2=t.unitsPerDegree2;break;case r.Df.CARTESIAN:b.project_uCommonUnitsPerWorldUnit=[1,1,t.unitsPerMeter[2]],b.project_uCommonUnitsPerWorldUnit2=[0,0,t.unitsPerMeter2[2]]}}return b}));function h(t,e,n){void 0===n&&(n=p),n.length<3&&(n=[n[0],n[1],0]);let i,o=n,s=!0;switch(i=e===r.Df.LNGLAT_OFFSETS||e===r.Df.METER_OFFSETS?n:t.isGeospatial?[Math.fround(t.longitude),Math.fround(t.latitude),0]:null,t.projectionMode){case r.zG.WEB_MERCATOR:e!==r.Df.LNGLAT&&e!==r.Df.CARTESIAN||(i=[0,0,0],s=!1);break;case r.zG.WEB_MERCATOR_AUTO_OFFSET:e===r.Df.LNGLAT?o=i:e===r.Df.CARTESIAN&&(o=[Math.fround(t.center[0]),Math.fround(t.center[1]),0],i=t.unprojectPosition(o),o[0]-=n[0],o[1]-=n[1],o[2]-=n[2]);break;case r.zG.IDENTITY:o=t.position.map(Math.fround),o[2]=o[2]||0;break;case r.zG.GLOBE:s=!1,i=null;break;default:s=!1}return{geospatialOrigin:i,shaderCoordinateOrigin:o,offsetMode:s}}function g(t){let{viewport:e,devicePixelRatio:n=1,modelMatrix:i=null,coordinateSystem:o=r.Df.DEFAULT,coordinateOrigin:s=p,autoWrapLongitude:a=!1}=t;o===r.Df.DEFAULT&&(o=e.isGeospatial?r.Df.LNGLAT:r.Df.CARTESIAN);const l=u({viewport:e,devicePixelRatio:n,coordinateSystem:o,coordinateOrigin:s});return l.project_uWrapLongitude=a,l.project_uModelMatrix=i||c,l}},18056:(t,e,n)=>{"use strict";n.d(e,{Z:()=>i});const i={name:"project32",dependencies:[n(73782).Z],vs:"\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition\n) {\n  vec3 projectedPosition = project_position(position, position64Low);\n  mat3 rotation;\n  if (project_needs_rotation(projectedPosition, rotation)) {\n    // offset is specified as ENU\n    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe\n    offset = rotation * offset;\n  }\n  commonPosition = vec4(projectedPosition + offset, 1.0);\n  return project_common_position_to_clipspace(commonPosition);\n}\n\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset\n) {\n  vec4 commonPosition;\n  return project_position_to_clipspace(position, position64Low, offset, commonPosition);\n}\n"}},60499:(t,e,n)=>{"use strict";n.d(e,{Z:()=>a});var i=n(4153),o=n(28835);const r=["longitude","latitude","zoom","bearing","pitch"],s=["longitude","latitude","zoom"];class a extends i.Z{constructor(t){void 0===t&&(t={});const e=Array.isArray(t)?t:t.transitionProps,n=Array.isArray(t)?{}:t;n.transitionProps=Array.isArray(e)?{compare:e,required:e}:e||{compare:r,required:s},super(n.transitionProps),this.opts=n}initializeProps(t,e){const n=super.initializeProps(t,e),{makeViewport:i,around:o}=this.opts;if(i&&o){const r=i(t),s=i(e),a=r.unproject(o);n.start.around=o,Object.assign(n.end,{around:s.project(a),aroundPosition:a,width:e.width,height:e.height})}return n}interpolateProps(t,e,n){const i={};for(const r of this._propsToExtract)i[r]=(0,o.t7)(t[r]||0,e[r]||0,n);if(e.aroundPosition&&this.opts.makeViewport){const r=this.opts.makeViewport({...e,...i});Object.assign(i,r.panByPosition(e.aroundPosition,(0,o.t7)(t.around,e.around,n)))}return i}}},4153:(t,e,n)=>{"use strict";n.d(e,{Z:()=>r});var i=n(28835),o=n(13405);class r{constructor(t){const{compare:e,extract:n,required:i}=t;this._propsToCompare=e,this._propsToExtract=n||e,this._requiredProps=i}arePropsEqual(t,e){for(const n of this._propsToCompare)if(!(n in t)||!(n in e)||!(0,i.fS)(t[n],e[n]))return!1;return!0}initializeProps(t,e){const n={},i={};for(const o of this._propsToExtract)(o in t||o in e)&&(n[o]=t[o],i[o]=e[o]);return this._checkRequiredProps(n),this._checkRequiredProps(i),{start:n,end:i}}getDuration(t,e){return e.transitionDuration}_checkRequiredProps(t){this._requiredProps&&this._requiredProps.forEach((e=>{const n=t[e];(0,o.Z)(Number.isFinite(n)||Array.isArray(n),e+" is required for transition")}))}}},62833:(t,e,n)=>{"use strict";n.d(e,{Z:()=>i});class i{constructor(t){this._inProgress=!1,this._handle=null,this._timeline=t,this.time=0,this.settings={duration:0}}get inProgress(){return this._inProgress}start(t){var e,n;this.cancel(),this.settings=t,this._inProgress=!0,null==(e=(n=this.settings).onStart)||e.call(n,this)}end(){var t,e;this._inProgress&&(this._timeline.removeChannel(this._handle),this._handle=null,this._inProgress=!1,null==(t=(e=this.settings).onEnd)||t.call(e,this))}cancel(){var t,e;this._inProgress&&(null==(t=(e=this.settings).onInterrupt)||t.call(e,this),this._timeline.removeChannel(this._handle),this._handle=null,this._inProgress=!1)}update(){var t,e;if(!this._inProgress)return!1;if(null===this._handle){const{_timeline:t,settings:e}=this;this._handle=t.addChannel({delay:t.getTime(),duration:e.duration})}return this.time=this._timeline.getTime(this._handle),this._onUpdate(),null==(t=(e=this.settings).onUpdate)||t.call(e,this),this._timeline.isFinished(this._handle)&&this.end(),!0}_onUpdate(){}}},13405:(t,e,n)=>{"use strict";function i(t,e){if(!t)throw new Error(e||"deck.gl: assertion failed.")}n.d(e,{Z:()=>i})},77607:(t,e,n)=>{"use strict";function i(t,e,n){if(t===e)return!0;if(!t||!e||Array.isArray(t)!==Array.isArray(e)||"object"!=typeof t||"object"!=typeof e)return!1;if(Array.isArray(e)){if(e.length!==t.length)return!1}else for(const i in e)if(!(i in t))return!1;for(const o in t)if(n){if(t[o]!==e[o]&&!i(t[o],e[o],n-1))return!1}else if(t[o]!==e[o])return!1;return!0}n.d(e,{v:()=>i})},32332:(t,e,n)=>{"use strict";function i(t,e){return void 0===e&&(e=()=>!0),Array.isArray(t)?o(t,e,[]):e(t)?[t]:[]}function o(t,e,n){let i=-1;for(;++i<t.length;){const r=t[i];Array.isArray(r)?o(r,e,n):e(r)&&n.push(r)}return n}function r(t){let{target:e,source:n,start:i=0,count:o=1}=t;const r=n.length,s=o*r;let a=0;for(let l=i;a<r;a++)e[l++]=n[a];for(;a<s;)a<s-a?(e.copyWithin(i+a,i,i+a),a*=2):(e.copyWithin(i+a,i,i+s-a),a=s);return e}n.d(e,{k:()=>r,x:()=>i})},37944:(t,e,n)=>{"use strict";n.d(e,{D0:()=>s,jB:()=>r,jr:()=>a});const i=[],o=[];function r(t,e,n){void 0===e&&(e=0),void 0===n&&(n=1/0);let r=i;const s={index:-1,data:t,target:[]};return t?"function"==typeof t[Symbol.iterator]?r=t:t.length>0&&(o.length=t.length,r=o):r=i,(e>0||Number.isFinite(n))&&(r=(Array.isArray(r)?r:Array.from(r)).slice(e,n),s.index=e-1),{iterable:r,objectInfo:s}}function s(t){return t&&t[Symbol.asyncIterator]}function a(t,e){const{size:n,stride:i,offset:o,startIndices:r,nested:s}=e,a=t.BYTES_PER_ELEMENT,l=i?i/a:n,c=o?o/a:0,d=Math.floor((t.length-c)/l);return(e,i)=>{let{index:o,target:a}=i;if(!r){const e=o*l+c;for(let i=0;i<n;i++)a[i]=t[e+i];return a}const p=r[o],u=r[o+1]||d;let h;if(s){h=new Array(u-p);for(let e=p;e<u;e++){const i=e*l+c;a=new Array(n);for(let e=0;e<n;e++)a[e]=t[i+e];h[e-p]=a}}else if(l===n)h=t.subarray(p*n+c,u*n+c);else{h=new t.constructor((u-p)*n);let e=0;for(let i=p;i<u;i++){const o=i*l+c;for(let i=0;i<n;i++)h[e++]=t[o+i]}}return h}}},89745:(t,e,n)=>{"use strict";n.d(e,{Z:()=>i});const i=new(n(91916).Z)({id:"deck"})},4563:(t,e,n)=>{"use strict";n.d(e,{Du:()=>l,Ks:()=>p,TK:()=>h,Xt:()=>a,bS:()=>r,wQ:()=>s});var i=n(67258),o=n(59122);function r(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}function s(t,e){const n=t%e;return n<0?e+n:n}function a(t){return[t[12],t[13],t[14]]}function l(t){return{left:d(t[3]+t[0],t[7]+t[4],t[11]+t[8],t[15]+t[12]),right:d(t[3]-t[0],t[7]-t[4],t[11]-t[8],t[15]-t[12]),bottom:d(t[3]+t[1],t[7]+t[5],t[11]+t[9],t[15]+t[13]),top:d(t[3]-t[1],t[7]-t[5],t[11]-t[9],t[15]-t[13]),near:d(t[3]+t[2],t[7]+t[6],t[11]+t[10],t[15]+t[14]),far:d(t[3]-t[2],t[7]-t[6],t[11]-t[10],t[15]-t[14])}}const c=new o.Z;function d(t,e,n,i){c.set(t,e,n);const r=c.len();return{distance:i/r,normal:new o.Z(-t/r,-e/r,-n/r)}}function p(t){return t-Math.fround(t)}let u;function h(t,e){const{size:n=1,startIndex:o=0}=e,r=void 0!==e.endIndex?e.endIndex:t.length,s=(r-o)/n;u=i.Z.allocate(u,s,{type:Float32Array,size:2*n});let a=o,l=0;for(;a<r;){for(let e=0;e<n;e++){const i=t[a++];u[l+e]=i,u[l+e+n]=p(i)}l+=2*n}return u.subarray(0,s*n*2)}},66508:(t,e,n)=>{"use strict";function i(t,e){if(t===e)return!0;if(Array.isArray(t)){const n=t.length;if(!e||e.length!==n)return!1;for(let i=0;i<n;i++)if(t[i]!==e[i])return!1;return!0}return!1}function o(t){let e,n={};return o=>{for(const r in o)if(!i(o[r],n[r])){e=t(o),n=o;break}return e}}n.d(e,{Z:()=>o})},16862:(t,e,n)=>{"use strict";function i(t,e){if(!e)return t;const n={...t,...e};if("defines"in e&&(n.defines={...t.defines,...e.defines}),"modules"in e&&(n.modules=(t.modules||[]).concat(e.modules),e.modules.some((t=>"project64"===t.name)))){const t=n.modules.findIndex((t=>"project32"===t.name));t>=0&&n.modules.splice(t,1)}if("inject"in e)if(t.inject){const i={...t.inject};for(const t in e.inject)i[t]=(i[t]||"")+e.inject[t];n.inject=i}else n.inject=e.inject;return n}n.d(e,{l:()=>i})},68318:(t,e,n)=>{"use strict";n.d(e,{Z:()=>a});var i=n(37944),o=n(67258),r=n(13405),s=n(80241);class a{constructor(t){this.indexStarts=[0],this.vertexStarts=[0],this.vertexCount=0,this.instanceCount=0;const{attributes:e={}}=t;this.typedArrayManager=o.Z,this.attributes={},this._attributeDefs=e,this.opts=t,this.updateGeometry(t)}updateGeometry(t){Object.assign(this.opts,t);const{data:e,buffers:n={},getGeometry:i,geometryBuffer:o,positionFormat:s,dataChanged:a,normalize:l=!0}=this.opts;if(this.data=e,this.getGeometry=i,this.positionSize=o&&o.size||("XY"===s?2:3),this.buffers=n,this.normalize=l,o&&((0,r.Z)(e.startIndices),this.getGeometry=this.getGeometryFromBuffer(o),l||(n.positions=o)),this.geometryBuffer=n.positions,Array.isArray(a))for(const r of a)this._rebuildGeometry(r);else this._rebuildGeometry()}updatePartialGeometry(t){let{startRow:e,endRow:n}=t;this._rebuildGeometry({startRow:e,endRow:n})}getGeometryFromBuffer(t){const e=t.value||t;return ArrayBuffer.isView(e)?(0,i.jr)(e,{size:this.positionSize,offset:t.offset,stride:t.stride,startIndices:this.data.startIndices}):null}_allocate(t,e){const{attributes:n,buffers:i,_attributeDefs:o,typedArrayManager:r}=this;for(const s in o)if(s in i)r.release(n[s]),n[s]=null;else{const i=o[s];i.copy=e,n[s]=r.allocate(n[s],t,i)}}_forEachGeometry(t,e,n){const{data:o,getGeometry:r}=this,{iterable:s,objectInfo:a}=(0,i.jB)(o,e,n);for(const i of s){a.index++;t(r?r(i,a):null,a.index)}}_rebuildGeometry(t){if(!this.data)return;let{indexStarts:e,vertexStarts:n,instanceCount:i}=this;const{data:o,geometryBuffer:r}=this,{startRow:a=0,endRow:l=1/0}=t||{},c={};if(t||(e=[0],n=[0]),this.normalize||!r)this._forEachGeometry(((t,e)=>{const i=t&&this.normalizeGeometry(t);c[e]=i,n[e+1]=n[e]+(i?this.getGeometrySize(i):0)}),a,l),i=n[n.length-1];else if(n=o.startIndices,i=n[o.length]||0,ArrayBuffer.isView(r))i=i||r.length/this.positionSize;else if(r instanceof s.Z){const t=r.accessor.stride||4*this.positionSize;i=i||r.byteLength/t}else if(r.buffer){const t=r.stride||4*this.positionSize;i=i||r.buffer.byteLength/t}else if(r.value){const t=r.value,e=r.stride/t.BYTES_PER_ELEMENT||this.positionSize;i=i||t.length/e}this._allocate(i,Boolean(t)),this.indexStarts=e,this.vertexStarts=n,this.instanceCount=i;const d={};this._forEachGeometry(((t,o)=>{const r=c[o]||t;d.vertexStart=n[o],d.indexStart=e[o];const s=o<n.length-1?n[o+1]:i;d.geometrySize=s-n[o],d.geometryIndex=o,this.updateGeometryAttributes(r,d)}),a,l),this.vertexCount=e[e.length-1]}}},67258:(t,e,n)=>{"use strict";n.d(e,{Z:()=>i});const i=new class{constructor(t){void 0===t&&(t={}),this._pool=[],this.opts={overAlloc:2,poolSize:100},this.setOptions(t)}setOptions(t){Object.assign(this.opts,t)}allocate(t,e,n){let{size:i=1,type:o,padding:r=0,copy:s=!1,initialize:a=!1,maxCount:l}=n;const c=o||t&&t.constructor||Float32Array,d=e*i+r;if(ArrayBuffer.isView(t)){if(d<=t.length)return t;if(d*t.BYTES_PER_ELEMENT<=t.buffer.byteLength)return new c(t.buffer,0,d)}let p=1/0;l&&(p=l*i+r);const u=this._allocate(c,d,a,p);return t&&s?u.set(t):a||u.fill(0,0,4),this._release(t),u}release(t){this._release(t)}_allocate(t,e,n,i){let o=Math.max(Math.ceil(e*this.opts.overAlloc),1);o>i&&(o=i);const r=this._pool,s=t.BYTES_PER_ELEMENT*o,a=r.findIndex((t=>t.byteLength>=s));if(a>=0){const e=new t(r.splice(a,1)[0],0,o);return n&&e.fill(0),e}return new t(o)}_release(t){if(!ArrayBuffer.isView(t))return;const e=this._pool,{buffer:n}=t,{byteLength:i}=n,o=e.findIndex((t=>t.byteLength>=i));o<0?e.push(n):(o>0||e.length<this.opts.poolSize)&&e.splice(o,0,n),e.length>this.opts.poolSize&&e.shift()}}},48332:(t,e,n)=>{"use strict";n.d(e,{Z:()=>f});var i=n(89745),o=n(4563),r=n(76450),s=n(28835),a=n(59122),l=n(85975),c=n(92797),d=n(43631);const p=Math.PI/180,u=(0,o.bS)(),h=[0,0,0],g={unitsPerMeter:[1,1,1],metersPerUnit:[1,1,1]};class f{constructor(t){void 0===t&&(t={}),this._frustumPlanes={},this.id=t.id||this.constructor.displayName||"viewport",this.x=t.x||0,this.y=t.y||0,this.width=t.width||1,this.height=t.height||1,this.zoom=t.zoom||0,this.padding=t.padding,this.distanceScales=t.distanceScales||g,this.focalDistance=t.focalDistance||1,this.position=t.position||h,this.modelMatrix=t.modelMatrix||null;const{longitude:e,latitude:n}=t;this.isGeospatial=Number.isFinite(n)&&Number.isFinite(e),this._initProps(t),this._initMatrices(t),this.equals=this.equals.bind(this),this.project=this.project.bind(this),this.unproject=this.unproject.bind(this),this.projectPosition=this.projectPosition.bind(this),this.unprojectPosition=this.unprojectPosition.bind(this),this.projectFlat=this.projectFlat.bind(this),this.unprojectFlat=this.unprojectFlat.bind(this)}get subViewports(){return null}get metersPerPixel(){return this.distanceScales.metersPerUnit[2]/this.scale}get projectionMode(){return this.isGeospatial?this.zoom<12?d.zG.WEB_MERCATOR:d.zG.WEB_MERCATOR_AUTO_OFFSET:d.zG.IDENTITY}equals(t){return t instanceof f&&(this===t||t.width===this.width&&t.height===this.height&&t.scale===this.scale&&(0,s.fS)(t.projectionMatrix,this.projectionMatrix)&&(0,s.fS)(t.viewMatrix,this.viewMatrix))}project(t,e){let{topLeft:n=!0}=void 0===e?{}:e;const i=this.projectPosition(t),o=(0,c.aW)(i,this.pixelProjectionMatrix),[r,s]=o,a=n?s:this.height-s;return 2===t.length?[r,a]:[r,a,o[2]]}unproject(t,e){let{topLeft:n=!0,targetZ:i}=void 0===e?{}:e;const[o,r,s]=t,a=n?r:this.height-r,l=i&&i*this.distanceScales.unitsPerMeter[2],d=(0,c.CT)([o,a,s],this.pixelUnprojectionMatrix,l),[p,u,h]=this.unprojectPosition(d);return Number.isFinite(s)?[p,u,h]:Number.isFinite(i)?[p,u,i]:[p,u]}projectPosition(t){const[e,n]=this.projectFlat(t);return[e,n,(t[2]||0)*this.distanceScales.unitsPerMeter[2]]}unprojectPosition(t){const[e,n]=this.unprojectFlat(t);return[e,n,(t[2]||0)*this.distanceScales.metersPerUnit[2]]}projectFlat(t){if(this.isGeospatial){const e=(0,c.w5)(t);return e[1]=(0,s.uZ)(e[1],-318,830),e}return t}unprojectFlat(t){return this.isGeospatial?(0,c.es)(t):t}getBounds(t){void 0===t&&(t={});const e={targetZ:t.z||0},n=this.unproject([0,0],e),i=this.unproject([this.width,0],e),o=this.unproject([0,this.height],e),r=this.unproject([this.width,this.height],e);return[Math.min(n[0],i[0],o[0],r[0]),Math.min(n[1],i[1],o[1],r[1]),Math.max(n[0],i[0],o[0],r[0]),Math.max(n[1],i[1],o[1],r[1])]}getDistanceScales(t){return t?(0,c.ro)({longitude:t[0],latitude:t[1],highPrecision:!0}):this.distanceScales}containsPixel(t){let{x:e,y:n,width:i=1,height:o=1}=t;return e<this.x+this.width&&this.x<e+i&&n<this.y+this.height&&this.y<n+o}getFrustumPlanes(){return this._frustumPlanes.near||Object.assign(this._frustumPlanes,(0,o.Du)(this.viewProjectionMatrix)),this._frustumPlanes}panByPosition(t,e){return null}_initProps(t){const e=t.longitude,n=t.latitude;this.isGeospatial&&(Number.isFinite(t.zoom)||(this.zoom=(0,c.Bf)({latitude:n})+Math.log2(this.focalDistance)),this.distanceScales=t.distanceScales||(0,c.ro)({latitude:n,longitude:e}));const i=Math.pow(2,this.zoom);this.scale=i;const{position:o,modelMatrix:s}=t;let l=h;if(o&&(l=s?new r.Z(s).transformAsVector(o,[]):o),this.isGeospatial){const t=this.projectPosition([e,n,0]);this.center=new a.Z(l).scale(this.distanceScales.unitsPerMeter).add(t)}else this.center=this.projectPosition(l)}_initMatrices(t){const{viewMatrix:e=u,projectionMatrix:n=null,orthographic:c=!1,fovyRadians:d,fovy:h=75,near:g=.1,far:f=1e3,padding:m=null,focalDistance:y=1}=t;this.viewMatrixUncentered=e,this.viewMatrix=(new r.Z).multiplyRight(e).translate(new a.Z(this.center).negate()),this.projectionMatrix=n||function(t){let{width:e,height:n,orthographic:i,fovyRadians:o,focalDistance:a,padding:l,near:c,far:d}=t;const p=e/n,u=i?(new r.Z).orthographic({fovy:o,aspect:p,focalDistance:a,near:c,far:d}):(new r.Z).perspective({fovy:o,aspect:p,near:c,far:d});if(l){const{left:t=0,right:i=0,top:o=0,bottom:r=0}=l,a=(0,s.uZ)((t+e-i)/2,0,e)-e/2,c=(0,s.uZ)((o+n-r)/2,0,n)-n/2;u[8]-=2*a/e,u[9]+=2*c/n}return u}({width:this.width,height:this.height,orthographic:c,fovyRadians:d||h*p,focalDistance:y,padding:m,near:g,far:f});const v=(0,o.bS)();l.Jp(v,v,this.projectionMatrix),l.Jp(v,v,this.viewMatrix),this.viewProjectionMatrix=v,this.viewMatrixInverse=l.U_([],this.viewMatrix)||this.viewMatrix,this.cameraPosition=(0,o.Xt)(this.viewMatrixInverse);const _=(0,o.bS)(),w=(0,o.bS)();l.bA(_,_,[this.width/2,-this.height/2,1]),l.Iu(_,_,[1,-1,0]),l.Jp(w,_,this.viewProjectionMatrix),this.pixelProjectionMatrix=w,this.pixelUnprojectionMatrix=l.U_((0,o.bS)(),this.pixelProjectionMatrix),this.pixelUnprojectionMatrix||i.Z.warn("Pixel project matrix not invertible")()}}f.displayName="Viewport"},11199:(t,e,n)=>{"use strict";n.d(e,{Z:()=>l});var i=n(48332),o=n(92797),r=n(31437),s=n(28835),a=n(76450);class l extends i.Z{constructor(t){void 0===t&&(t={});const{latitude:e=0,longitude:n=0,zoom:i=0,pitch:r=0,bearing:l=0,nearZMultiplier:c=.1,farZMultiplier:d=1.01,orthographic:p=!1,projectionMatrix:u,repeat:h=!1,worldOffset:g=0,position:f,padding:m,legacyMeterSizes:y=!1}=t;let{width:v,height:_,altitude:w=1.5}=t;const P=Math.pow(2,i);let b;v=v||1,_=_||1;let x=null;if(u)w=u[5]/2,b=(0,o.Lu)(w);else{let n;if(t.fovy?(b=t.fovy,w=(0,o.sj)(b)):b=(0,o.Lu)(w),m){const{top:t=0,bottom:e=0}=m;n=[0,(0,s.uZ)((t+_-e)/2,0,_)-_/2]}x=(0,o.wl)({width:v,height:_,scale:P,center:f&&[0,0,f[2]*(0,o.NC)(e)],offset:n,pitch:r,fovy:b,nearZMultiplier:c,farZMultiplier:d})}let C=(0,o.lf)({height:_,pitch:r,bearing:l,scale:P,altitude:w});if(g){C=(new a.Z).translate([512*g,0,0]).multiplyLeft(C)}super({...t,width:v,height:_,viewMatrix:C,longitude:n,latitude:e,zoom:i,...x,fovy:b,focalDistance:w}),this.latitude=e,this.longitude=n,this.zoom=i,this.pitch=r,this.bearing=l,this.altitude=w,this.fovy=b,this.orthographic=p,this._subViewports=h?[]:null,this._pseudoMeters=y,Object.freeze(this)}get subViewports(){if(this._subViewports&&!this._subViewports.length){const t=this.getBounds(),e=Math.floor((t[0]+180)/360),n=Math.ceil((t[2]-180)/360);for(let i=e;i<=n;i++){const t=i?new l({...this,worldOffset:i}):this;this._subViewports.push(t)}}return this._subViewports}projectPosition(t){if(this._pseudoMeters)return super.projectPosition(t);const[e,n]=this.projectFlat(t);return[e,n,(t[2]||0)*(0,o.NC)(t[1])]}unprojectPosition(t){if(this._pseudoMeters)return super.unprojectPosition(t);const[e,n]=this.unprojectFlat(t);return[e,n,(t[2]||0)/(0,o.NC)(n)]}addMetersToLngLat(t,e){return(0,o.eG)(t,e)}panByPosition(t,e){const n=(0,o.CT)(e,this.pixelUnprojectionMatrix),i=this.projectFlat(t),s=r.IH([],i,r.tk([],n)),a=r.IH([],this.center,s),[l,c]=this.unprojectFlat(a);return{longitude:l,latitude:c}}getBounds(t){void 0===t&&(t={});const e=(0,o.zX)(this,t.z||0);return[Math.min(e[0][0],e[1][0],e[2][0],e[3][0]),Math.min(e[0][1],e[1][1],e[2][1],e[3][1]),Math.max(e[0][0],e[1][0],e[2][0],e[3][0]),Math.max(e[0][1],e[1][1],e[2][1],e[3][1])]}fitBounds(t,e){void 0===e&&(e={});const{width:n,height:i}=this,{longitude:r,latitude:s,zoom:a}=(0,o.Xg)({width:n,height:i,bounds:t,...e});return new l({width:n,height:i,longitude:r,latitude:s,zoom:a})}}l.displayName="WebMercatorViewport"},6362:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var i=n(45213),o=n(11199),r=n(26810);class s extends i.Z{get ViewportType(){return o.Z}get ControllerType(){return r.Z}}s.displayName="MapView"},45213:(t,e,n)=>{"use strict";n.d(e,{Z:()=>c});var i=n(48332);const o=/([0-9]+\.?[0-9]*)(%|px)/;function r(t){switch(typeof t){case"number":return{position:t,relative:!1};case"string":const e=o.exec(t);if(e&&e.length>=3){const t="%"===e[2],n=parseFloat(e[1]);return{position:t?n/100:n,relative:t}}default:throw new Error("Could not parse position string "+t)}}function s(t,e){return t.relative?Math.round(t.position*e):t.position}var a=n(77607),l=n(13405);class c{constructor(t){const{id:e,x:n=0,y:o=0,width:s="100%",height:a="100%",padding:c=null,viewportInstance:d}=t||{};(0,l.Z)(!d||d instanceof i.Z),this.viewportInstance=d,this.id=e||this.constructor.displayName||"view",this.props={...t,id:this.id},this._x=r(n),this._y=r(o),this._width=r(s),this._height=r(a),this._padding=c&&{left:r(c.left||0),right:r(c.right||0),top:r(c.top||0),bottom:r(c.bottom||0)},this.equals=this.equals.bind(this),Object.seal(this)}equals(t){return this===t||(this.viewportInstance?!!t.viewportInstance&&this.viewportInstance.equals(t.viewportInstance):this.ViewportType===t.ViewportType&&(0,a.v)(this.props,t.props,2))}makeViewport(t){let{width:e,height:n,viewState:i}=t;if(this.viewportInstance)return this.viewportInstance;i=this.filterViewState(i);const o=this.getDimensions({width:e,height:n});return new this.ViewportType({...i,...this.props,...o})}getViewStateId(){const{viewState:t}=this.props;return"string"==typeof t?t:(null==t?void 0:t.id)||this.id}filterViewState(t){if(this.props.viewState&&"object"==typeof this.props.viewState){if(!this.props.viewState.id)return this.props.viewState;const e={...t};for(const t in this.props.viewState)"id"!==t&&(e[t]=this.props.viewState[t]);return e}return t}getDimensions(t){let{width:e,height:n}=t;const i={x:s(this._x,e),y:s(this._y,n),width:s(this._width,e),height:s(this._height,n)};return this._padding&&(i.padding={left:s(this._padding.left,e),top:s(this._padding.top,n),right:s(this._padding.right,e),bottom:s(this._padding.bottom,n)}),i}get controller(){const t=this.props.controller;return t?!0===t?{type:this.ControllerType}:"function"==typeof t?{type:t}:{type:this.ControllerType,...t}:null}}},62253:(t,e,n)=>{"use strict";n.d(e,{Z:()=>p});var i=n(47251),o=n(18056),r=n(71693),s=n(43631),a=n(95321),l=n(15804);const c=[0,0,0,255],d={getSourcePosition:{type:"accessor",value:t=>t.sourcePosition},getTargetPosition:{type:"accessor",value:t=>t.targetPosition},getSourceColor:{type:"accessor",value:c},getTargetColor:{type:"accessor",value:c},getWidth:{type:"accessor",value:1},getHeight:{type:"accessor",value:1},getTilt:{type:"accessor",value:0},greatCircle:!1,widthUnits:"pixels",widthScale:{type:"number",value:1,min:0},widthMinPixels:{type:"number",value:0,min:0},widthMaxPixels:{type:"number",value:Number.MAX_SAFE_INTEGER,min:0}};class p extends i.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME arc-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec4 instanceSourceColors;\nattribute vec4 instanceTargetColors;\nattribute vec3 instanceSourcePositions;\nattribute vec3 instanceSourcePositions64Low;\nattribute vec3 instanceTargetPositions;\nattribute vec3 instanceTargetPositions64Low;\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\nattribute float instanceHeights;\nattribute float instanceTilts;\n\nuniform bool greatCircle;\nuniform bool useShortestPath;\nuniform float numSegments;\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform int widthUnits;\n\nvarying vec4 vColor;\nvarying vec2 uv;\nvarying float isValid;\n\nfloat paraboloid(float distance, float sourceZ, float targetZ, float ratio) {\n\n  float deltaZ = targetZ - sourceZ;\n  float dh = distance * instanceHeights;\n  if (dh == 0.0) {\n    return sourceZ + deltaZ * ratio;\n  }\n  float unitZ = deltaZ / dh;\n  float p2 = unitZ * unitZ + 1.0;\n  float dir = step(deltaZ, 0.0);\n  float z0 = mix(sourceZ, targetZ, dir);\n  float r = mix(ratio, 1.0 - ratio, dir);\n  return sqrt(r * (p2 - r)) * dh + z0;\n}\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  return dir_screenspace * offset_direction * width / 2.0;\n}\n\nfloat getSegmentRatio(float index) {\n  return smoothstep(0.0, 1.0, index / (numSegments - 1.0));\n}\n\nvec3 interpolateFlat(vec3 source, vec3 target, float segmentRatio) {\n  float distance = length(source.xy - target.xy);\n  float z = paraboloid(distance, source.z, target.z, segmentRatio);\n\n  float tiltAngle = radians(instanceTilts);\n  vec2 tiltDirection = normalize(target.xy - source.xy);\n  vec2 tilt = vec2(-tiltDirection.y, tiltDirection.x) * z * sin(tiltAngle);\n\n  return vec3(\n    mix(source.xy, target.xy, segmentRatio) + tilt,\n    z * cos(tiltAngle)\n  );\n}\nfloat getAngularDist (vec2 source, vec2 target) {\n  vec2 sourceRadians = radians(source);\n  vec2 targetRadians = radians(target);\n  vec2 sin_half_delta = sin((sourceRadians - targetRadians) / 2.0);\n  vec2 shd_sq = sin_half_delta * sin_half_delta;\n\n  float a = shd_sq.y + cos(sourceRadians.y) * cos(targetRadians.y) * shd_sq.x;\n  return 2.0 * asin(sqrt(a));\n}\n\nvec3 interpolateGreatCircle(vec3 source, vec3 target, vec3 source3D, vec3 target3D, float angularDist, float t) {\n  vec2 lngLat;\n  if(abs(angularDist - PI) < 0.001) {\n    lngLat = (1.0 - t) * source.xy + t * target.xy;\n  } else {\n    float a = sin((1.0 - t) * angularDist);\n    float b = sin(t * angularDist);\n    vec3 p = source3D.yxz * a + target3D.yxz * b;\n    lngLat = degrees(vec2(atan(p.y, -p.x), atan(p.z, length(p.xy))));\n  }\n\n  float z = paraboloid(angularDist * EARTH_RADIUS, source.z, target.z, t);\n\n  return vec3(lngLat, z);\n}\n\nvoid main(void) {\n  geometry.worldPosition = instanceSourcePositions;\n  geometry.worldPositionAlt = instanceTargetPositions;\n\n  float segmentIndex = positions.x;\n  float segmentRatio = getSegmentRatio(segmentIndex);\n  float prevSegmentRatio = getSegmentRatio(max(0.0, segmentIndex - 1.0));\n  float nextSegmentRatio = getSegmentRatio(min(numSegments - 1.0, segmentIndex + 1.0));\n  float indexDir = mix(-1.0, 1.0, step(segmentIndex, 0.0));\n  isValid = 1.0;\n\n  uv = vec2(segmentRatio, positions.y);\n  geometry.uv = uv;\n  geometry.pickingColor = instancePickingColors;\n\n  vec4 curr;\n  vec4 next;\n  vec3 source;\n  vec3 target;\n\n  if ((greatCircle || project_uProjectionMode == PROJECTION_MODE_GLOBE) && project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n    source = project_globe_(vec3(instanceSourcePositions.xy, 0.0));\n    target = project_globe_(vec3(instanceTargetPositions.xy, 0.0));\n    float angularDist = getAngularDist(instanceSourcePositions.xy, instanceTargetPositions.xy);\n\n    vec3 prevPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, prevSegmentRatio);\n    vec3 currPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, segmentRatio);\n    vec3 nextPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, nextSegmentRatio);\n\n    if (abs(currPos.x - prevPos.x) > 180.0) {\n      indexDir = -1.0;\n      isValid = 0.0;\n    } else if (abs(currPos.x - nextPos.x) > 180.0) {\n      indexDir = 1.0;\n      isValid = 0.0;\n    }\n    nextPos = indexDir < 0.0 ? prevPos : nextPos;\n    nextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\n\n    if (isValid == 0.0) {\n      nextPos.x += nextPos.x > 0.0 ? -360.0 : 360.0;\n      float t = ((currPos.x > 0.0 ? 180.0 : -180.0) - currPos.x) / (nextPos.x - currPos.x);\n      currPos = mix(currPos, nextPos, t);\n      segmentRatio = mix(segmentRatio, nextSegmentRatio, t);\n    }\n\n    vec3 currPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, segmentRatio);\n    vec3 nextPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, nextSegmentRatio);\n  \n    curr = project_position_to_clipspace(currPos, currPos64Low, vec3(0.0), geometry.position);\n    next = project_position_to_clipspace(nextPos, nextPos64Low, vec3(0.0));\n  \n  } else {\n    vec3 source_world = instanceSourcePositions;\n    vec3 target_world = instanceTargetPositions;\n    if (useShortestPath) {\n      source_world.x = mod(source_world.x + 180., 360.0) - 180.;\n      target_world.x = mod(target_world.x + 180., 360.0) - 180.;\n\n      float deltaLng = target_world.x - source_world.x;\n      if (deltaLng > 180.) target_world.x -= 360.;\n      if (deltaLng < -180.) source_world.x -= 360.;\n    }\n    source = project_position(source_world, instanceSourcePositions64Low);\n    target = project_position(target_world, instanceTargetPositions64Low);\n    float antiMeridianX = 0.0;\n\n    if (useShortestPath) {\n      if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\n        antiMeridianX = -(project_uCoordinateOrigin.x + 180.) / 360. * TILE_SIZE;\n      }\n      float thresholdRatio = (antiMeridianX - source.x) / (target.x - source.x);\n\n      if (prevSegmentRatio <= thresholdRatio && nextSegmentRatio > thresholdRatio) {\n        isValid = 0.0;\n        indexDir = sign(segmentRatio - thresholdRatio);\n        segmentRatio = thresholdRatio;\n      }\n    }\n\n    nextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\n    vec3 currPos = interpolateFlat(source, target, segmentRatio);\n    vec3 nextPos = interpolateFlat(source, target, nextSegmentRatio);\n\n    if (useShortestPath) {\n      if (nextPos.x < antiMeridianX) {\n        currPos.x += TILE_SIZE;\n        nextPos.x += TILE_SIZE;\n      }\n    }\n\n    curr = project_common_position_to_clipspace(vec4(currPos, 1.0));\n    next = project_common_position_to_clipspace(vec4(nextPos, 1.0));\n    geometry.position = vec4(currPos, 1.0);\n  }\n  float widthPixels = clamp(\n    project_size_to_pixel(instanceWidths * widthScale, widthUnits),\n    widthMinPixels, widthMaxPixels\n  );\n  vec3 offset = vec3(\n    getExtrusionOffset((next.xy - curr.xy) * indexDir, positions.y, widthPixels),\n    0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  DECKGL_FILTER_GL_POSITION(curr, geometry);\n  gl_Position = curr + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\n\n  vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio);\n  vColor = vec4(color.rgb, color.a * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#define SHADER_NAME arc-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 uv;\nvarying float isValid;\n\nvoid main(void) {\n  if (isValid == 0.0) {\n    discard;\n  }\n\n  gl_FragColor = vColor;\n  geometry.uv = uv;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[o.Z,r.Z]})}get wrapLongitude(){return!1}initializeState(){this.getAttributeManager().addInstanced({instanceSourcePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getSourcePosition"},instanceTargetPositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getTargetPosition"},instanceSourceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getSourceColor",defaultValue:c},instanceTargetColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getTargetColor",defaultValue:c},instanceWidths:{size:1,transition:!0,accessor:"getWidth",defaultValue:1},instanceHeights:{size:1,transition:!0,accessor:"getHeight",defaultValue:1},instanceTilts:{size:1,transition:!0,accessor:"getTilt",defaultValue:0}})}updateState(t){if(super.updateState(t),t.changeFlags.extensionsChanged){var e;const{gl:t}=this.context;null==(e=this.state.model)||e.delete(),this.state.model=this._getModel(t),this.getAttributeManager().invalidateAll()}}draw(t){let{uniforms:e}=t;const{widthUnits:n,widthScale:i,widthMinPixels:o,widthMaxPixels:r,greatCircle:a,wrapLongitude:l}=this.props;this.state.model.setUniforms(e).setUniforms({greatCircle:a,widthUnits:s.iI[n],widthScale:i,widthMinPixels:o,widthMaxPixels:r,useShortestPath:l}).draw()}_getModel(t){let e=[];for(let i=0;i<50;i++)e=e.concat([i,1,0,i,-1,0]);const n=new a.Z(t,{...this.getShaders(),id:this.props.id,geometry:new l.Z({drawMode:5,attributes:{positions:new Float32Array(e)}}),isInstanced:!0});return n.setUniforms({numSegments:50}),n}}p.layerName="ArcLayer",p.defaultProps=d},99147:(t,e,n)=>{"use strict";n.d(e,{Z:()=>m});var i=n(43631),o=n(47251),r=n(18056),s=n(71693),a=n(95321),l=n(15804),c=n(92797),d=n(28835);const p=new Uint16Array([0,2,1,0,3,2]),u=new Float32Array([0,1,0,0,1,0,1,1]);function h(t,e){if(!e)return function(t){const e=new Float64Array(12);for(let n=0;n<t.length;n++)e[3*n+0]=t[n][0],e[3*n+1]=t[n][1],e[3*n+2]=t[n][2]||0;return{vertexCount:6,positions:e,indices:p,texCoords:u}}(t);const n=Math.max(Math.abs(t[0][0]-t[3][0]),Math.abs(t[1][0]-t[2][0])),i=Math.max(Math.abs(t[1][1]-t[0][1]),Math.abs(t[2][1]-t[3][1])),o=Math.ceil(n/e)+1,r=Math.ceil(i/e)+1,s=(o-1)*(r-1)*6,a=new Uint32Array(s),l=new Float32Array(o*r*2),c=new Float64Array(o*r*3);let d=0,h=0;for(let p=0;p<o;p++){const e=p/(o-1);for(let n=0;n<r;n++){const i=n/(r-1),o=g(t,e,i);c[3*d+0]=o[0],c[3*d+1]=o[1],c[3*d+2]=o[2]||0,l[2*d+0]=e,l[2*d+1]=1-i,p>0&&n>0&&(a[h++]=d-r,a[h++]=d-r-1,a[h++]=d-1,a[h++]=d-r,a[h++]=d-1,a[h++]=d),d++}}return{vertexCount:s,positions:c,indices:a,texCoords:l}}function g(t,e,n){return(0,d.t7)((0,d.t7)(t[0],t[1],n),(0,d.t7)(t[3],t[2],n),e)}const f={image:{type:"image",value:null,async:!0},bounds:{type:"array",value:[1,0,0,1],compare:!0},_imageCoordinateSystem:i.Df.DEFAULT,desaturate:{type:"number",min:0,max:1,value:0},transparentColor:{type:"color",value:[0,0,0,0]},tintColor:{type:"color",value:[255,255,255]}};class m extends o.Z{getShaders(){return super.getShaders({vs:"\n#define SHADER_NAME bitmap-layer-vertex-shader\n\nattribute vec2 texCoords;\nattribute vec3 positions;\nattribute vec3 positions64Low;\n\nvarying vec2 vTexCoord;\nvarying vec2 vTexPos;\n\nuniform float coordinateConversion;\n\nconst vec3 pickingColor = vec3(1.0, 0.0, 0.0);\n\nvoid main(void) {\n  geometry.worldPosition = positions;\n  geometry.uv = texCoords;\n  geometry.pickingColor = pickingColor;\n\n  gl_Position = project_position_to_clipspace(positions, positions64Low, vec3(0.0), geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  vTexCoord = texCoords;\n\n  if (coordinateConversion < -0.5) {\n    vTexPos = geometry.position.xy + project_uCommonOrigin.xy;\n  } else if (coordinateConversion > 0.5) {\n    vTexPos = geometry.worldPosition.xy;\n  }\n\n  vec4 color = vec4(0.0);\n  DECKGL_FILTER_COLOR(color, geometry);\n}\n",fs:"\n#define SHADER_NAME bitmap-layer-fragment-shader\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform sampler2D bitmapTexture;\n\nvarying vec2 vTexCoord;\nvarying vec2 vTexPos;\n\nuniform float desaturate;\nuniform vec4 transparentColor;\nuniform vec3 tintColor;\nuniform float opacity;\n\nuniform float coordinateConversion;\nuniform vec4 bounds;\n\n/* projection utils */\nconst float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / PI / 2.0;\n\n// from degrees to Web Mercator\nvec2 lnglat_to_mercator(vec2 lnglat) {\n  float x = lnglat.x;\n  float y = clamp(lnglat.y, -89.9, 89.9);\n  return vec2(\n    radians(x) + PI,\n    PI + log(tan(PI * 0.25 + radians(y) * 0.5))\n  ) * WORLD_SCALE;\n}\n\n// from Web Mercator to degrees\nvec2 mercator_to_lnglat(vec2 xy) {\n  xy /= WORLD_SCALE;\n  return degrees(vec2(\n    xy.x - PI,\n    atan(exp(xy.y - PI)) * 2.0 - PI * 0.5\n  ));\n}\n/* End projection utils */\n\n// apply desaturation\nvec3 color_desaturate(vec3 color) {\n  float luminance = (color.r + color.g + color.b) * 0.333333333;\n  return mix(color, vec3(luminance), desaturate);\n}\n\n// apply tint\nvec3 color_tint(vec3 color) {\n  return color * tintColor;\n}\n\n// blend with background color\nvec4 apply_opacity(vec3 color, float alpha) {\n  if (transparentColor.a == 0.0) {\n    return vec4(color, alpha);\n  }\n  float blendedAlpha = alpha + transparentColor.a * (1.0 - alpha);\n  float highLightRatio = alpha / blendedAlpha;\n  vec3 blendedRGB = mix(transparentColor.rgb, color, highLightRatio);\n  return vec4(blendedRGB, blendedAlpha);\n}\n\nvec2 getUV(vec2 pos) {\n  return vec2(\n    (pos.x - bounds[0]) / (bounds[2] - bounds[0]),\n    (pos.y - bounds[3]) / (bounds[1] - bounds[3])\n  );\n}\n\n\nvec3 packUVsIntoRGB(vec2 uv) {\n  // Extract the top 8 bits. We want values to be truncated down so we can add a fraction\n  vec2 uv8bit = floor(uv * 256.);\n\n  // Calculate the normalized remainders of u and v parts that do not fit into 8 bits\n  // Scale and clamp to 0-1 range\n  vec2 uvFraction = fract(uv * 256.);\n  vec2 uvFraction4bit = floor(uvFraction * 16.);\n\n  // Remainder can be encoded in blue channel, encode as 4 bits for pixel coordinates\n  float fractions = uvFraction4bit.x + uvFraction4bit.y * 16.;\n\n  return vec3(uv8bit, fractions) / 255.;\n}\n\n\nvoid main(void) {\n  vec2 uv = vTexCoord;\n  if (coordinateConversion < -0.5) {\n    vec2 lnglat = mercator_to_lnglat(vTexPos);\n    uv = getUV(lnglat);\n  } else if (coordinateConversion > 0.5) {\n    vec2 commonPos = lnglat_to_mercator(vTexPos);\n    uv = getUV(commonPos);\n  }\n  vec4 bitmapColor = texture2D(bitmapTexture, uv);\n\n  gl_FragColor = apply_opacity(color_tint(color_desaturate(bitmapColor.rgb)), bitmapColor.a * opacity);\n\n  geometry.uv = uv;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n\n  if (picking_uActive) {\n    // Since instance information is not used, we can use picking color for pixel index\n    gl_FragColor.rgb = packUVsIntoRGB(uv);\n  }\n}\n",modules:[r.Z,s.Z]})}initializeState(){const t=this.getAttributeManager();t.remove(["instancePickingColors"]);const e=!0;t.add({indices:{size:1,isIndexed:!0,update:t=>t.value=this.state.mesh.indices,noAlloc:e},positions:{size:3,type:5130,fp64:this.use64bitPositions(),update:t=>t.value=this.state.mesh.positions,noAlloc:e},texCoords:{size:2,update:t=>t.value=this.state.mesh.texCoords,noAlloc:e}})}updateState(t){let{props:e,oldProps:n,changeFlags:i}=t;const o=this.getAttributeManager();if(i.extensionsChanged){var r;const{gl:t}=this.context;null==(r=this.state.model)||r.delete(),this.state.model=this._getModel(t),o.invalidateAll()}if(e.bounds!==n.bounds){const t=this.state.mesh,e=this._createMesh();this.state.model.setVertexCount(e.vertexCount);for(const n in e)t&&t[n]!==e[n]&&o.invalidate(n);this.setState({mesh:e,...this._getCoordinateUniforms()})}else e._imageCoordinateSystem!==n._imageCoordinateSystem&&this.setState(this._getCoordinateUniforms())}getPickingInfo(t){const{image:e}=this.props,n=t.info;if(!n.color||!e)return n.bitmap=null,n;const{width:i,height:o}=e;n.index=0;const r=function(t){const[e,n,i]=t;return[(e+(15&i)/16)/256,(n+(240&i)/256)/256]}(n.color),s=[Math.floor(r[0]*i),Math.floor(r[1]*o)];return n.bitmap={size:{width:i,height:o},uv:r,pixel:s},n}disablePickingIndex(){this.setState({disablePicking:!0})}restorePickingColors(){this.setState({disablePicking:!1})}_updateAutoHighlight(t){super._updateAutoHighlight({...t,color:this.encodePickingColor(0)})}_createMesh(){const{bounds:t}=this.props;let e=t;return y(t)&&(e=[[t[0],t[1]],[t[0],t[3]],[t[2],t[3]],[t[2],t[1]]]),h(e,this.context.viewport.resolution)}_getModel(t){return t?new a.Z(t,{...this.getShaders(),id:this.props.id,geometry:new l.Z({drawMode:4,vertexCount:6}),isInstanced:!1}):null}draw(t){const{uniforms:e,moduleParameters:n}=t,{model:i,coordinateConversion:o,bounds:r,disablePicking:s}=this.state,{image:a,desaturate:l,transparentColor:c,tintColor:d}=this.props;n.pickingActive&&s||a&&i&&i.setUniforms(e).setUniforms({bitmapTexture:a,desaturate:l,transparentColor:c.map((t=>t/255)),tintColor:d.slice(0,3).map((t=>t/255)),coordinateConversion:o,bounds:r}).draw()}_getCoordinateUniforms(){const{LNGLAT:t,CARTESIAN:e,DEFAULT:n}=i.Df;let{_imageCoordinateSystem:o}=this.props;if(o!==n){const{bounds:n}=this.props;if(!y(n))throw new Error("_imageCoordinateSystem only supports rectangular bounds");const i=this.context.viewport.resolution?t:e;if(o=o===t?t:e,o===t&&i===e)return{coordinateConversion:-1,bounds:n};if(o===e&&i===t){const t=(0,c.w5)([n[0],n[1]]),e=(0,c.w5)([n[2],n[3]]);return{coordinateConversion:1,bounds:[t[0],t[1],e[0],e[1]]}}}return{coordinateConversion:0,bounds:[0,0,0,0]}}}function y(t){return Number.isFinite(t[0])}m.layerName="BitmapLayer",m.defaultProps=f},68797:(t,e,n)=>{"use strict";n.d(e,{Z:()=>_});var i=n(47251),o=n(18056),r=n(89771),s=n(71693),a=n(43631),l=n(7092),c=n(19227),d=n(83757),p=n(95321),u=n(89745),h=n(15804),g=n(51355),f=n(59021);class m extends h.Z{constructor(t){const{id:e=(0,g.hQ)("column-geometry")}=t,{indices:n,attributes:i}=function(t){const{radius:e,height:n=1,nradial:i=10}=t;let{vertices:o}=t;o&&(u.Z.assert(o.length>=i),o=o.flatMap((t=>[t[0],t[1]])),(0,f.Ny)(o,f.wG.COUNTER_CLOCKWISE));const r=n>0,s=i+1,a=r?3*s+1:i,l=2*Math.PI/i,c=new Uint16Array(r?3*i*2:0),d=new Float32Array(3*a),p=new Float32Array(3*a);let h=0;if(r){for(let t=0;t<s;t++){const r=t*l,s=t%i,a=Math.sin(r),c=Math.cos(r);for(let t=0;t<2;t++)d[h+0]=o?o[2*s]:c*e,d[h+1]=o?o[2*s+1]:a*e,d[h+2]=(.5-t)*n,p[h+0]=o?o[2*s]:c,p[h+1]=o?o[2*s+1]:a,h+=3}d[h+0]=d[h-3],d[h+1]=d[h-2],d[h+2]=d[h-1],h+=3}for(let u=r?0:1;u<s;u++){const t=Math.floor(u/2)*Math.sign(.5-u%2),r=t*l,s=(t+i)%i,a=Math.sin(r),c=Math.cos(r);d[h+0]=o?o[2*s]:c*e,d[h+1]=o?o[2*s+1]:a*e,d[h+2]=n/2,p[h+2]=1,h+=3}if(r){let t=0;for(let e=0;e<i;e++)c[t++]=2*e+0,c[t++]=2*e+2,c[t++]=2*e+0,c[t++]=2*e+1,c[t++]=2*e+1,c[t++]=2*e+3}return{indices:c,attributes:{POSITION:{size:3,value:d},NORMAL:{size:3,value:p}}}}(t);super({...t,id:e,indices:n,attributes:i})}}const y=[0,0,0,255],v={diskResolution:{type:"number",min:4,value:20},vertices:null,radius:{type:"number",min:0,value:1e3},angle:{type:"number",value:0},offset:{type:"array",value:[0,0]},coverage:{type:"number",min:0,max:1,value:1},elevationScale:{type:"number",min:0,value:1},radiusUnits:"meters",lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,extruded:!0,wireframe:!1,filled:!0,stroked:!1,getPosition:{type:"accessor",value:t=>t.position},getFillColor:{type:"accessor",value:y},getLineColor:{type:"accessor",value:y},getLineWidth:{type:"accessor",value:1},getElevation:{type:"accessor",value:1e3},material:!0,getColor:{deprecatedFor:["getFillColor","getLineColor"]}};class _ extends i.Z{getShaders(){const{gl:t}=this.context,e=!(0,l.D0)(t),n={},i=this.props.flatShading&&(0,c.U6)(t,d.h.GLSL_DERIVATIVES);return i&&(n.FLAT_SHADING=1),super.getShaders({vs:"#version 300 es\n\n#define SHADER_NAME column-layer-vertex-shader\n\nin vec3 positions;\nin vec3 normals;\n\nin vec3 instancePositions;\nin float instanceElevations;\nin vec3 instancePositions64Low;\nin vec4 instanceFillColors;\nin vec4 instanceLineColors;\nin float instanceStrokeWidths;\n\nin vec3 instancePickingColors;\nuniform float opacity;\nuniform float radius;\nuniform float angle;\nuniform vec2 offset;\nuniform bool extruded;\nuniform bool stroked;\nuniform bool isStroke;\nuniform float coverage;\nuniform float elevationScale;\nuniform float edgeDistance;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform int radiusUnits;\nuniform int widthUnits;\nout vec4 vColor;\n#ifdef FLAT_SHADING\nout vec4 position_commonspace;\n#endif\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n\n  vec4 color = isStroke ? instanceLineColors : instanceFillColors;\n  mat2 rotationMatrix = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n  float elevation = 0.0;\n  float strokeOffsetRatio = 1.0;\n\n  if (extruded) {\n    elevation = instanceElevations * (positions.z + 1.0) / 2.0 * elevationScale;\n  } else if (stroked) {\n    float widthPixels = clamp(\n      project_size_to_pixel(instanceStrokeWidths * widthScale, widthUnits),\n      widthMinPixels, widthMaxPixels) / 2.0;\n    float halfOffset = project_pixel_size(widthPixels) / project_size(edgeDistance * coverage * radius);\n    if (isStroke) {\n      strokeOffsetRatio -= sign(positions.z) * halfOffset;\n    } else {\n      strokeOffsetRatio -= halfOffset;\n    }\n  }\n  float shouldRender = float(color.a > 0.0 && instanceElevations >= 0.0);\n  float dotRadius = radius * coverage * shouldRender;\n\n  geometry.pickingColor = instancePickingColors;\n  vec3 centroidPosition = vec3(instancePositions.xy, instancePositions.z + elevation);\n  vec3 centroidPosition64Low = instancePositions64Low;\n  vec2 offset = (rotationMatrix * positions.xy * strokeOffsetRatio + offset) * dotRadius;\n  if (radiusUnits == UNIT_METERS) {\n    offset = project_size(offset);\n  }\n  vec3 pos = vec3(offset, 0.);\n  DECKGL_FILTER_SIZE(pos, geometry);\n\n  gl_Position = project_position_to_clipspace(centroidPosition, centroidPosition64Low, pos, geometry.position);\n  geometry.normal = project_normal(vec3(rotationMatrix * normals.xy, normals.z));\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  if (extruded && !isStroke) {\n#ifdef FLAT_SHADING\n    position_commonspace = geometry.position;\n    vColor = vec4(color.rgb, color.a * opacity);\n#else\n    vec3 lightColor = lighting_getLightColor(color.rgb, project_uCameraPosition, geometry.position.xyz, geometry.normal);\n    vColor = vec4(lightColor, color.a * opacity);\n#endif\n  } else {\n    vColor = vec4(color.rgb, color.a * opacity);\n  }\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME column-layer-fragment-shader\n\nprecision highp float;\n\nuniform vec3 project_uCameraPosition;\nuniform bool extruded;\nuniform bool isStroke;\n\nout vec4 fragColor;\n\nin vec4 vColor;\n#ifdef FLAT_SHADING\nin vec4 position_commonspace;\n#endif\n\nvoid main(void) {\n  fragColor = vColor;\n#ifdef FLAT_SHADING\n  if (extruded && !isStroke && !picking_uActive) {\n    vec3 normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n    fragColor.rgb = lighting_getLightColor(vColor.rgb, project_uCameraPosition, position_commonspace.xyz, normal);\n  }\n#endif\n  DECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",defines:n,transpileToGLSL100:e,modules:[o.Z,i?r.s:r.N,s.Z]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceElevations:{size:1,transition:!0,accessor:"getElevation"},instanceFillColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getFillColor",defaultValue:y},instanceLineColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getLineColor",defaultValue:y},instanceStrokeWidths:{size:1,accessor:"getLineWidth",transition:!0}})}updateState(t){super.updateState(t);const{props:e,oldProps:n,changeFlags:i}=t,o=i.extensionsChanged||e.flatShading!==n.flatShading;if(o){var r;const{gl:t}=this.context;null==(r=this.state.model)||r.delete(),this.state.model=this._getModel(t),this.getAttributeManager().invalidateAll()}(o||e.diskResolution!==n.diskResolution||e.vertices!==n.vertices||(e.extruded||e.stroked)!==(n.extruded||n.stroked))&&this._updateGeometry(e)}getGeometry(t,e,n){const i=new m({radius:1,height:n?2:0,vertices:e,nradial:t});let o=0;if(e)for(let r=0;r<t;r++){const n=e[r];o+=Math.sqrt(n[0]*n[0]+n[1]*n[1])/t}else o=1;return this.setState({edgeDistance:Math.cos(Math.PI/t)*o}),i}_getModel(t){return new p.Z(t,{...this.getShaders(),id:this.props.id,isInstanced:!0})}_updateGeometry(t){let{diskResolution:e,vertices:n,extruded:i,stroked:o}=t;const r=this.getGeometry(e,n,i||o);this.setState({fillVertexCount:r.attributes.POSITION.value.length/3,wireframeVertexCount:r.indices.value.length}),this.state.model.setProps({geometry:r})}draw(t){let{uniforms:e}=t;const{lineWidthUnits:n,lineWidthScale:i,lineWidthMinPixels:o,lineWidthMaxPixels:r,radiusUnits:s,elevationScale:l,extruded:c,filled:d,stroked:p,wireframe:u,offset:h,coverage:g,radius:f,angle:m}=this.props,{model:y,fillVertexCount:v,wireframeVertexCount:_,edgeDistance:w}=this.state;y.setUniforms(e).setUniforms({radius:f,angle:m/180*Math.PI,offset:h,extruded:c,stroked:p,coverage:g,elevationScale:l,edgeDistance:w,radiusUnits:a.iI[s],widthUnits:a.iI[n],widthScale:i,widthMinPixels:o,widthMaxPixels:r}),c&&u&&(y.setProps({isIndexed:!0}),y.setVertexCount(_).setDrawMode(1).setUniforms({isStroke:!0}).draw()),d&&(y.setProps({isIndexed:!1}),y.setVertexCount(v).setDrawMode(5).setUniforms({isStroke:!1}).draw()),!c&&p&&(y.setProps({isIndexed:!1}),y.setVertexCount(2*v/3).setDrawMode(5).setUniforms({isStroke:!0}).draw())}}_.layerName="ColumnLayer",_.defaultProps=v},31759:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var i=n(32900),o=n(43631),r=n(68797);class s extends r.Z{getGeometry(t){return new i.Z}draw(t){let{uniforms:e}=t;const{elevationScale:n,extruded:i,offset:r,coverage:s,cellSize:a,angle:l,radiusUnits:c}=this.props;this.state.model.setUniforms(e).setUniforms({radius:a/2,radiusUnits:o.iI[c],angle:l,offset:r,extruded:i,coverage:s,elevationScale:n,edgeDistance:1,isWireframe:!1}).draw()}}s.layerName="GridCellLayer",s.defaultProps={cellSize:{type:"number",min:0,value:1e3},offset:{type:"array",value:[1,1]}}},88123:(t,e,n)=>{"use strict";n.d(e,{Z:()=>x});var i=n(19871),o=n(46025);var r=n(6735),s=n(24309),a=n(27800),l=n(52329),c=n(57654);const d={circle:{type:s.Z,props:{filled:"filled",stroked:"stroked",lineWidthMaxPixels:"lineWidthMaxPixels",lineWidthMinPixels:"lineWidthMinPixels",lineWidthScale:"lineWidthScale",lineWidthUnits:"lineWidthUnits",pointRadiusMaxPixels:"radiusMaxPixels",pointRadiusMinPixels:"radiusMinPixels",pointRadiusScale:"radiusScale",pointRadiusUnits:"radiusUnits",pointAntialiasing:"antialiasing",pointBillboard:"billboard",getFillColor:"getFillColor",getLineColor:"getLineColor",getLineWidth:"getLineWidth",getPointRadius:"getRadius"}},icon:{type:r.Z,props:{iconAtlas:"iconAtlas",iconMapping:"iconMapping",iconSizeMaxPixels:"sizeMaxPixels",iconSizeMinPixels:"sizeMinPixels",iconSizeScale:"sizeScale",iconSizeUnits:"sizeUnits",iconAlphaCutoff:"alphaCutoff",iconBillboard:"billboard",getIcon:"getIcon",getIconAngle:"getAngle",getIconColor:"getColor",getIconPixelOffset:"getPixelOffset",getIconSize:"getSize"}},text:{type:a.Z,props:{textSizeMaxPixels:"sizeMaxPixels",textSizeMinPixels:"sizeMinPixels",textSizeScale:"sizeScale",textSizeUnits:"sizeUnits",textBackground:"background",textBackgroundPadding:"backgroundPadding",textFontFamily:"fontFamily",textFontWeight:"fontWeight",textLineHeight:"lineHeight",textMaxWidth:"maxWidth",textOutlineColor:"outlineColor",textOutlineWidth:"outlineWidth",textWordBreak:"wordBreak",textCharacterSet:"characterSet",textBillboard:"billboard",textFontSettings:"fontSettings",getText:"getText",getTextAngle:"getAngle",getTextColor:"getColor",getTextPixelOffset:"getPixelOffset",getTextSize:"getSize",getTextAnchor:"getTextAnchor",getTextAlignmentBaseline:"getAlignmentBaseline",getTextBackgroundColor:"getBackgroundColor",getTextBorderColor:"getBorderColor",getTextBorderWidth:"getBorderWidth"}}},p={type:l.Z,props:{lineWidthUnits:"widthUnits",lineWidthScale:"widthScale",lineWidthMinPixels:"widthMinPixels",lineWidthMaxPixels:"widthMaxPixels",lineJointRounded:"jointRounded",lineCapRounded:"capRounded",lineMiterLimit:"miterLimit",lineBillboard:"billboard",getLineColor:"getColor",getLineWidth:"getWidth"}},u={type:c.Z,props:{extruded:"extruded",filled:"filled",wireframe:"wireframe",elevationScale:"elevationScale",material:"material",_full3d:"_full3d",getElevation:"getElevation",getFillColor:"getFillColor",getLineColor:"getLineColor"}};function h(t){let{type:e,props:n}=t;const i={};for(const o in n)i[o]=e.defaultProps[n[o]];return i}function g(t,e){const{transitions:n,updateTriggers:i}=t.props,o={updateTriggers:{},transitions:n&&{getPosition:n.geometry}};for(const r in e){const s=e[r];let a=t.props[r];r.startsWith("get")&&(a=t.getSubLayerAccessor(a),o.updateTriggers[s]=i[r],n&&(o.transitions[s]=n[r])),o[s]=a}return o}var f=n(89745);function m(t,e,n){void 0===n&&(n={});const i={pointFeatures:[],lineFeatures:[],polygonFeatures:[],polygonOutlineFeatures:[]},{startRow:o=0,endRow:r=t.length}=n;for(let s=o;s<r;s++){const n=t[s],{geometry:o}=n;if(o)if("GeometryCollection"===o.type){f.Z.assert(Array.isArray(o.geometries),"GeoJSON does not have geometries array");const{geometries:t}=o;for(let o=0;o<t.length;o++){y(t[o],i,e,n,s)}}else y(o,i,e,n,s)}return i}function y(t,e,n,i,o){const{type:r,coordinates:s}=t,{pointFeatures:a,lineFeatures:l,polygonFeatures:c,polygonOutlineFeatures:d}=e;if(function(t,e){let n=v[t];f.Z.assert(n,"Unknown GeoJSON type "+t);for(;e&&--n>0;)e=e[0];return e&&Number.isFinite(e[0])}(r,s))switch(r){case"Point":a.push(n({geometry:t},i,o));break;case"MultiPoint":s.forEach((t=>{a.push(n({geometry:{type:"Point",coordinates:t}},i,o))}));break;case"LineString":l.push(n({geometry:t},i,o));break;case"MultiLineString":s.forEach((t=>{l.push(n({geometry:{type:"LineString",coordinates:t}},i,o))}));break;case"Polygon":c.push(n({geometry:t},i,o)),s.forEach((t=>{d.push(n({geometry:{type:"LineString",coordinates:t}},i,o))}));break;case"MultiPolygon":s.forEach((t=>{c.push(n({geometry:{type:"Polygon",coordinates:t}},i,o)),t.forEach((t=>{d.push(n({geometry:{type:"LineString",coordinates:t}},i,o))}))}))}else f.Z.warn(r+" coordinates are malformed")()}const v={Point:1,MultiPoint:2,LineString:2,MultiLineString:3,Polygon:3,MultiPolygon:4};function _(t){return t.geometry.coordinates}function w(t,e){const n={points:{},lines:{},polygons:{},polygonsOutline:{}},{points:i,lines:o,polygons:r}=t,s=function(t,e){const n={points:null,lines:null,polygons:null};for(const i in n){const o=t[i].globalFeatureIds.value;n[i]=new Uint8ClampedArray(3*o.length);const r=[];for(let t=0;t<o.length;t++)e(o[t],r),n[i][3*t+0]=r[0],n[i][3*t+1]=r[1],n[i][3*t+2]=r[2]}return n}(t,e);return n.points.data={length:i.positions.value.length/i.positions.size,attributes:{...i.attributes,getPosition:i.positions,instancePickingColors:{size:3,value:s.points}},properties:i.properties,numericProps:i.numericProps,featureIds:i.featureIds},n.lines.data={length:o.pathIndices.value.length-1,startIndices:o.pathIndices.value,attributes:{...o.attributes,getPath:o.positions,instancePickingColors:{size:3,value:s.lines}},properties:o.properties,numericProps:o.numericProps,featureIds:o.featureIds},n.lines._pathType="open",n.polygons.data={length:r.polygonIndices.value.length-1,startIndices:r.polygonIndices.value,attributes:{...r.attributes,getPolygon:r.positions,pickingColors:{size:3,value:s.polygons}},properties:r.properties,numericProps:r.numericProps,featureIds:r.featureIds},n.polygons._normalize=!1,r.triangles&&(n.polygons.data.attributes.indices=r.triangles.value),n.polygonsOutline.data={length:r.primitivePolygonIndices.value.length-1,startIndices:r.primitivePolygonIndices.value,attributes:{...r.attributes,getPath:r.positions,instancePickingColors:{size:3,value:s.polygons}},properties:r.properties,numericProps:r.numericProps,featureIds:r.featureIds},n.polygonsOutline._pathType="open",n}const P=["points","linestrings","polygons"],b={...h(d.circle),...h(d.icon),...h(d.text),...h(p),...h(u),stroked:!0,filled:!0,extruded:!1,wireframe:!1,_full3d:!1,iconAtlas:{type:"object",value:null},iconMapping:{type:"object",value:{}},getIcon:{type:"accessor",value:t=>t.properties.icon},getText:{type:"accessor",value:t=>t.properties.text},pointType:"circle",getRadius:{deprecatedFor:"getPointRadius"}};class x extends i.Z{initializeState(){this.state={layerProps:{},features:{}}}updateState(t){let{props:e,changeFlags:n}=t;if(!n.dataChanged)return;const{data:i}=this.props,o=i&&"points"in i&&"polygons"in i&&"lines"in i;this.setState({binary:o}),o?this._updateStateBinary({props:e,changeFlags:n}):this._updateStateJSON({props:e,changeFlags:n})}_updateStateBinary(t){let{props:e,changeFlags:n}=t;const i=w(e.data,this.encodePickingColor);this.setState({layerProps:i})}_updateStateJSON(t){let{props:e,changeFlags:n}=t;const i=function(t){if(Array.isArray(t))return t;switch(f.Z.assert(t.type,"GeoJSON does not have type"),t.type){case"Feature":return[t];case"FeatureCollection":return f.Z.assert(Array.isArray(t.features),"GeoJSON does not have features array"),t.features;default:return[{geometry:t}]}}(e.data),r=this.getSubLayerRow.bind(this);let s={};const a={};if(Array.isArray(n.dataChanged)){const t=this.state.features;for(const e in t)s[e]=t[e].slice(),a[e]=[];for(const e of n.dataChanged){const n=m(i,r,e);for(const i in t)a[i].push((0,o.b)({data:s[i],getIndex:t=>t.__source.index,dataRange:e,replace:n[i]}))}}else s=m(i,r);const l=function(t,e){const n={points:{},lines:{},polygons:{},polygonsOutline:{}},{pointFeatures:i,lineFeatures:o,polygonFeatures:r,polygonOutlineFeatures:s}=t;return n.points.data=i,n.points._dataDiff=e.pointFeatures&&(()=>e.pointFeatures),n.points.getPosition=_,n.lines.data=o,n.lines._dataDiff=e.lineFeatures&&(()=>e.lineFeatures),n.lines.getPath=_,n.polygons.data=r,n.polygons._dataDiff=e.polygonFeatures&&(()=>e.polygonFeatures),n.polygons.getPolygon=_,n.polygonsOutline.data=s,n.polygonsOutline._dataDiff=e.polygonOutlineFeatures&&(()=>e.polygonOutlineFeatures),n.polygonsOutline.getPath=_,n}(s,a);this.setState({features:s,featuresDiff:a,layerProps:l})}getPickingInfo(t){const e=super.getPickingInfo(t),{index:n,sourceLayer:i}=e;return e.featureType=P.find((t=>i.id.startsWith(this.id+"-"+t+"-"))),n>=0&&i.id.startsWith(this.id+"-points-text")&&this.state.binary&&(e.index=this.props.data.points.globalFeatureIds.value[n]),e}_updateAutoHighlight(t){const e=this.id+"-points-",n="points"===t.featureType;for(const i of this.getSubLayers())i.id.startsWith(e)===n&&i.updateAutoHighlight(t)}_renderPolygonLayer(){const{extruded:t,wireframe:e}=this.props,{layerProps:n}=this.state,i="polygons-fill",o=this.shouldRenderSubLayer(i,n.polygons.data)&&this.getSubLayerClass(i,u.type);if(o){const r=g(this,u.props),s=t&&e;return s||delete r.getLineColor,r.updateTriggers.lineColors=s,new o(r,this.getSubLayerProps({id:i,updateTriggers:r.updateTriggers}),n.polygons)}return null}_renderLineLayers(){const{extruded:t,stroked:e}=this.props,{layerProps:n}=this.state,i="polygons-stroke",o="linestrings",r=!t&&e&&this.shouldRenderSubLayer(i,n.polygonsOutline.data)&&this.getSubLayerClass(i,p.type),s=this.shouldRenderSubLayer(o,n.lines.data)&&this.getSubLayerClass(o,p.type);if(r||s){const t=g(this,p.props);return[r&&new r(t,this.getSubLayerProps({id:i,updateTriggers:t.updateTriggers}),n.polygonsOutline),s&&new s(t,this.getSubLayerProps({id:o,updateTriggers:t.updateTriggers}),n.lines)]}return null}_renderPointLayers(){const{pointType:t}=this.props,{layerProps:e,binary:n}=this.state;let{highlightedObjectIndex:i}=this.props;!n&&Number.isFinite(i)&&(i=e.points.data.findIndex((t=>t.__source.index===i)));const o=new Set(t.split("+")),r=[];for(const s of o){const t="points-"+s,o=d[s],a=o&&this.shouldRenderSubLayer(t,e.points.data)&&this.getSubLayerClass(t,o.type);if(a){const l=g(this,o.props);let c=e.points;if("text"===s&&n){const{instancePickingColors:t,...e}=c.data.attributes;c={...c,data:{...c.data,attributes:e}}}r.push(new a(l,this.getSubLayerProps({id:t,updateTriggers:l.updateTriggers,highlightedObjectIndex:i}),c))}}return r}renderLayers(){const{extruded:t}=this.props,e=this._renderPolygonLayer();return[!t&&e,this._renderLineLayers(),this._renderPointLayers(),t&&e]}getSubLayerAccessor(t){const{binary:e}=this.state;return e&&"function"==typeof t?(e,n)=>{const{data:i,index:o}=n,r=function(t,e){if(!t)return null;const n="startIndices"in t?t.startIndices[e]:e,i=t.featureIds.value[n];return-1!==n?function(t,e,n){const i={properties:{...t.properties[e]}};for(const o in t.numericProps)i.properties[o]=t.numericProps[o].value[n];return i}(t,i,n):null}(i,o);return t(r,n)}:super.getSubLayerAccessor(t)}}x.layerName="GeoJsonLayer",x.defaultProps=b},6735:(t,e,n)=>{"use strict";n.d(e,{Z:()=>b});var i=n(47251),o=n(18056),r=n(71693),s=n(43631),a=n(89745),l=n(95321),c=n(15804);var d=n(43970),p=n(88163),u=n(96742),h=n(37944);const g=()=>{},f={10241:9987,10240:9729,10242:33071,10243:33071};function m(t,e,n,i){const o=Math.min(n/e.width,i/e.height),r=Math.floor(e.width*o),s=Math.floor(e.height*o);return 1===o?{data:e,width:r,height:s}:(t.canvas.height=s,t.canvas.width=r,t.clearRect(0,0,r,s),t.drawImage(e,0,0,e.width,e.height,0,0,r,s),{data:t.canvas,width:r,height:s})}function y(t){return t&&(t.id||t.url)}function v(t,e,n){for(let i=0;i<e.length;i++){const{icon:o,xOffset:r}=e[i];t[y(o)]={...o,x:r,y:n}}}class _{constructor(t,e){let{onUpdate:n=g,onError:i=g}=e;this._loadOptions=null,this._texture=null,this._externalTexture=null,this._mapping={},this._textureParameters=null,this._pendingCount=0,this._autoPacking=!1,this._xOffset=0,this._yOffset=0,this._rowHeight=0,this._buffer=4,this._canvasWidth=1024,this._canvasHeight=0,this._canvas=null,this.gl=t,this.onUpdate=n,this.onError=i}finalize(){var t;null==(t=this._texture)||t.delete()}getTexture(){return this._texture||this._externalTexture}getIconMapping(t){const e=this._autoPacking?y(t):t;return this._mapping[e]||{}}setProps(t){let{loadOptions:e,autoPacking:n,iconAtlas:i,iconMapping:o,textureParameters:r}=t;var s;(e&&(this._loadOptions=e),void 0!==n&&(this._autoPacking=n),o&&(this._mapping=o),i)&&(null==(s=this._texture)||s.delete(),this._texture=null,this._externalTexture=i);r&&(this._textureParameters=r)}get isLoaded(){return 0===this._pendingCount}packIcons(t,e){if(!this._autoPacking||"undefined"==typeof document)return;const n=Object.values(function(t,e,n){if(!t||!e)return null;n=n||{};const i={},{iterable:o,objectInfo:r}=(0,h.jB)(t);for(const s of o){r.index++;const t=e(s,r),o=y(t);if(!t)throw new Error("Icon is missing.");if(!t.url)throw new Error("Icon url is missing.");i[o]||n[o]&&t.url===n[o].url||(i[o]={...t,source:s,sourceIndex:r.index})}return i}(t,e,this._mapping)||{});if(n.length>0){const{mapping:t,xOffset:e,yOffset:i,rowHeight:o,canvasHeight:r}=function(t){let{icons:e,buffer:n,mapping:i={},xOffset:o=0,yOffset:r=0,rowHeight:s=0,canvasWidth:a}=t,l=[];for(let d=0;d<e.length;d++){const t=e[d];if(!i[y(t)]){const{height:e,width:c}=t;o+c+n>a&&(v(i,l,r),o=0,r=s+r+n,s=0,l=[]),l.push({icon:t,xOffset:o}),o=o+c+n,s=Math.max(s,e)}}return l.length>0&&v(i,l,r),{mapping:i,rowHeight:s,xOffset:o,yOffset:r,canvasWidth:a,canvasHeight:(c=s+r+n,Math.pow(2,Math.ceil(Math.log2(c))))};var c}({icons:n,buffer:this._buffer,canvasWidth:this._canvasWidth,mapping:this._mapping,rowHeight:this._rowHeight,xOffset:this._xOffset,yOffset:this._yOffset});this._rowHeight=o,this._mapping=t,this._xOffset=e,this._yOffset=i,this._canvasHeight=r,this._texture||(this._texture=new d.Z(this.gl,{width:this._canvasWidth,height:this._canvasHeight,parameters:this._textureParameters||f})),this._texture.height!==this._canvasHeight&&(this._texture=function(t,e,n,i){const o=t.width,r=t.height,s=new d.Z(t.gl,{width:e,height:n,parameters:i});return(0,p.Lv)(t,s,{targetY:0,width:o,height:r}),t.delete(),s}(this._texture,this._canvasWidth,this._canvasHeight,this._textureParameters||f)),this.onUpdate(),this._canvas=this._canvas||document.createElement("canvas"),this._loadIcons(n)}}_loadIcons(t){const e=this._canvas.getContext("2d",{willReadFrequently:!0});for(const n of t)this._pendingCount++,(0,u.z)(n.url,this._loadOptions).then((t=>{const i=y(n),o=this._mapping[i],{x:r,y:s,width:a,height:l}=o,{data:c,width:d,height:p}=m(e,t,a,l);this._texture.setSubImageData({data:c,x:r+(a-d)/2,y:s+(l-p)/2,width:d,height:p}),o.width=d,o.height=p,this._texture.generateMipmap(),this.onUpdate()})).catch((t=>{this.onError({url:n.url,source:n.source,sourceIndex:n.sourceIndex,loadOptions:this._loadOptions,error:t})})).finally((()=>{this._pendingCount--}))}}const w=[0,0,0,255],P={iconAtlas:{type:"image",value:null,async:!0},iconMapping:{type:"object",value:{},async:!0},sizeScale:{type:"number",value:1,min:0},billboard:!0,sizeUnits:"pixels",sizeMinPixels:{type:"number",min:0,value:0},sizeMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},alphaCutoff:{type:"number",value:.05,min:0,max:1},getPosition:{type:"accessor",value:t=>t.position},getIcon:{type:"accessor",value:t=>t.icon},getColor:{type:"accessor",value:w},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},onIconError:{type:"function",value:null,compare:!1,optional:!0}};class b extends i.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME icon-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceSizes;\nattribute float instanceAngles;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\nattribute vec4 instanceIconFrames;\nattribute float instanceColorModes;\nattribute vec2 instanceOffsets;\nattribute vec2 instancePixelOffset;\n\nuniform float sizeScale;\nuniform vec2 iconsTextureDim;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform bool billboard;\nuniform int sizeUnits;\n\nvarying float vColorMode;\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvec2 rotate_by_angle(vec2 vertex, float angle) {\n  float angle_radian = angle * PI / 180.0;\n  float cos_angle = cos(angle_radian);\n  float sin_angle = sin(angle_radian);\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\n  return rotationMatrix * vertex;\n}\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = positions;\n  geometry.pickingColor = instancePickingColors;\n  uv = positions;\n\n  vec2 iconSize = instanceIconFrames.zw;\n  float sizePixels = clamp(\n    project_size_to_pixel(instanceSizes * sizeScale, sizeUnits), \n    sizeMinPixels, sizeMaxPixels\n  );\n  float instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;\n  vec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;\n  pixelOffset += instancePixelOffset;\n  pixelOffset.y *= -1.0;\n\n  if (billboard)  {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n    vec3 offset = vec3(pixelOffset, 0.0);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n\n  } else {\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\n    DECKGL_FILTER_SIZE(offset_common, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position); \n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  }\n\n  vTextureCoords = mix(\n    instanceIconFrames.xy,\n    instanceIconFrames.xy + iconSize,\n    (positions.xy + 1.0) / 2.0\n  ) / iconsTextureDim;\n\n  vColor = instanceColors;\n  DECKGL_FILTER_COLOR(vColor, geometry);\n\n  vColorMode = instanceColorModes;\n}\n",fs:"#define SHADER_NAME icon-layer-fragment-shader\n\nprecision highp float;\n\nuniform float opacity;\nuniform sampler2D iconsTexture;\nuniform float alphaCutoff;\n\nvarying float vColorMode;\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  vec4 texColor = texture2D(iconsTexture, vTextureCoords);\n  vec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);\n  float a = texColor.a * opacity * vColor.a;\n\n  if (a < alphaCutoff) {\n    discard;\n  }\n\n  gl_FragColor = vec4(color, a);\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[o.Z,r.Z]})}initializeState(){this.state={iconManager:new _(this.context.gl,{onUpdate:this._onUpdate.bind(this),onError:this._onError.bind(this)})};this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceOffsets:{size:2,accessor:"getIcon",transform:this.getInstanceOffset},instanceIconFrames:{size:4,accessor:"getIcon",transform:this.getInstanceIconFrame},instanceColorModes:{size:1,type:5121,accessor:"getIcon",transform:this.getInstanceColorMode},instanceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getColor",defaultValue:w},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instancePixelOffset:{size:2,transition:!0,accessor:"getPixelOffset"}})}updateState(t){super.updateState(t);const{props:e,oldProps:n,changeFlags:i}=t,o=this.getAttributeManager(),{iconAtlas:r,iconMapping:s,data:a,getIcon:l,textureParameters:c}=e,{iconManager:d}=this.state,p=r||this.internalState.isAsyncPropLoading("iconAtlas");if(d.setProps({loadOptions:e.loadOptions,autoPacking:!p,iconAtlas:r,iconMapping:p?s:null,textureParameters:c}),p?n.iconMapping!==e.iconMapping&&o.invalidate("getIcon"):(i.dataChanged||i.updateTriggersChanged&&(i.updateTriggersChanged.all||i.updateTriggersChanged.getIcon))&&d.packIcons(a,l),i.extensionsChanged){var u;const{gl:t}=this.context;null==(u=this.state.model)||u.delete(),this.state.model=this._getModel(t),o.invalidateAll()}}get isLoaded(){return super.isLoaded&&this.state.iconManager.isLoaded}finalizeState(t){super.finalizeState(t),this.state.iconManager.finalize()}draw(t){let{uniforms:e}=t;const{sizeScale:n,sizeMinPixels:i,sizeMaxPixels:o,sizeUnits:r,billboard:a,alphaCutoff:l}=this.props,{iconManager:c}=this.state,d=c.getTexture();d&&this.state.model.setUniforms(e).setUniforms({iconsTexture:d,iconsTextureDim:[d.width,d.height],sizeUnits:s.iI[r],sizeScale:n,sizeMinPixels:i,sizeMaxPixels:o,billboard:a,alphaCutoff:l}).draw()}_getModel(t){return new l.Z(t,{...this.getShaders(),id:this.props.id,geometry:new c.Z({drawMode:6,attributes:{positions:{size:2,value:new Float32Array([-1,-1,-1,1,1,1,1,-1])}}}),isInstanced:!0})}_onUpdate(){this.setNeedsRedraw()}_onError(t){var e;const n=null==(e=this.getCurrentLayer())?void 0:e.props.onIconError;n?n(t):a.Z.error(t.error.message)()}getInstanceOffset(t){const{width:e,height:n,anchorX:i=e/2,anchorY:o=n/2}=this.state.iconManager.getIconMapping(t);return[e/2-i,n/2-o]}getInstanceColorMode(t){return this.state.iconManager.getIconMapping(t).mask?1:0}getInstanceIconFrame(t){const{x:e,y:n,width:i,height:o}=this.state.iconManager.getIconMapping(t);return[e,n,i,o]}}b.defaultProps=P,b.layerName="IconLayer"},16009:(t,e,n)=>{"use strict";n.d(e,{Z:()=>d});var i=n(47251),o=n(18056),r=n(71693),s=n(43631),a=n(95321),l=n(15804);const c={getSourcePosition:{type:"accessor",value:t=>t.sourcePosition},getTargetPosition:{type:"accessor",value:t=>t.targetPosition},getColor:{type:"accessor",value:[0,0,0,255]},getWidth:{type:"accessor",value:1},widthUnits:"pixels",widthScale:{type:"number",value:1,min:0},widthMinPixels:{type:"number",value:0,min:0},widthMaxPixels:{type:"number",value:Number.MAX_SAFE_INTEGER,min:0}};class d extends i.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME line-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 instanceSourcePositions;\nattribute vec3 instanceTargetPositions;\nattribute vec3 instanceSourcePositions64Low;\nattribute vec3 instanceTargetPositions64Low;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\n\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform float useShortestPath;\nuniform int widthUnits;\n\nvarying vec4 vColor;\nvarying vec2 uv;\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  return dir_screenspace * offset_direction * width / 2.0;\n}\n\nvec3 splitLine(vec3 a, vec3 b, float x) {\n  float t = (x - a.x) / (b.x - a.x);\n  return vec3(x, mix(a.yz, b.yz, t));\n}\n\nvoid main(void) {\n  geometry.worldPosition = instanceSourcePositions;\n  geometry.worldPositionAlt = instanceTargetPositions;\n\n  vec3 source_world = instanceSourcePositions;\n  vec3 target_world = instanceTargetPositions;\n  vec3 source_world_64low = instanceSourcePositions64Low;\n  vec3 target_world_64low = instanceTargetPositions64Low;\n\n  if (useShortestPath > 0.5 || useShortestPath < -0.5) {\n    source_world.x = mod(source_world.x + 180., 360.0) - 180.;\n    target_world.x = mod(target_world.x + 180., 360.0) - 180.;\n    float deltaLng = target_world.x - source_world.x;\n\n    if (deltaLng * useShortestPath > 180.) {\n      source_world.x += 360. * useShortestPath;\n      source_world = splitLine(source_world, target_world, 180. * useShortestPath);\n      source_world_64low = vec3(0.0);\n    } else if (deltaLng * useShortestPath < -180.) {\n      target_world.x += 360. * useShortestPath;\n      target_world = splitLine(source_world, target_world, 180. * useShortestPath);\n      target_world_64low = vec3(0.0);\n    } else if (useShortestPath < 0.) {\n      gl_Position = vec4(0.);\n      return;\n    }\n  }\n  vec4 source_commonspace;\n  vec4 target_commonspace;\n  vec4 source = project_position_to_clipspace(source_world, source_world_64low, vec3(0.), source_commonspace);\n  vec4 target = project_position_to_clipspace(target_world, target_world_64low, vec3(0.), target_commonspace);\n  float segmentIndex = positions.x;\n  vec4 p = mix(source, target, segmentIndex);\n  geometry.position = mix(source_commonspace, target_commonspace, segmentIndex);\n  uv = positions.xy;\n  geometry.uv = uv;\n  geometry.pickingColor = instancePickingColors;\n  float widthPixels = clamp(\n    project_size_to_pixel(instanceWidths * widthScale, widthUnits),\n    widthMinPixels, widthMaxPixels\n  );\n  vec3 offset = vec3(\n    getExtrusionOffset(target.xy - source.xy, positions.y, widthPixels),\n    0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  DECKGL_FILTER_GL_POSITION(p, geometry);\n  gl_Position = p + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\n  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#define SHADER_NAME line-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[o.Z,r.Z]})}get wrapLongitude(){return!1}initializeState(){this.getAttributeManager().addInstanced({instanceSourcePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getSourcePosition"},instanceTargetPositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getTargetPosition"},instanceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getColor",defaultValue:[0,0,0,255]},instanceWidths:{size:1,transition:!0,accessor:"getWidth",defaultValue:1}})}updateState(t){if(super.updateState(t),t.changeFlags.extensionsChanged){var e;const{gl:t}=this.context;null==(e=this.state.model)||e.delete(),this.state.model=this._getModel(t),this.getAttributeManager().invalidateAll()}}draw(t){let{uniforms:e}=t;const{widthUnits:n,widthScale:i,widthMinPixels:o,widthMaxPixels:r,wrapLongitude:a}=this.props;this.state.model.setUniforms(e).setUniforms({widthUnits:s.iI[n],widthScale:i,widthMinPixels:o,widthMaxPixels:r,useShortestPath:a?1:0}).draw(),a&&this.state.model.setUniforms({useShortestPath:-1}).draw()}_getModel(t){return new a.Z(t,{...this.getShaders(),id:this.props.id,geometry:new l.Z({drawMode:5,attributes:{positions:new Float32Array([0,-1,0,0,1,0,1,-1,0,1,1,0])}}),isInstanced:!0})}}d.layerName="LineLayer",d.defaultProps=c},52329:(t,e,n)=>{"use strict";n.d(e,{Z:()=>m});var i=n(47251),o=n(18056),r=n(71693),s=n(43631),a=n(95321),l=n(15804),c=n(68318),d=n(59021);class p extends c.Z{constructor(t){super({...t,attributes:{positions:{size:3,padding:18,initialize:!0,type:t.fp64?Float64Array:Float32Array},segmentTypes:{size:1,type:Uint8ClampedArray}}})}get(t){return this.attributes[t]}getGeometryFromBuffer(t){return this.normalize?super.getGeometryFromBuffer(t):null}normalizeGeometry(t){return this.normalize?function(t,e,n,i){let o;if(Array.isArray(t[0])){const n=t.length*e;o=new Array(n);for(let i=0;i<t.length;i++)for(let n=0;n<e;n++)o[i*e+n]=t[i][n]||0}else o=t;return n?(0,d.dj)(o,{size:e,gridResolution:n}):i?(0,d.ct)(o,{size:e}):o}(t,this.positionSize,this.opts.resolution,this.opts.wrapLongitude):t}getGeometrySize(t){if(u(t)){let e=0;for(const n of t)e+=this.getGeometrySize(n);return e}const e=this.getPathLength(t);return e<2?0:this.isClosed(t)?e<3?0:e+2:e}updateGeometryAttributes(t,e){if(0!==e.geometrySize)if(t&&u(t))for(const n of t){const t=this.getGeometrySize(n);e.geometrySize=t,this.updateGeometryAttributes(n,e),e.vertexStart+=t}else this._updateSegmentTypes(t,e),this._updatePositions(t,e)}_updateSegmentTypes(t,e){const n=this.attributes.segmentTypes,i=!!t&&this.isClosed(t),{vertexStart:o,geometrySize:r}=e;n.fill(0,o,o+r),i?(n[o]=4,n[o+r-2]=4):(n[o]+=1,n[o+r-2]+=2),n[o+r-1]=4}_updatePositions(t,e){const{positions:n}=this.attributes;if(!n||!t)return;const{vertexStart:i,geometrySize:o}=e,r=new Array(3);for(let s=i,a=0;a<o;s++,a++)this.getPointOnPath(t,a,r),n[3*s]=r[0],n[3*s+1]=r[1],n[3*s+2]=r[2]}getPathLength(t){return t.length/this.positionSize}getPointOnPath(t,e,n){void 0===n&&(n=[]);const{positionSize:i}=this;e*i>=t.length&&(e+=1-t.length/i);const o=e*i;return n[0]=t[o],n[1]=t[o+1],n[2]=3===i&&t[o+2]||0,n}isClosed(t){if(!this.normalize)return Boolean(this.opts.loop);const{positionSize:e}=this,n=t.length-e;return t[0]===t[n]&&t[1]===t[n+1]&&(2===e||t[2]===t[n+2])}}function u(t){return Array.isArray(t[0])}const h=[0,0,0,255],g={widthUnits:"meters",widthScale:{type:"number",min:0,value:1},widthMinPixels:{type:"number",min:0,value:0},widthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},jointRounded:!1,capRounded:!1,miterLimit:{type:"number",min:0,value:4},billboard:!1,_pathType:null,getPath:{type:"accessor",value:t=>t.path},getColor:{type:"accessor",value:h},getWidth:{type:"accessor",value:1},rounded:{deprecatedFor:["jointRounded","capRounded"]}},f={enter:(t,e)=>e.length?e.subarray(e.length-t.length):t};class m extends i.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME path-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute float instanceTypes;\nattribute vec3 instanceStartPositions;\nattribute vec3 instanceEndPositions;\nattribute vec3 instanceLeftPositions;\nattribute vec3 instanceRightPositions;\nattribute vec3 instanceLeftPositions64Low;\nattribute vec3 instanceStartPositions64Low;\nattribute vec3 instanceEndPositions64Low;\nattribute vec3 instanceRightPositions64Low;\nattribute float instanceStrokeWidths;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\n\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform float jointType;\nuniform float capType;\nuniform float miterLimit;\nuniform bool billboard;\nuniform int widthUnits;\n\nuniform float opacity;\n\nvarying vec4 vColor;\nvarying vec2 vCornerOffset;\nvarying float vMiterLength;\nvarying vec2 vPathPosition;\nvarying float vPathLength;\nvarying float vJointType;\n\nconst float EPSILON = 0.001;\nconst vec3 ZERO_OFFSET = vec3(0.0);\n\nfloat flipIfTrue(bool flag) {\n  return -(float(flag) * 2. - 1.);\n}\nvec3 getLineJoinOffset(\n  vec3 prevPoint, vec3 currPoint, vec3 nextPoint,\n  vec2 width\n) {\n  bool isEnd = positions.x > 0.0;\n  float sideOfPath = positions.y;\n  float isJoint = float(sideOfPath == 0.0);\n\n  vec3 deltaA3 = (currPoint - prevPoint);\n  vec3 deltaB3 = (nextPoint - currPoint);\n\n  mat3 rotationMatrix;\n  bool needsRotation = !billboard && project_needs_rotation(currPoint, rotationMatrix);\n  if (needsRotation) {\n    deltaA3 = deltaA3 * rotationMatrix;\n    deltaB3 = deltaB3 * rotationMatrix;\n  }\n  vec2 deltaA = deltaA3.xy / width;\n  vec2 deltaB = deltaB3.xy / width;\n\n  float lenA = length(deltaA);\n  float lenB = length(deltaB);\n\n  vec2 dirA = lenA > 0. ? normalize(deltaA) : vec2(0.0, 0.0);\n  vec2 dirB = lenB > 0. ? normalize(deltaB) : vec2(0.0, 0.0);\n\n  vec2 perpA = vec2(-dirA.y, dirA.x);\n  vec2 perpB = vec2(-dirB.y, dirB.x);\n  vec2 tangent = dirA + dirB;\n  tangent = length(tangent) > 0. ? normalize(tangent) : perpA;\n  vec2 miterVec = vec2(-tangent.y, tangent.x);\n  vec2 dir = isEnd ? dirA : dirB;\n  vec2 perp = isEnd ? perpA : perpB;\n  float L = isEnd ? lenA : lenB;\n  float sinHalfA = abs(dot(miterVec, perp));\n  float cosHalfA = abs(dot(dirA, miterVec));\n  float turnDirection = flipIfTrue(dirA.x * dirB.y >= dirA.y * dirB.x);\n  float cornerPosition = sideOfPath * turnDirection;\n\n  float miterSize = 1.0 / max(sinHalfA, EPSILON);\n  miterSize = mix(\n    min(miterSize, max(lenA, lenB) / max(cosHalfA, EPSILON)),\n    miterSize,\n    step(0.0, cornerPosition)\n  );\n\n  vec2 offsetVec = mix(miterVec * miterSize, perp, step(0.5, cornerPosition))\n    * (sideOfPath + isJoint * turnDirection);\n  bool isStartCap = lenA == 0.0 || (!isEnd && (instanceTypes == 1.0 || instanceTypes == 3.0));\n  bool isEndCap = lenB == 0.0 || (isEnd && (instanceTypes == 2.0 || instanceTypes == 3.0));\n  bool isCap = isStartCap || isEndCap;\n  if (isCap) {\n    offsetVec = mix(perp * sideOfPath, dir * capType * 4.0 * flipIfTrue(isStartCap), isJoint);\n    vJointType = capType;\n  } else {\n    vJointType = jointType;\n  }\n  vPathLength = L;\n  vCornerOffset = offsetVec;\n  vMiterLength = dot(vCornerOffset, miterVec * turnDirection);\n  vMiterLength = isCap ? isJoint : vMiterLength;\n\n  vec2 offsetFromStartOfPath = vCornerOffset + deltaA * float(isEnd);\n  vPathPosition = vec2(\n    dot(offsetFromStartOfPath, perp),\n    dot(offsetFromStartOfPath, dir)\n  );\n  geometry.uv = vPathPosition;\n\n  float isValid = step(instanceTypes, 3.5);\n  vec3 offset = vec3(offsetVec * width * isValid, 0.0);\n\n  if (needsRotation) {\n    offset = rotationMatrix * offset;\n  }\n  return offset;\n}\nvoid clipLine(inout vec4 position, vec4 refPosition) {\n  if (position.w < EPSILON) {\n    float r = (EPSILON - refPosition.w) / (position.w - refPosition.w);\n    position = refPosition + (position - refPosition) * r;\n  }\n}\n\nvoid main() {\n  geometry.pickingColor = instancePickingColors;\n\n  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity);\n\n  float isEnd = positions.x;\n\n  vec3 prevPosition = mix(instanceLeftPositions, instanceStartPositions, isEnd);\n  vec3 prevPosition64Low = mix(instanceLeftPositions64Low, instanceStartPositions64Low, isEnd);\n\n  vec3 currPosition = mix(instanceStartPositions, instanceEndPositions, isEnd);\n  vec3 currPosition64Low = mix(instanceStartPositions64Low, instanceEndPositions64Low, isEnd);\n\n  vec3 nextPosition = mix(instanceEndPositions, instanceRightPositions, isEnd);\n  vec3 nextPosition64Low = mix(instanceEndPositions64Low, instanceRightPositions64Low, isEnd);\n\n  geometry.worldPosition = currPosition;\n  vec2 widthPixels = vec2(clamp(\n    project_size_to_pixel(instanceStrokeWidths * widthScale, widthUnits),\n    widthMinPixels, widthMaxPixels) / 2.0);\n  vec3 width;\n\n  if (billboard) {\n    vec4 prevPositionScreen = project_position_to_clipspace(prevPosition, prevPosition64Low, ZERO_OFFSET);\n    vec4 currPositionScreen = project_position_to_clipspace(currPosition, currPosition64Low, ZERO_OFFSET, geometry.position);\n    vec4 nextPositionScreen = project_position_to_clipspace(nextPosition, nextPosition64Low, ZERO_OFFSET);\n\n    clipLine(prevPositionScreen, currPositionScreen);\n    clipLine(nextPositionScreen, currPositionScreen);\n    clipLine(currPositionScreen, mix(nextPositionScreen, prevPositionScreen, isEnd));\n\n    width = vec3(widthPixels, 0.0);\n    DECKGL_FILTER_SIZE(width, geometry);\n\n    vec3 offset = getLineJoinOffset(\n      prevPositionScreen.xyz / prevPositionScreen.w,\n      currPositionScreen.xyz / currPositionScreen.w,\n      nextPositionScreen.xyz / nextPositionScreen.w,\n      project_pixel_size_to_clipspace(width.xy)\n    );\n\n    DECKGL_FILTER_GL_POSITION(currPositionScreen, geometry);\n    gl_Position = vec4(currPositionScreen.xyz + offset * currPositionScreen.w, currPositionScreen.w);\n  } else {\n    prevPosition = project_position(prevPosition, prevPosition64Low);\n    currPosition = project_position(currPosition, currPosition64Low);\n    nextPosition = project_position(nextPosition, nextPosition64Low);\n\n    width = vec3(project_pixel_size(widthPixels), 0.0);\n    DECKGL_FILTER_SIZE(width, geometry);\n\n    vec3 offset = getLineJoinOffset(prevPosition, currPosition, nextPosition, width.xy);\n    geometry.position = vec4(currPosition + offset, 1.0);\n    gl_Position = project_common_position_to_clipspace(geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  }\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#define SHADER_NAME path-layer-fragment-shader\n\nprecision highp float;\n\nuniform float miterLimit;\n\nvarying vec4 vColor;\nvarying vec2 vCornerOffset;\nvarying float vMiterLength;\nvarying vec2 vPathPosition;\nvarying float vPathLength;\nvarying float vJointType;\n\nvoid main(void) {\n  geometry.uv = vPathPosition;\n\n  if (vPathPosition.y < 0.0 || vPathPosition.y > vPathLength) {\n    if (vJointType > 0.5 && length(vCornerOffset) > 1.0) {\n      discard;\n    }\n    if (vJointType < 0.5 && vMiterLength > miterLimit + 1.0) {\n      discard;\n    }\n  }\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[o.Z,r.Z]})}get wrapLongitude(){return!1}initializeState(){this.getAttributeManager().addInstanced({positions:{size:3,vertexOffset:1,type:5130,fp64:this.use64bitPositions(),transition:f,accessor:"getPath",update:this.calculatePositions,noAlloc:true,shaderAttributes:{instanceLeftPositions:{vertexOffset:0},instanceStartPositions:{vertexOffset:1},instanceEndPositions:{vertexOffset:2},instanceRightPositions:{vertexOffset:3}}},instanceTypes:{size:1,type:5121,update:this.calculateSegmentTypes,noAlloc:true},instanceStrokeWidths:{size:1,accessor:"getWidth",transition:f,defaultValue:1},instanceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,accessor:"getColor",transition:f,defaultValue:h},instancePickingColors:{size:3,type:5121,accessor:(t,e)=>{let{index:n,target:i}=e;return this.encodePickingColor(t&&t.__source?t.__source.index:n,i)}}}),this.setState({pathTesselator:new p({fp64:this.use64bitPositions()})})}updateState(t){super.updateState(t);const{props:e,changeFlags:n}=t,i=this.getAttributeManager();if(n.dataChanged||n.updateTriggersChanged&&(n.updateTriggersChanged.all||n.updateTriggersChanged.getPath)){const{pathTesselator:t}=this.state,o=e.data.attributes||{};t.updateGeometry({data:e.data,geometryBuffer:o.getPath,buffers:o,normalize:!e._pathType,loop:"loop"===e._pathType,getGeometry:e.getPath,positionFormat:e.positionFormat,wrapLongitude:e.wrapLongitude,resolution:this.context.viewport.resolution,dataChanged:n.dataChanged}),this.setState({numInstances:t.instanceCount,startIndices:t.vertexStarts}),n.dataChanged||i.invalidateAll()}if(n.extensionsChanged){var o;const{gl:t}=this.context;null==(o=this.state.model)||o.delete(),this.state.model=this._getModel(t),i.invalidateAll()}}getPickingInfo(t){const e=super.getPickingInfo(t),{index:n}=e,{data:i}=this.props;return i[0]&&i[0].__source&&(e.object=i.find((t=>t.__source.index===n))),e}disablePickingIndex(t){const{data:e}=this.props;if(e[0]&&e[0].__source)for(let n=0;n<e.length;n++)e[n].__source.index===t&&this._disablePickingIndex(n);else this._disablePickingIndex(t)}draw(t){let{uniforms:e}=t;const{jointRounded:n,capRounded:i,billboard:o,miterLimit:r,widthUnits:a,widthScale:l,widthMinPixels:c,widthMaxPixels:d}=this.props;this.state.model.setUniforms(e).setUniforms({jointType:Number(n),capType:Number(i),billboard:o,widthUnits:s.iI[a],widthScale:l,miterLimit:r,widthMinPixels:c,widthMaxPixels:d}).draw()}_getModel(t){return new a.Z(t,{...this.getShaders(),id:this.props.id,geometry:new l.Z({drawMode:4,attributes:{indices:new Uint16Array([0,1,2,1,4,2,1,3,4,3,5,4]),positions:{value:new Float32Array([0,0,0,-1,0,1,1,-1,1,1,1,0]),size:2}}}),isInstanced:!0})}calculatePositions(t){const{pathTesselator:e}=this.state;t.startIndices=e.vertexStarts,t.value=e.get("positions")}calculateSegmentTypes(t){const{pathTesselator:e}=this.state;t.startIndices=e.vertexStarts,t.value=e.get("segmentTypes")}}m.defaultProps=g,m.layerName="PathLayer"},76144:(t,e,n)=>{"use strict";n.d(e,{Z:()=>h});var i=n(47251),o=n(18056),r=n(89771),s=n(71693),a=n(43631),l=n(95321),c=n(15804);const d=[0,0,0,255],p=[0,0,1],u={sizeUnits:"pixels",pointSize:{type:"number",min:0,value:10},getPosition:{type:"accessor",value:t=>t.position},getNormal:{type:"accessor",value:p},getColor:{type:"accessor",value:d},material:!0,radiusPixels:{deprecatedFor:"pointSize"}};class h extends i.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME point-cloud-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 instanceNormals;\nattribute vec4 instanceColors;\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radiusPixels;\nuniform int sizeUnits;\n\nvarying vec4 vColor;\nvarying vec2 unitPosition;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.normal = project_normal(instanceNormals);\n  unitPosition = positions.xy;\n  geometry.uv = unitPosition;\n  geometry.pickingColor = instancePickingColors;\n  vec3 offset = vec3(positions.xy * project_size_to_pixel(radiusPixels, sizeUnits), 0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n\n  gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.), geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n  vec3 lightColor = lighting_getLightColor(instanceColors.rgb, project_uCameraPosition, geometry.position.xyz, geometry.normal);\n  vColor = vec4(lightColor, instanceColors.a * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#define SHADER_NAME point-cloud-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 unitPosition;\n\nvoid main(void) {\n  geometry.uv = unitPosition;\n\n  float distToCenter = length(unitPosition);\n\n  if (distToCenter > 1.0) {\n    discard;\n  }\n\n  gl_FragColor = vColor;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[o.Z,r.N,s.Z]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceNormals:{size:3,transition:!0,accessor:"getNormal",defaultValue:p},instanceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getColor",defaultValue:d}})}updateState(t){const{changeFlags:e,props:n}=t;if(super.updateState(t),e.extensionsChanged){var i;const{gl:t}=this.context;null==(i=this.state.model)||i.delete(),this.state.model=this._getModel(t),this.getAttributeManager().invalidateAll()}e.dataChanged&&function(t){const{header:e,attributes:n}=t;e&&n&&(t.length=e.vertexCount,n.POSITION&&(n.instancePositions=n.POSITION),n.NORMAL&&(n.instanceNormals=n.NORMAL),n.COLOR_0&&(n.instanceColors=n.COLOR_0))}(n.data)}draw(t){let{uniforms:e}=t;const{pointSize:n,sizeUnits:i}=this.props;this.state.model.setUniforms(e).setUniforms({sizeUnits:a.iI[i],radiusPixels:n}).draw()}_getModel(t){const e=[];for(let n=0;n<3;n++){const t=n/3*Math.PI*2;e.push(2*Math.cos(t),2*Math.sin(t),0)}return new l.Z(t,{...this.getShaders(),id:this.props.id,geometry:new c.Z({drawMode:4,attributes:{positions:new Float32Array(e)}}),isInstanced:!0})}}h.layerName="PointCloudLayer",h.defaultProps=u},48148:(t,e,n)=>{"use strict";n.d(e,{Z:()=>u});var i=n(19871),o=n(89745),r=n(37944),s=n(57654),a=n(52329),l=n(91793),c=n(46025);const d=[0,0,0,255],p={stroked:!0,filled:!0,extruded:!1,elevationScale:1,wireframe:!1,_normalize:!0,_windingOrder:"CW",lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,lineJointRounded:!1,lineMiterLimit:4,getPolygon:{type:"accessor",value:t=>t.polygon},getFillColor:{type:"accessor",value:[0,0,0,255]},getLineColor:{type:"accessor",value:d},getLineWidth:{type:"accessor",value:1},getElevation:{type:"accessor",value:1e3},material:!0};class u extends i.Z{initializeState(){this.state={paths:[]},this.props.getLineDashArray&&o.Z.removed("getLineDashArray","PathStyleExtension")()}updateState(t){let{changeFlags:e}=t;const n=e.dataChanged||e.updateTriggersChanged&&(e.updateTriggersChanged.all||e.updateTriggersChanged.getPolygon);if(n&&Array.isArray(e.dataChanged)){const t=this.state.paths.slice(),n=e.dataChanged.map((e=>(0,c.b)({data:t,getIndex:t=>t.__source.index,dataRange:e,replace:this._getPaths(e)})));this.setState({paths:t,pathsDiff:n})}else n&&this.setState({paths:this._getPaths(),pathsDiff:null})}_getPaths(t){void 0===t&&(t={});const{data:e,getPolygon:n,positionFormat:i,_normalize:o}=this.props,s=[],a="XY"===i?2:3,{startRow:c,endRow:d}=t,{iterable:p,objectInfo:u}=(0,r.jB)(e,c,d);for(const r of p){u.index++;let t=n(r,u);o&&(t=l.Fv(t,a));const{holeIndices:e}=t,i=t.positions||t;if(e)for(let n=0;n<=e.length;n++){const t=i.slice(e[n-1]||0,e[n]||i.length);s.push(this.getSubLayerRow({path:t},r,u.index))}else s.push(this.getSubLayerRow({path:i},r,u.index))}return s}renderLayers(){const{data:t,_dataDiff:e,stroked:n,filled:i,extruded:o,wireframe:r,_normalize:l,_windingOrder:c,elevationScale:p,transitions:u,positionFormat:h}=this.props,{lineWidthUnits:g,lineWidthScale:f,lineWidthMinPixels:m,lineWidthMaxPixels:y,lineJointRounded:v,lineMiterLimit:_,lineDashJustified:w}=this.props,{getFillColor:P,getLineColor:b,getLineWidth:x,getLineDashArray:C,getElevation:k,getPolygon:S,updateTriggers:M,material:L}=this.props,{paths:N,pathsDiff:T}=this.state,E=this.getSubLayerClass("fill",s.Z),A=this.getSubLayerClass("stroke",a.Z),I=this.shouldRenderSubLayer("fill",N)&&new E({_dataDiff:e,extruded:o,elevationScale:p,filled:i,wireframe:r,_normalize:l,_windingOrder:c,getElevation:k,getFillColor:P,getLineColor:o&&r?b:d,material:L,transitions:u},this.getSubLayerProps({id:"fill",updateTriggers:M&&{getPolygon:M.getPolygon,getElevation:M.getElevation,getFillColor:M.getFillColor,lineColors:o&&r,getLineColor:M.getLineColor}}),{data:t,positionFormat:h,getPolygon:S});return[!o&&I,!o&&n&&this.shouldRenderSubLayer("stroke",N)&&new A({_dataDiff:T&&(()=>T),widthUnits:g,widthScale:f,widthMinPixels:m,widthMaxPixels:y,jointRounded:v,miterLimit:_,dashJustified:w,_pathType:"loop",transitions:u&&{getWidth:u.getLineWidth,getColor:u.getLineColor,getPath:u.getPolygon},getColor:this.getSubLayerAccessor(b),getWidth:this.getSubLayerAccessor(x),getDashArray:this.getSubLayerAccessor(C)},this.getSubLayerProps({id:"stroke",updateTriggers:M&&{getWidth:M.getLineWidth,getColor:M.getLineColor,getDashArray:M.getLineDashArray}}),{data:N,positionFormat:h,getPath:t=>t.path}),o&&I]}}u.layerName="PolygonLayer",u.defaultProps=p},24309:(t,e,n)=>{"use strict";n.d(e,{Z:()=>p});var i=n(47251),o=n(18056),r=n(71693),s=n(43631),a=n(95321),l=n(15804);const c=[0,0,0,255],d={radiusUnits:"meters",radiusScale:{type:"number",min:0,value:1},radiusMinPixels:{type:"number",min:0,value:0},radiusMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},lineWidthUnits:"meters",lineWidthScale:{type:"number",min:0,value:1},lineWidthMinPixels:{type:"number",min:0,value:0},lineWidthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},stroked:!1,filled:!0,billboard:!1,antialiasing:!0,getPosition:{type:"accessor",value:t=>t.position},getRadius:{type:"accessor",value:1},getFillColor:{type:"accessor",value:c},getLineColor:{type:"accessor",value:c},getLineWidth:{type:"accessor",value:1},strokeWidth:{deprecatedFor:"getLineWidth"},outline:{deprecatedFor:"stroked"},getColor:{deprecatedFor:["getFillColor","getLineColor"]}};class p extends i.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME scatterplot-layer-vertex-shader\n\nattribute vec3 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceRadius;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radiusScale;\nuniform float radiusMinPixels;\nuniform float radiusMaxPixels;\nuniform float lineWidthScale;\nuniform float lineWidthMinPixels;\nuniform float lineWidthMaxPixels;\nuniform float stroked;\nuniform bool filled;\nuniform bool antialiasing;\nuniform bool billboard;\nuniform int radiusUnits;\nuniform int lineWidthUnits;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  outerRadiusPixels = clamp(\n    project_size_to_pixel(radiusScale * instanceRadius, radiusUnits),\n    radiusMinPixels, radiusMaxPixels\n  );\n  float lineWidthPixels = clamp(\n    project_size_to_pixel(lineWidthScale * instanceLineWidths, lineWidthUnits),\n    lineWidthMinPixels, lineWidthMaxPixels\n  );\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\n  float edgePadding = antialiasing ? (outerRadiusPixels + SMOOTH_EDGE_RADIUS) / outerRadiusPixels : 1.0;\n  unitPosition = edgePadding * positions.xy;\n  geometry.uv = unitPosition;\n  geometry.pickingColor = instancePickingColors;\n\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\n  \n  if (billboard) {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n    vec3 offset = edgePadding * positions * outerRadiusPixels;\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n  } else {\n    vec3 offset = edgePadding * positions * project_pixel_size(outerRadiusPixels);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  }\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n",fs:"#define SHADER_NAME scatterplot-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool filled;\nuniform float stroked;\nuniform bool antialiasing;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\nvoid main(void) {\n  geometry.uv = unitPosition;\n\n  float distToCenter = length(unitPosition) * outerRadiusPixels;\n  float inCircle = antialiasing ? \n    smoothedge(distToCenter, outerRadiusPixels) : \n    step(distToCenter, outerRadiusPixels);\n\n  if (inCircle == 0.0) {\n    discard;\n  }\n\n  if (stroked > 0.5) {\n    float isLine = antialiasing ? \n      smoothedge(innerUnitRadius * outerRadiusPixels, distToCenter) :\n      step(innerUnitRadius * outerRadiusPixels, distToCenter);\n\n    if (filled) {\n      gl_FragColor = mix(vFillColor, vLineColor, isLine);\n    } else {\n      if (isLine == 0.0) {\n        discard;\n      }\n      gl_FragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);\n    }\n  } else if (filled) {\n    gl_FragColor = vFillColor;\n  } else {\n    discard;\n  }\n\n  gl_FragColor.a *= inCircle;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[o.Z,r.Z]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceRadius:{size:1,transition:!0,accessor:"getRadius",defaultValue:1},instanceFillColors:{size:this.props.colorFormat.length,transition:!0,normalized:!0,type:5121,accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:this.props.colorFormat.length,transition:!0,normalized:!0,type:5121,accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState(t){if(super.updateState(t),t.changeFlags.extensionsChanged){var e;const{gl:t}=this.context;null==(e=this.state.model)||e.delete(),this.state.model=this._getModel(t),this.getAttributeManager().invalidateAll()}}draw(t){let{uniforms:e}=t;const{radiusUnits:n,radiusScale:i,radiusMinPixels:o,radiusMaxPixels:r,stroked:a,filled:l,billboard:c,antialiasing:d,lineWidthUnits:p,lineWidthScale:u,lineWidthMinPixels:h,lineWidthMaxPixels:g}=this.props;this.state.model.setUniforms(e).setUniforms({stroked:a?1:0,filled:l,billboard:c,antialiasing:d,radiusUnits:s.iI[n],radiusScale:i,radiusMinPixels:o,radiusMaxPixels:r,lineWidthUnits:s.iI[p],lineWidthScale:u,lineWidthMinPixels:h,lineWidthMaxPixels:g}).draw()}_getModel(t){return new a.Z(t,{...this.getShaders(),id:this.props.id,geometry:new l.Z({drawMode:6,vertexCount:4,attributes:{positions:{size:3,value:new Float32Array([-1,-1,0,1,-1,0,1,1,0,-1,1,0])}}}),isInstanced:!0})}}p.defaultProps=d,p.layerName="ScatterplotLayer"},91793:(t,e,n)=>{"use strict";n.d(e,{Fv:()=>h,Gd:()=>d,k8:()=>c,mD:()=>m});var i=n(9187),o=n.n(i),r=n(59021);const s=r.wG.CLOCKWISE,a=r.wG.COUNTER_CLOCKWISE,l={isClosed:!0};function c(t){return"positions"in t?t.positions:t}function d(t){return"holeIndices"in t?t.holeIndices:null}function p(t,e,n,i,o){let s=e;const a=n.length;for(let r=0;r<a;r++)for(let e=0;e<i;e++)t[s++]=n[r][e]||0;if(!function(t){const e=t[0],n=t[t.length-1];return e[0]===n[0]&&e[1]===n[1]&&e[2]===n[2]}(n))for(let r=0;r<i;r++)t[s++]=n[0][r]||0;return l.start=e,l.end=s,l.size=i,(0,r.Ny)(t,o,l),s}function u(t,e,n,i,o,s,a){void 0===o&&(o=0);const c=(s=s||n.length)-o;if(c<=0)return e;let d=e;for(let r=0;r<c;r++)t[d++]=n[o+r];if(!function(t,e,n,i){for(let o=0;o<e;o++)if(t[n+o]!==t[i-e+o])return!1;return!0}(n,i,o,s))for(let r=0;r<i;r++)t[d++]=n[o+r];return l.start=e,l.end=d,l.size=i,(0,r.Ny)(t,a,l),d}function h(t,e){!function(t){if(t=t&&t.positions||t,!Array.isArray(t)&&!ArrayBuffer.isView(t))throw new Error("invalid polygon")}(t);const n=[],i=[];if("positions"in t){const{positions:o,holeIndices:r}=t;if(r){let t=0;for(let l=0;l<=r.length;l++)t=u(n,t,o,e,r[l-1],r[l],0===l?s:a),i.push(t);return i.pop(),{positions:n,holeIndices:i}}t=o}if(!function(t){return Array.isArray(t[0])}(t))return u(n,0,t,e,0,n.length,s),n;if(!function(t){return t.length>=1&&t[0].length>=2&&Number.isFinite(t[0][0])}(t)){let o=0;for(const[r,l]of t.entries())o=p(n,o,l,e,0===r?s:a),i.push(o);return i.pop(),{positions:n,holeIndices:i}}return p(n,0,t,e,s),n}function g(t,e,n){const i=t.length/3;let o=0;for(let r=0;r<i;r++){const s=(r+1)%i;o+=t[3*r+e]*t[3*s+n],o-=t[3*s+e]*t[3*r+n]}return Math.abs(o/2)}function f(t,e,n,i){const o=t.length/3;for(let r=0;r<o;r++){const o=3*r,s=t[o+0],a=t[o+1],l=t[o+2];t[o+e]=s,t[o+n]=a,t[o+i]=l}}function m(t,e,n,i){let r=d(t);r&&(r=r.map((t=>t/e)));let s=c(t);const a=i&&3===e;if(n){const t=s.length;s=s.slice();const i=[];for(let o=0;o<t;o+=e){i[0]=s[o],i[1]=s[o+1],a&&(i[2]=s[o+2]);const t=n(i);s[o]=t[0],s[o+1]=t[1],a&&(s[o+2]=t[2])}}if(a){const t=g(s,0,1),e=g(s,0,2),i=g(s,1,2);if(!t&&!e&&!i)return[];t>e&&t>i||(e>i?(n||(s=s.slice()),f(s,0,2,1)):(n||(s=s.slice()),f(s,1,2,0)))}return o()(s,r,e)}},57654:(t,e,n)=>{"use strict";n.d(e,{Z:()=>x});var i=n(47251),o=n(18056),r=n(89771),s=n(71693),a=n(43631),l=n(19227),c=n(83757),d=n(95321),p=n(15804),u=n(91793),h=n(68318),g=n(59021);class f extends h.Z{constructor(t){const{fp64:e,IndexType:n=Uint32Array}=t;super({...t,attributes:{positions:{size:3,type:e?Float64Array:Float32Array},vertexValid:{type:Uint8ClampedArray,size:1},indices:{type:n,size:1}}})}get(t){const{attributes:e}=this;return"indices"===t?e.indices&&e.indices.subarray(0,this.vertexCount):e[t]}updateGeometry(t){super.updateGeometry(t);const e=this.buffers.indices;if(e)this.vertexCount=(e.value||e).length;else if(this.data&&!this.getGeometry)throw new Error("missing indices buffer")}normalizeGeometry(t){if(this.normalize){const e=u.Fv(t,this.positionSize);return this.opts.resolution?(0,g.WZ)(u.k8(e),u.Gd(e),{size:this.positionSize,gridResolution:this.opts.resolution,edgeTypes:!0}):this.opts.wrapLongitude?(0,g.GU)(u.k8(e),u.Gd(e),{size:this.positionSize,maxLatitude:86,edgeTypes:!0}):e}return t}getGeometrySize(t){if(m(t)){let e=0;for(const n of t)e+=this.getGeometrySize(n);return e}return u.k8(t).length/this.positionSize}getGeometryFromBuffer(t){return this.normalize||!this.buffers.indices?super.getGeometryFromBuffer(t):null}updateGeometryAttributes(t,e){if(t&&m(t))for(const n of t){const t=this.getGeometrySize(n);e.geometrySize=t,this.updateGeometryAttributes(n,e),e.vertexStart+=t,e.indexStart=this.indexStarts[e.geometryIndex+1]}else this._updateIndices(t,e),this._updatePositions(t,e),this._updateVertexValid(t,e)}_updateIndices(t,e){let{geometryIndex:n,vertexStart:i,indexStart:o}=e;const{attributes:r,indexStarts:s,typedArrayManager:a}=this;let l=r.indices;if(!l||!t)return;let c=o;const d=u.mD(t,this.positionSize,this.opts.preproject,this.opts.full3d);l=a.allocate(l,o+d.length,{copy:!0});for(let p=0;p<d.length;p++)l[c++]=d[p]+i;s[n+1]=o+d.length,r.indices=l}_updatePositions(t,e){let{vertexStart:n,geometrySize:i}=e;const{attributes:{positions:o},positionSize:r}=this;if(!o||!t)return;const s=u.k8(t);for(let a=n,l=0;l<i;a++,l++){const t=s[l*r],e=s[l*r+1],n=r>2?s[l*r+2]:0;o[3*a]=t,o[3*a+1]=e,o[3*a+2]=n}}_updateVertexValid(t,e){let{vertexStart:n,geometrySize:i}=e;const{positionSize:o}=this,r=this.attributes.vertexValid,s=t&&u.Gd(t);if(t&&t.edgeTypes?r.set(t.edgeTypes,n):r.fill(1,n,n+i),s)for(let a=0;a<s.length;a++)r[n+s[a]/o-1]=0;r[n+i-1]=0}}function m(t){return Array.isArray(t)&&t.length>0&&!Number.isFinite(t[0])}const y="\nattribute vec2 vertexPositions;\nattribute float vertexValid;\n\nuniform bool extruded;\nuniform bool isWireframe;\nuniform float elevationScale;\nuniform float opacity;\n\nvarying vec4 vColor;\n\nstruct PolygonProps {\n  vec4 fillColors;\n  vec4 lineColors;\n  vec3 positions;\n  vec3 nextPositions;\n  vec3 pickingColors;\n  vec3 positions64Low;\n  vec3 nextPositions64Low;\n  float elevations;\n};\n\nvec3 project_offset_normal(vec3 vector) {\n  if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\n    project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSETS) {\n    return normalize(vector * project_uCommonUnitsPerWorldUnit);\n  }\n  return project_normal(vector);\n}\n\nvoid calculatePosition(PolygonProps props) {\n#ifdef IS_SIDE_VERTEX\n  if(vertexValid < 0.5){\n    gl_Position = vec4(0.);\n    return;\n  }\n#endif\n\n  vec3 pos;\n  vec3 pos64Low;\n  vec3 normal;\n  vec4 colors = isWireframe ? props.lineColors : props.fillColors;\n\n  geometry.worldPosition = props.positions;\n  geometry.worldPositionAlt = props.nextPositions;\n  geometry.pickingColor = props.pickingColors;\n\n#ifdef IS_SIDE_VERTEX\n  pos = mix(props.positions, props.nextPositions, vertexPositions.x);\n  pos64Low = mix(props.positions64Low, props.nextPositions64Low, vertexPositions.x);\n#else\n  pos = props.positions;\n  pos64Low = props.positions64Low;\n#endif\n\n  if (extruded) {\n    pos.z += props.elevations * vertexPositions.y * elevationScale;\n  }\n  gl_Position = project_position_to_clipspace(pos, pos64Low, vec3(0.), geometry.position);\n\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  if (extruded) {\n  #ifdef IS_SIDE_VERTEX\n    normal = vec3(\n      props.positions.y - props.nextPositions.y + (props.positions64Low.y - props.nextPositions64Low.y),\n      props.nextPositions.x - props.positions.x + (props.nextPositions64Low.x - props.positions64Low.x),\n      0.0);\n    normal = project_offset_normal(normal);\n  #else\n    normal = project_normal(vec3(0.0, 0.0, 1.0));\n  #endif\n    geometry.normal = normal;\n    vec3 lightColor = lighting_getLightColor(colors.rgb, project_uCameraPosition, geometry.position.xyz, normal);\n    vColor = vec4(lightColor, colors.a * opacity);\n  } else {\n    vColor = vec4(colors.rgb, colors.a * opacity);\n  }\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",v="#define SHADER_NAME solid-polygon-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 positions64Low;\nattribute float elevations;\nattribute vec4 fillColors;\nattribute vec4 lineColors;\nattribute vec3 pickingColors;\n\n"+y+"\n\nvoid main(void) {\n  PolygonProps props;\n\n  props.positions = positions;\n  props.positions64Low = positions64Low;\n  props.elevations = elevations;\n  props.fillColors = fillColors;\n  props.lineColors = lineColors;\n  props.pickingColors = pickingColors;\n\n  calculatePosition(props);\n}\n",_="#define SHADER_NAME solid-polygon-layer-vertex-shader-side\n#define IS_SIDE_VERTEX\n\n\nattribute vec3 instancePositions;\nattribute vec3 nextPositions;\nattribute vec3 instancePositions64Low;\nattribute vec3 nextPositions64Low;\nattribute float instanceElevations;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\n"+y+"\n\nvoid main(void) {\n  PolygonProps props;\n\n  #if RING_WINDING_ORDER_CW == 1\n    props.positions = instancePositions;\n    props.positions64Low = instancePositions64Low;\n    props.nextPositions = nextPositions;\n    props.nextPositions64Low = nextPositions64Low;\n  #else\n    props.positions = nextPositions;\n    props.positions64Low = nextPositions64Low;\n    props.nextPositions = instancePositions;\n    props.nextPositions64Low = instancePositions64Low;\n  #endif\n  props.elevations = instanceElevations;\n  props.fillColors = instanceFillColors;\n  props.lineColors = instanceLineColors;\n  props.pickingColors = instancePickingColors;\n\n  calculatePosition(props);\n}\n",w=[0,0,0,255],P={filled:!0,extruded:!1,wireframe:!1,_normalize:!0,_windingOrder:"CW",_full3d:!1,elevationScale:{type:"number",min:0,value:1},getPolygon:{type:"accessor",value:t=>t.polygon},getElevation:{type:"accessor",value:1e3},getFillColor:{type:"accessor",value:w},getLineColor:{type:"accessor",value:w},material:!0},b={enter:(t,e)=>e.length?e.subarray(e.length-t.length):t};class x extends i.Z{getShaders(t){return super.getShaders({vs:"top"===t?v:_,fs:"#define SHADER_NAME solid-polygon-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",defines:{RING_WINDING_ORDER_CW:this.props._normalize||"CCW"!==this.props._windingOrder?1:0},modules:[o.Z,r.N,s.Z]})}get wrapLongitude(){return!1}initializeState(){const{gl:t,viewport:e}=this.context;let{coordinateSystem:n}=this.props;const{_full3d:i}=this.props;let o;e.isGeospatial&&n===a.Df.DEFAULT&&(n=a.Df.LNGLAT),n===a.Df.LNGLAT&&(o=i?e.projectPosition.bind(e):e.projectFlat.bind(e)),this.setState({numInstances:0,polygonTesselator:new f({preproject:o,fp64:this.use64bitPositions(),IndexType:!t||(0,l.ag)(t,c.h.ELEMENT_INDEX_UINT32)?Uint32Array:Uint16Array})});const r=this.getAttributeManager(),s=!0;r.remove(["instancePickingColors"]),r.add({indices:{size:1,isIndexed:!0,update:this.calculateIndices,noAlloc:s},positions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:b,accessor:"getPolygon",update:this.calculatePositions,noAlloc:s,shaderAttributes:{positions:{vertexOffset:0,divisor:0},instancePositions:{vertexOffset:0,divisor:1},nextPositions:{vertexOffset:1,divisor:1}}},vertexValid:{size:1,divisor:1,type:5121,update:this.calculateVertexValid,noAlloc:s},elevations:{size:1,transition:b,accessor:"getElevation",shaderAttributes:{elevations:{divisor:0},instanceElevations:{divisor:1}}},fillColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:b,accessor:"getFillColor",defaultValue:w,shaderAttributes:{fillColors:{divisor:0},instanceFillColors:{divisor:1}}},lineColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:b,accessor:"getLineColor",defaultValue:w,shaderAttributes:{lineColors:{divisor:0},instanceLineColors:{divisor:1}}},pickingColors:{size:3,type:5121,accessor:(t,e)=>{let{index:n,target:i}=e;return this.encodePickingColor(t&&t.__source?t.__source.index:n,i)},shaderAttributes:{pickingColors:{divisor:0},instancePickingColors:{divisor:1}}}})}getPickingInfo(t){const e=super.getPickingInfo(t),{index:n}=e,{data:i}=this.props;return i[0]&&i[0].__source&&(e.object=i.find((t=>t.__source.index===n))),e}disablePickingIndex(t){const{data:e}=this.props;if(e[0]&&e[0].__source)for(let n=0;n<e.length;n++)e[n].__source.index===t&&this._disablePickingIndex(n);else this._disablePickingIndex(t)}draw(t){let{uniforms:e}=t;const{extruded:n,filled:i,wireframe:o,elevationScale:r}=this.props,{topModel:s,sideModel:a,polygonTesselator:l}=this.state,c={...e,extruded:Boolean(n),elevationScale:r};a&&(a.setInstanceCount(l.instanceCount-1),a.setUniforms(c),o&&(a.setDrawMode(3),a.setUniforms({isWireframe:!0}).draw()),i&&(a.setDrawMode(6),a.setUniforms({isWireframe:!1}).draw())),s&&(s.setVertexCount(l.vertexCount),s.setUniforms(c).draw())}updateState(t){super.updateState(t),this.updateGeometry(t);const{props:e,oldProps:n,changeFlags:i}=t,o=this.getAttributeManager();var r;(i.extensionsChanged||e.filled!==n.filled||e.extruded!==n.extruded)&&(null==(r=this.state.models)||r.forEach((t=>t.delete())),this.setState(this._getModels(this.context.gl)),o.invalidateAll())}updateGeometry(t){let{props:e,oldProps:n,changeFlags:i}=t;if(i.dataChanged||i.updateTriggersChanged&&(i.updateTriggersChanged.all||i.updateTriggersChanged.getPolygon)){const{polygonTesselator:t}=this.state,n=e.data.attributes||{};t.updateGeometry({data:e.data,normalize:e._normalize,geometryBuffer:n.getPolygon,buffers:n,getGeometry:e.getPolygon,positionFormat:e.positionFormat,wrapLongitude:e.wrapLongitude,resolution:this.context.viewport.resolution,fp64:this.use64bitPositions(),dataChanged:i.dataChanged,full3d:e._full3d}),this.setState({numInstances:t.instanceCount,startIndices:t.vertexStarts}),i.dataChanged||this.getAttributeManager().invalidateAll()}}_getModels(t){const{id:e,filled:n,extruded:i}=this.props;let o,r;if(n){const n=this.getShaders("top");n.defines.NON_INSTANCED_MODEL=1,o=new d.Z(t,{...n,id:e+"-top",drawMode:4,attributes:{vertexPositions:new Float32Array([0,1])},uniforms:{isWireframe:!1,isSideVertex:!1},vertexCount:0,isIndexed:!0})}return i&&(r=new d.Z(t,{...this.getShaders("side"),id:e+"-side",geometry:new p.Z({drawMode:1,vertexCount:4,attributes:{vertexPositions:{size:2,value:new Float32Array([1,0,0,0,0,1,1,1])}}}),instanceCount:0,isInstanced:1}),r.userData.excludeAttributes={indices:!0}),{models:[r,o].filter(Boolean),topModel:o,sideModel:r}}calculateIndices(t){const{polygonTesselator:e}=this.state;t.startIndices=e.indexStarts,t.value=e.get("indices")}calculatePositions(t){const{polygonTesselator:e}=this.state;t.startIndices=e.vertexStarts,t.value=e.get("positions")}calculateVertexValid(t){t.value=this.state.polygonTesselator.get("vertexValid")}}x.defaultProps=P,x.layerName="SolidPolygonLayer"},38017:(t,e,n)=>{"use strict";n.d(e,{Z:()=>a});var i=n(89745),o=n(6735);const r=.75,s=[];class a extends o.Z{getShaders(){return{...super.getShaders(),fs:"#define SHADER_NAME multi-icon-layer-fragment-shader\n\nprecision highp float;\n\nuniform float opacity;\nuniform sampler2D iconsTexture;\nuniform float gamma;\nuniform bool sdf;\nuniform float alphaCutoff;\nuniform float buffer;\nuniform float outlineBuffer;\nuniform vec4 outlineColor;\n\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  if (!picking_uActive) {\n    float alpha = texture2D(iconsTexture, vTextureCoords).a;\n    vec4 color = vColor;\n    if (sdf) {\n      float distance = alpha;\n      alpha = smoothstep(buffer - gamma, buffer + gamma, distance);\n\n      if (outlineBuffer > 0.0) {\n        float inFill = alpha;\n        float inBorder = smoothstep(outlineBuffer - gamma, outlineBuffer + gamma, distance);\n        color = mix(outlineColor, vColor, inFill);\n        alpha = inBorder;\n      }\n    }\n    float a = alpha * color.a;\n    \n    if (a < alphaCutoff) {\n      discard;\n    }\n\n    gl_FragColor = vec4(color.rgb, a * opacity);\n  }\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n"}}initializeState(){super.initializeState();this.getAttributeManager().addInstanced({instanceOffsets:{size:2,accessor:"getIconOffsets"},instancePickingColors:{type:5121,size:3,accessor:(t,e)=>{let{index:n,target:i}=e;return this.encodePickingColor(n,i)}}})}updateState(t){super.updateState(t);const{props:e,oldProps:n}=t;let{outlineColor:o}=e;o!==n.outlineColor&&(o=o.map((t=>t/255)),o[3]=Number.isFinite(o[3])?o[3]:1,this.setState({outlineColor:o})),!e.sdf&&e.outlineWidth&&i.Z.warn(this.id+": fontSettings.sdf is required to render outline")()}draw(t){const{sdf:e,smoothing:n,outlineWidth:i}=this.props,{outlineColor:o}=this.state,s=i?Math.max(n,r*(1-i)):-1;if(t.uniforms={...t.uniforms,buffer:r,outlineBuffer:s,gamma:n,sdf:Boolean(e),outlineColor:o},super.draw(t),e&&i){const{iconManager:t}=this.state;t.getTexture()&&this.state.model.draw({uniforms:{outlineBuffer:r}})}}getInstanceOffset(t){return t?Array.from(t).flatMap((t=>super.getInstanceOffset(t))):s}getInstanceColorMode(t){return 1}getInstanceIconFrame(t){return t?Array.from(t).flatMap((t=>super.getInstanceIconFrame(t))):s}}a.defaultProps={getIconOffsets:{type:"accessor",value:t=>t.offsets},alphaCutoff:.001,smoothing:.1,outlineWidth:0,outlineColor:{type:"color",value:[0,0,0,255]}},a.layerName="MultiIconLayer"},17495:(t,e,n)=>{"use strict";n.d(e,{Z:()=>d});var i=n(47251),o=n(18056),r=n(71693),s=n(43631),a=n(95321),l=n(15804);const c={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,padding:{type:"array",value:[0,0,0,0]},getPosition:{type:"accessor",value:t=>t.position},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},getBoundingRect:{type:"accessor",value:[0,0,0,0]},getFillColor:{type:"accessor",value:[0,0,0,255]},getLineColor:{type:"accessor",value:[0,0,0,255]},getLineWidth:{type:"accessor",value:1}};class d extends i.Z{getShaders(){return super.getShaders({vs:"#define SHADER_NAME text-background-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute vec4 instanceRects;\nattribute float instanceSizes;\nattribute float instanceAngles;\nattribute vec2 instancePixelOffsets;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform bool billboard;\nuniform float opacity;\nuniform float sizeScale;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform vec4 padding;\nuniform int sizeUnits;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying float vLineWidth;\nvarying vec2 uv;\nvarying vec2 dimensions;\n\nvec2 rotate_by_angle(vec2 vertex, float angle) {\n  float angle_radian = radians(angle);\n  float cos_angle = cos(angle_radian);\n  float sin_angle = sin(angle_radian);\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\n  return rotationMatrix * vertex;\n}\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = positions;\n  geometry.pickingColor = instancePickingColors;\n  uv = positions;\n  vLineWidth = instanceLineWidths;\n  float sizePixels = clamp(\n    project_size_to_pixel(instanceSizes * sizeScale, sizeUnits),\n    sizeMinPixels, sizeMaxPixels\n  );\n\n  dimensions = instanceRects.zw * sizePixels + padding.xy + padding.zw;\n\n  vec2 pixelOffset = (positions * instanceRects.zw + instanceRects.xy) * sizePixels + mix(-padding.xy, padding.zw, positions);\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles);\n  pixelOffset += instancePixelOffsets;\n  pixelOffset.y *= -1.0;\n\n  if (billboard)  {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n    vec3 offset = vec3(pixelOffset, 0.0);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n  } else {\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\n    DECKGL_FILTER_SIZE(offset_common, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  }\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n",fs:"#define SHADER_NAME text-background-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool stroked;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying float vLineWidth;\nvarying vec2 uv;\nvarying vec2 dimensions;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  vec2 pixelPosition = uv * dimensions;\n  if (stroked) {\n    float distToEdge = min(\n      min(pixelPosition.x, dimensions.x - pixelPosition.x),\n      min(pixelPosition.y, dimensions.y - pixelPosition.y)\n    );\n    float isBorder = smoothedge(distToEdge, vLineWidth);\n    gl_FragColor = mix(vFillColor, vLineColor, isBorder);\n  } else {\n    gl_FragColor = vFillColor;\n  }\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[o.Z,r.Z]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instanceRects:{size:4,accessor:"getBoundingRect"},instancePixelOffsets:{size:2,transition:!0,accessor:"getPixelOffset"},instanceFillColors:{size:4,transition:!0,normalized:!0,type:5121,accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:4,transition:!0,normalized:!0,type:5121,accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState(t){super.updateState(t);const{changeFlags:e}=t;if(e.extensionsChanged){var n;const{gl:t}=this.context;null==(n=this.state.model)||n.delete(),this.state.model=this._getModel(t),this.getAttributeManager().invalidateAll()}}draw(t){let{uniforms:e}=t;const{billboard:n,sizeScale:i,sizeUnits:o,sizeMinPixels:r,sizeMaxPixels:a,getLineWidth:l}=this.props;let{padding:c}=this.props;c.length<4&&(c=[c[0],c[1],c[0],c[1]]),this.state.model.setUniforms(e).setUniforms({billboard:n,stroked:Boolean(l),padding:c,sizeUnits:s.iI[o],sizeScale:i,sizeMinPixels:r,sizeMaxPixels:a}).draw()}_getModel(t){return new a.Z(t,{...this.getShaders(),id:this.props.id,geometry:new l.Z({drawMode:6,vertexCount:4,attributes:{positions:{size:2,value:new Float32Array([0,0,1,0,1,1,0,1])}}}),isInstanced:!0})}}d.defaultProps=c,d.layerName="TextBackgroundLayer"},27800:(t,e,n)=>{"use strict";n.d(e,{Z:()=>M});var i=n(19871),o=n(37944),r=n(38017),s=n(39875),a=n(89745);const l=32,c=[];function d(t,e,n,i){let o=0;for(let s=e;s<n;s++){var r;o+=(null==(r=i[t[s]])?void 0:r.layoutWidth)||0}return o}function p(t,e,n,i,o,r){let s=e,a=0;for(let l=e;l<n;l++){const e=d(t,l,l+1,o);a+e>i&&(s<l&&r.push(l),s=l,a=0),a+=e}return a}function u(t,e,n,i,o,r){void 0===o&&(o=0),void 0===r&&(r=t.length);const s=[];return"break-all"===e?p(t,o,r,n,i,s):function(t,e,n,i,o,r){let s=e,a=e,l=e,c=0;for(let u=e;u<n;u++)if(" "===t[u]?l=u+1:" "!==t[u+1]&&u+1!==n||(l=u+1),l>a){let e=d(t,a,l,o);c+e>i&&(s<a&&(r.push(a),s=a,c=0),e>i&&(e=p(t,a,l,i,o,r),s=r[r.length-1])),a=l,c+=e}}(t,o,r,n,i,s),s}function h(t,e,n,i,o,r){let s=0,c=0;for(let d=e;d<n;d++){const e=t[d],n=i[e];n?(c||(c=n.layoutHeight),o[d]=s+n.layoutWidth/2,s+=n.layoutWidth):(a.Z.warn("Missing character: "+e+" ("+e.codePointAt(0)+")")(),o[d]=s,s+=l)}r[0]=s,r[1]=c}function g(t,e,n,i,o){const r=Array.from(t),s=r.length,a=new Array(s),l=new Array(s),d=new Array(s),p=("break-word"===n||"break-all"===n)&&isFinite(i)&&i>0,g=[0,0],f=[0,0];let m=0,y=0,v=0;for(let w=0;w<=s;w++){const t=r[w];if("\n"!==t&&w!==s||(v=w),v>y){const t=p?u(r,n,i,o,y,v):c;for(let n=0;n<=t.length;n++){const i=0===n?y:t[n-1],s=n<t.length?t[n]:v;h(r,i,s,o,a,f);for(let t=i;t<s;t++){var _;const e=(null==(_=o[r[t]])?void 0:_.layoutOffsetY)||0;l[t]=m+f[1]/2+e,d[t]=f[0]}m+=f[1]*e,g[0]=Math.max(g[0],f[0])}y=v}"\n"===t&&(a[y]=0,l[y]=0,d[y]=0,y++)}return g[1]=m,{x:a,y:l,rowWidth:d,size:g}}class f{constructor(t){void 0===t&&(t=5),this._cache={},this._order=[],this.limit=t}get(t){const e=this._cache[t];return e&&(this._deleteOrder(t),this._appendOrder(t)),e}set(t,e){this._cache[t]?(this.delete(t),this._cache[t]=e,this._appendOrder(t)):(Object.keys(this._cache).length===this.limit&&this.delete(this._order[0]),this._cache[t]=e,this._appendOrder(t))}delete(t){this._cache[t]&&(delete this._cache[t],this._deleteOrder(t))}_deleteOrder(t){const e=this._order.indexOf(t);e>=0&&this._order.splice(e,1)}_appendOrder(t){this._order.push(t)}}const m={fontFamily:"Monaco, monospace",fontWeight:"normal",characterSet:function(){const t=[];for(let e=32;e<128;e++)t.push(String.fromCharCode(e));return t}(),fontSize:64,buffer:4,sdf:!1,cutoff:.25,radius:12,smoothing:.1},y=3;let v=new f(y);function _(t,e){for(let n=0;n<t.length;n++)e.data[4*n+3]=t[n]}function w(t,e,n,i){t.font=i+" "+n+"px "+e,t.fillStyle="#000",t.textBaseline="alphabetic",t.textAlign="left"}class P{constructor(){this.props={...m}}get texture(){return this._atlas}get mapping(){return this._atlas&&this._atlas.mapping}get scale(){const{fontSize:t,buffer:e}=this.props;return(1.2*t+2*e)/t}setProps(t){void 0===t&&(t={}),Object.assign(this.props,t),this._key=this._getKey();const e=function(t,e){let n;n="string"==typeof e?new Set(Array.from(e)):new Set(e);const i=v.get(t);if(!i)return n;for(const o in i.mapping)n.has(o)&&n.delete(o);return n}(this._key,this.props.characterSet),n=v.get(this._key);if(n&&0===e.size)return void(this._atlas!==n&&(this._atlas=n));const i=this._generateFontAtlas(e,n);this._atlas=i,v.set(this._key,i)}_generateFontAtlas(t,e){const{fontFamily:n,fontWeight:i,fontSize:o,buffer:r,sdf:a,radius:l,cutoff:c}=this.props;let d=e&&e.data;d||(d=document.createElement("canvas"),d.width=1024);const p=d.getContext("2d",{willReadFrequently:!0});w(p,n,o,i);const{mapping:u,canvasHeight:h,xOffset:g,yOffset:f}=function(t){let{characterSet:e,getFontWidth:n,fontHeight:i,buffer:o,maxCanvasWidth:r,mapping:s={},xOffset:a=0,yOffset:l=0}=t,c=0,d=a;const p=i+2*o;for(const h of e)if(!s[h]){const t=n(h);d+t+2*o>r&&(d=0,c++),s[h]={x:d+o,y:l+c*p+o,width:t,height:p,layoutWidth:t,layoutHeight:i},d+=t+2*o}return{mapping:s,xOffset:d,yOffset:l+c*p,canvasHeight:(u=l+(c+1)*p,Math.pow(2,Math.ceil(Math.log2(u))))};var u}({getFontWidth:t=>p.measureText(t).width,fontHeight:1.2*o,buffer:r,characterSet:t,maxCanvasWidth:1024,...e&&{mapping:e.mapping,xOffset:e.xOffset,yOffset:e.yOffset}});if(d.height!==h){const t=p.getImageData(0,0,d.width,d.height);d.height=h,p.putImageData(t,0,0)}if(w(p,n,o,i),a){const e=new s.Z({fontSize:o,buffer:r,radius:l,cutoff:c,fontFamily:n,fontWeight:""+i});for(const n of t){const{data:t,width:i,height:r,glyphTop:s}=e.draw(n);u[n].width=i,u[n].layoutOffsetY=.9*o-s;const a=p.createImageData(i,r);_(t,a),p.putImageData(a,u[n].x,u[n].y)}}else for(const s of t)p.fillText(s,u[s].x,u[s].y+r+.9*o);return{xOffset:g,yOffset:f,mapping:u,data:d,width:d.width,height:d.height}}_getKey(){const{fontFamily:t,fontWeight:e,fontSize:n,buffer:i,sdf:o,radius:r,cutoff:s}=this.props;return o?t+" "+e+" "+n+" "+i+" "+r+" "+s:t+" "+e+" "+n+" "+i}}var b=n(17495);const x={start:1,middle:0,end:-1},C={top:1,center:0,bottom:-1},k=[0,0,0,255],S={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,background:!1,getBackgroundColor:{type:"accessor",value:[255,255,255,255]},getBorderColor:{type:"accessor",value:k},getBorderWidth:{type:"accessor",value:0},backgroundPadding:{type:"array",value:[0,0,0,0]},characterSet:{type:"object",value:m.characterSet},fontFamily:m.fontFamily,fontWeight:m.fontWeight,lineHeight:1,outlineWidth:{type:"number",value:0,min:0},outlineColor:{type:"color",value:k},fontSettings:{},wordBreak:"break-word",maxWidth:{type:"number",value:-1},getText:{type:"accessor",value:t=>t.text},getPosition:{type:"accessor",value:t=>t.position},getColor:{type:"accessor",value:k},getSize:{type:"accessor",value:32},getAngle:{type:"accessor",value:0},getTextAnchor:{type:"accessor",value:"middle"},getAlignmentBaseline:{type:"accessor",value:"center"},getPixelOffset:{type:"accessor",value:[0,0]},backgroundColor:{deprecatedFor:["background","getBackgroundColor"]}};class M extends i.Z{constructor(){super(...arguments),this.getBoundingRect=(t,e)=>{const n=this.state.fontAtlasManager.mapping,i=this.state.getText,{wordBreak:o,maxWidth:r,lineHeight:s,getTextAnchor:a,getAlignmentBaseline:l}=this.props,c=i(t,e)||"",{size:[d,p]}=g(c,s,o,r,n);return[(x["function"==typeof a?a(t,e):a]-1)*d/2,(C["function"==typeof l?l(t,e):l]-1)*p/2,d,p]},this.getIconOffsets=(t,e)=>{const n=this.state.fontAtlasManager.mapping,i=this.state.getText,{wordBreak:o,maxWidth:r,lineHeight:s,getTextAnchor:a,getAlignmentBaseline:l}=this.props,c=i(t,e)||"",{x:d,y:p,rowWidth:u,size:[h,f]}=g(c,s,o,r,n),m=x["function"==typeof a?a(t,e):a],y=C["function"==typeof l?l(t,e):l],v=d.length,_=new Array(2*v);let w=0;for(let g=0;g<v;g++){const t=(1-m)*(h-u[g])/2;_[w++]=(m-1)*h/2+t+d[g],_[w++]=(y-1)*f/2+p[g]}return _}}initializeState(){this.state={styleVersion:0,fontAtlasManager:new P}}updateState(t){const{props:e,oldProps:n,changeFlags:i}=t;(i.dataChanged||i.updateTriggersChanged&&(i.updateTriggersChanged.all||i.updateTriggersChanged.getText))&&this._updateText();(this._updateFontAtlas()||e.lineHeight!==n.lineHeight||e.wordBreak!==n.wordBreak||e.maxWidth!==n.maxWidth)&&this.setState({styleVersion:this.state.styleVersion+1})}getPickingInfo(t){let{info:e}=t;return e.object=e.index>=0?this.props.data[e.index]:null,e}_updateFontAtlas(){const{fontSettings:t,fontFamily:e,fontWeight:n}=this.props,{fontAtlasManager:i,characterSet:o}=this.state,r={...t,characterSet:o,fontFamily:e,fontWeight:n};if(!i.mapping)return i.setProps(r),!0;for(const s in r)if(r[s]!==i.props[s])return i.setProps(r),!0;return!1}_updateText(){var t;const{data:e,characterSet:n}=this.props,i=null==(t=e.attributes)?void 0:t.getText;let r,{getText:s}=this.props,a=e.startIndices;const l="auto"===n&&new Set;if(i&&a){const{texts:t,characterCount:n}=function(t){let{value:e,length:n,stride:i,offset:o,startIndices:r,characterSet:s}=t;const a=e.BYTES_PER_ELEMENT,l=i?i/a:1,c=o?o/a:0,d=r[n]||Math.ceil((e.length-c)/l),p=s&&new Set,u=new Array(n);let h=e;if(l>1||c>0){h=new(0,e.constructor)(d);for(let t=0;t<d;t++)h[t]=e[t*l+c]}for(let g=0;g<n;g++){const t=r[g],e=r[g+1]||d,n=h.subarray(t,e);u[g]=String.fromCodePoint.apply(null,n),p&&n.forEach(p.add,p)}if(p)for(const g of p)s.add(String.fromCodePoint(g));return{texts:u,characterCount:d}}({...ArrayBuffer.isView(i)?{value:i}:i,length:e.length,startIndices:a,characterSet:l});r=n,s=(e,n)=>{let{index:i}=n;return t[i]}}else{const{iterable:t,objectInfo:n}=(0,o.jB)(e);a=[0],r=0;for(const e of t){n.index++;const t=Array.from(s(e,n)||"");l&&t.forEach(l.add,l),r+=t.length,a.push(r)}}this.setState({getText:s,startIndices:a,numInstances:r,characterSet:l||n})}renderLayers(){const{startIndices:t,numInstances:e,getText:n,fontAtlasManager:{scale:i,texture:o,mapping:s},styleVersion:a}=this.state,{data:l,_dataDiff:c,getPosition:d,getColor:p,getSize:u,getAngle:h,getPixelOffset:g,getBackgroundColor:f,getBorderColor:y,getBorderWidth:v,backgroundPadding:_,background:w,billboard:P,fontSettings:x,outlineWidth:C,outlineColor:k,sizeScale:S,sizeUnits:M,sizeMinPixels:L,sizeMaxPixels:N,transitions:T,updateTriggers:E}=this.props,A=this.getSubLayerClass("characters",r.Z),I=this.getSubLayerClass("background",b.Z);return[w&&new I({getFillColor:f,getLineColor:y,getLineWidth:v,padding:_,getPosition:d,getSize:u,getAngle:h,getPixelOffset:g,billboard:P,sizeScale:S/this.state.fontAtlasManager.props.fontSize,sizeUnits:M,sizeMinPixels:L,sizeMaxPixels:N,transitions:T&&{getPosition:T.getPosition,getAngle:T.getAngle,getSize:T.getSize,getFillColor:T.getBackgroundColor,getLineColor:T.getBorderColor,getLineWidth:T.getBorderWidth,getPixelOffset:T.getPixelOffset}},this.getSubLayerProps({id:"background",updateTriggers:{getPosition:E.getPosition,getAngle:E.getAngle,getSize:E.getSize,getFillColor:E.getBackgroundColor,getLineColor:E.getBorderColor,getLineWidth:E.getBorderWidth,getPixelOffset:E.getPixelOffset,getBoundingRect:{getText:E.getText,getTextAnchor:E.getTextAnchor,getAlignmentBaseline:E.getAlignmentBaseline,styleVersion:a}}}),{data:l.attributes&&l.attributes.background?{length:l.length,attributes:l.attributes.background}:l,_dataDiff:c,autoHighlight:!1,getBoundingRect:this.getBoundingRect}),new A({sdf:x.sdf,smoothing:Number.isFinite(x.smoothing)?x.smoothing:m.smoothing,outlineWidth:C/(x.radius||m.radius),outlineColor:k,iconAtlas:o,iconMapping:s,getPosition:d,getColor:p,getSize:u,getAngle:h,getPixelOffset:g,billboard:P,sizeScale:S*i,sizeUnits:M,sizeMinPixels:L*i,sizeMaxPixels:N*i,transitions:T&&{getPosition:T.getPosition,getAngle:T.getAngle,getColor:T.getColor,getSize:T.getSize,getPixelOffset:T.getPixelOffset}},this.getSubLayerProps({id:"characters",updateTriggers:{getIcon:E.getText,getPosition:E.getPosition,getAngle:E.getAngle,getColor:E.getColor,getSize:E.getSize,getPixelOffset:E.getPixelOffset,getIconOffsets:{getText:E.getText,getTextAnchor:E.getTextAnchor,getAlignmentBaseline:E.getAlignmentBaseline,styleVersion:a}}}),{data:l,_dataDiff:c,startIndices:t,numInstances:e,getIconOffsets:this.getIconOffsets,getIcon:n})]}static set fontAtlasCacheLimit(t){!function(t){a.Z.assert(Number.isFinite(t)&&t>=y,"Invalid cache limit"),v=new f(t)}(t)}}M.defaultProps=S,M.layerName="TextLayer"},46025:(t,e,n)=>{"use strict";function i(t){let{data:e,getIndex:n,dataRange:i,replace:o}=t;const{startRow:r=0,endRow:s=1/0}=i,a=e.length;let l=a,c=a;for(let u=0;u<a;u++){const t=n(e[u]);if(l>u&&t>=r&&(l=u),t>=s){c=u;break}}let d=l;const p=c-l!==o.length?e.slice(c):void 0;for(let u=0;u<o.length;u++)e[d++]=o[u];if(p){for(let t=0;t<p.length;t++)e[d++]=p[t];e.length=d}return{startRow:l,endRow:l+o.length}}n.d(e,{b:()=>i})},16103:(t,e,n)=>{"use strict";n.d(e,{Z:()=>m});var i=n(67294),o=n(83779);const r="undefined"!=typeof window?i.useLayoutEffect:i.useEffect;function s(t,e){for(;t;){if(t===e)return!0;t=Object.getPrototypeOf(t)}return!1}var a=n(45213),l=n(47251);const c={position:"absolute",zIndex:-1};function d(t,e){if("function"==typeof t)return t(e);if(Array.isArray(t))return t.map((t=>d(t,e)));if(p(t)){if(function(t){const e=t.type,n=e&&e.defaultProps;return n&&n.mapStyle}(t))return e.style=c,(0,i.cloneElement)(t,e);if(function(t){const e=t.type;return e&&e.deckGLViewProps}(t))return(0,i.cloneElement)(t,e)}return t}function p(t){return t&&"object"==typeof t&&"type"in t||!1}function u(t){if("function"==typeof t)return(0,i.createElement)(a.Z,{},t);if(Array.isArray(t))return t.map(u);if(p(t)){if(t.type===i.Fragment)return u(t.props.children);if(s(t.type,a.Z))return t}return t}const h={mixBlendMode:null};function g(t){t.redrawReason&&(t.deck._drawLayers(t.redrawReason),t.redrawReason=null)}const f=(0,i.forwardRef)(((t,e)=>{const[n,c]=(0,i.useState)(0),f=(0,i.useRef)({control:null,version:n,forceUpdate:()=>c((t=>t+1))}).current,m=(0,i.useRef)(null),y=(0,i.useRef)(null),v=(0,i.useMemo)((()=>function(t){let{children:e,layers:n=[],views:o=null}=t;const r=[],c=[],d={};return i.Children.forEach(u(e),(t=>{if(p(t)){const e=t.type;if(s(e,l.Z)){const n=function(t,e){const n={},i=t.defaultProps||{};for(const o in e)i[o]!==e[o]&&(n[o]=e[o]);return new t(n)}(e,t.props);c.push(n)}else r.push(t);if(s(e,a.Z)&&e!==a.Z&&t.props.id){const n=new e(t.props);d[n.id]=n}}else t&&r.push(t)})),Object.keys(d).length>0&&(Array.isArray(o)?o.forEach((t=>{d[t.id]=t})):o&&(d[o.id]=o),o=Object.values(d)),n=c.length>0?[...c,...n]:n,{layers:n,children:r,views:o}}(t)),[t.layers,t.views,t.children]);let _=!0;const w=e=>_&&t.viewState?(f.viewStateUpdateRequested=e,null):(f.viewStateUpdateRequested=null,null==t.onViewStateChange?void 0:t.onViewStateChange(e)),P=e=>{_?f.interactionStateUpdateRequested=e:(f.interactionStateUpdateRequested=null,null==t.onInteractionStateChange||t.onInteractionStateChange(e))},b=(0,i.useMemo)((()=>{const e={...t,style:null,width:"100%",height:"100%",parent:m.current,canvas:y.current,layers:v.layers,views:v.views,onViewStateChange:w,onInteractionStateChange:P};return delete e._customRender,f.deck&&f.deck.setProps(e),e}),[t]);(0,i.useEffect)((()=>{const e=t.Deck||o.Z;return f.deck=function(t,e,n){const i=new e({...n,_customRender:e=>{t.redrawReason=e;const n=i.getViewports();t.lastRenderedViewports!==n?t.forceUpdate():g(t)}});return i}(f,e,{...b,parent:m.current,canvas:y.current}),()=>{var t;return null==(t=f.deck)?void 0:t.finalize()}}),[]),r((()=>{g(f);const{viewStateUpdateRequested:t,interactionStateUpdateRequested:e}=f;t&&w(t),e&&P(e)})),(0,i.useImperativeHandle)(e,(()=>function(t){return{get deck(){return t.deck},pickObject:e=>t.deck.pickObject(e),pickMultipleObjects:e=>t.deck.pickMultipleObjects(e),pickObjects:e=>t.deck.pickObjects(e)}}(f)),[]);const x=f.deck&&f.deck.isInitialized?f.deck.getViewports():void 0,{ContextProvider:C,width:k,height:S,id:M,style:L}=t,{containerStyle:N,canvasStyle:T}=(0,i.useMemo)((()=>function(t){let{width:e,height:n,style:i}=t;const o={position:"absolute",zIndex:0,left:0,top:0,width:e,height:n},r={left:0,top:0};if(i)for(const s in i)s in h?r[s]=i[s]:o[s]=i[s];return{containerStyle:o,canvasStyle:r}}({width:k,height:S,style:L})),[k,S,L]);if(!f.viewStateUpdateRequested&&f.lastRenderedViewports===x||f.version!==n){f.lastRenderedViewports=x,f.version=n;const t=function(t){let{children:e,deck:n,ContextProvider:o}=t;const{viewManager:r}=n||{};if(!r||!r.views.length)return[];const l={},c=r.views[0].id;for(const i of e){let t=c,e=i;p(i)&&s(i.type,a.Z)&&(t=i.props.id||c,e=i.props.children);const n=r.getViewport(t),o=r.getViewState(t);if(n){o.padding=n.padding;const{x:i,y:r,width:s,height:a}=n;e=d(e,{x:i,y:r,width:s,height:a,viewport:n,viewState:o}),l[t]||(l[t]={viewport:n,children:[]}),l[t].children.push(e)}}return Object.keys(l).map((t=>{const{viewport:e,children:r}=l[t],{x:s,y:a,width:c,height:d}=e,p={position:"absolute",left:s,top:a,width:c,height:d},u="view-"+t,h=(0,i.createElement)("div",{key:u,id:u,style:p},...r);if(o){const r={viewport:e,container:n.canvas.offsetParent,eventManager:n.eventManager,onViewStateChange:e=>{e.viewId=t,n._onViewStateChange(e)}};return(0,i.createElement)(o,{key:u,value:r},h)}return h}))}({children:v.children,deck:f.deck,ContextProvider:C}),e=(0,i.createElement)("canvas",{key:"canvas",id:M||"deckgl-overlay",ref:y,style:T});f.control=(0,i.createElement)("div",{id:(M||"deckgl")+"-wrapper",ref:m,style:N},[e,t])}return _=!1,f.control}));f.defaultProps=o.Z.defaultProps;const m=f},27260:(t,e,n)=>{"use strict";n.d(e,{IM:()=>o,Sr:()=>i,fL:()=>r});const i={LIGHT:"https://deck.gl/mapstyle/deck-light.json",LIGHT_LABEL:"https://basemaps.cartocdn.com/gl/positron-gl-style/style.json",DARK:"https://deck.gl/mapstyle/deck-dark.json",BLANK:{version:8,sources:{},layers:[]}},o="https://raw.githubusercontent.com/visgl/deck.gl-data/master/website",r="https://github.com/visgl/deck.gl/tree/master"},44752:(t,e,n)=>{"use strict";n.d(e,{C:()=>c});const i=["dataComparator","fetch"],o=["autoHighlight","coordinateOrigin","coordinateSystem","highlightColor","modelMatrix","opacity","pickable","visible","wrapLongitude"],r={loaders:[],coordinateSystem:"COORDINATE_SYSTEM.LNGLAT",renderSubLayers:"props => new GeoJsonLayer(props)",characterSet:'" !\\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~"'};function s(t,e){if(!t.includes("\n")||0===e)return t;const n=t.split("\n");if(e>0){const t="".padStart(e," ");return n.map(((e,n)=>n>0?t+e:e)).join("\n")}return n.map(((t,n)=>n>0?t.slice(-e):t)).join("\n")}function a(t){return null==t?"null":"string"==typeof t?"'"+t+"'":"function"==typeof t?t.toString():Array.isArray(t)?"["+t.map(a).join(", ")+"]":t===Number.MAX_SAFE_INTEGER?"Number.MAX_SAFE_INTEGER":s(JSON.stringify(t,null,2),2)}function l(t,e){const n=[],l={};e=function(t){const e=t.split("\n");e.pop();const n={};let i,o=1/0;for(const r of e){const t=r.match(/^(\s*)(\w+):\s*(.*)/);t&&t[1].length<=o?(o=t[1].length,i=t[2],n[i]=t[3]):i&&(n[i]+="\n"+r)}for(i in n)n[i]=s(n[i].replace(/,\s*$/,""),2-o);return n}(e);let c=t.constructor,d=!1;const p=t.props[Symbol.for("asyncPropOriginal")],u=t.props[Symbol.for("asyncPropResolved")];function h(t,e,o,r){if(!l[t]&&!i.includes(t)){const i=(o?"// ":"")+t+": "+e+",";void 0===r?n.push(i):n.splice(r,0,i),l[t]=!0}}let g=1;for(h("id",a(t.id)),e.data&&h("data",e.data,!1,g++);c.layerName;){if(c.hasOwnProperty("defaultProps")){n.push("","/* props "+(d?"inherited from":"from")+" "+c.layerName+" class */","");const i=Object.keys(c.defaultProps).sort();for(const n of i){const i=c.defaultProps[n],s=!(n in p)&&!(n in u)&&!Object.hasOwnProperty.call(t.props,n);let l,d=!1;n in e?l=e[n]:(d=i&&i.deprecatedFor,d=d||n.startsWith("_"),d=d||i&&"accessor"===i.type&&"function"==typeof i.value,d=d||"Layer"===c.layerName&&!o.includes(n),l=p[n]||t.props[n],l="function"==typeof l?null:n in r?r[n]:a(l)),d||h(n,l,s)}}c=Object.getPrototypeOf(c),d=!0}for(const i in e)i in l||h(i,e[i],!1,g++);return n.join("\n  ")}function c(t,e){const{Layer:n,getTooltip:i,props:o,mapStyle:r=!0,dependencies:a=[],imports:c,initialViewState:d}=t,p=["DeckGL",n.layerName],u=[];if(c)for(const s in c)s[0]>="a"||(s.endsWith("Loader")?u.push(s):p.push(s));const h=s(JSON.stringify(d,null,2).replace(/"/g,""),2),g="const {"+p.join(", ")+"} = deck;\n"+(u.length?"const {"+u.join(", ")+"} = loaders;\n":"")+"\nconst layer = new "+n.layerName+"({\n  "+l(e,o)+"\n});\n\nnew DeckGL({\n  "+(r?"mapStyle: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',":"")+"\n  initialViewState: "+h+",\n  controller: true,\n  "+(i?"getTooltip: "+i+",":"")+"\n  layers: [layer]\n});\n  ";!function(t){let{dependencies:e=[],title:n,source:i}=t;const o={js_external:e.concat(["https://unpkg.com/deck.gl@latest/dist.min.js"]).join(";"),title:n,parent:48721472,tags:["webgl","data visualization"],editors:"001",css:"\n  body {\n    margin: 0;\n    width: 100vw;\n    height: 100vh;\n    overflow: hidden;\n  }\n  \n  .deck-tooltip {\n    font-size: 0.8em;\n    font-family: Helvetica, Arial, sans-serif;\n  }\n  ",js:"/*\n* "+window.location.href+"\n*/\n"+i},r=document.createElement("form");r.action="https://codepen.io/pen/define/",r.method="POST",r.style.display="none",document.body.appendChild(r);const s=document.createElement("input");s.type="text",s.name="data",s.value=JSON.stringify(o),r.appendChild(s),window.open("","deck-example-codepen"),r.target="deck-example-codepen",r.submit(),r.remove()}({dependencies:a.concat(["https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js"]),title:"deck.gl "+n.layerName,source:g})}},62757:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{v:()=>makeLayerDemo});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(67294),_deck_gl_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(16103),react_map_gl__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(33545),styled_components__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(19521),_constants_defaults__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(27260),_codepen_automation__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(44752);const INITIAL_VIEW_STATE={longitude:-122.4,latitude:37.74,zoom:11,maxZoom:20,pitch:30,bearing:0},TOOLTIP_STYLE={padding:"4px",background:"rgba(0, 0, 0, 0.8)",color:"#fff",maxWidth:"300px",fontSize:"10px",zIndex:9},DemoPlaceholder=styled_components__WEBPACK_IMPORTED_MODULE_4__.ZP.div.withConfig({displayName:"demo-base__DemoPlaceholder",componentId:"sc-bhdrci-0"})(["height:50vh;min-height:200px;position:relative;margin-bottom:24px;@media screen and (max-width:768px){height:60vh;}"]),DemoContainer=styled_components__WEBPACK_IMPORTED_MODULE_4__.ZP.div.withConfig({displayName:"demo-base__DemoContainer",componentId:"sc-bhdrci-1"})(["height:50vh;min-height:200px;position:absolute;width:100%;left:0;top:0;overflow:hidden;@media screen and (max-width:768px){height:60vh;}"]),DemoSourceLink=styled_components__WEBPACK_IMPORTED_MODULE_4__.ZP.div.withConfig({displayName:"demo-base__DemoSourceLink",componentId:"sc-bhdrci-2"})(["position:absolute;top:0;right:0;padding:8px;background:#fff;margin:12px;box-shadow:0 2px 4px rgba(0,0,0,0.3);cursor:pointer;font-weight:bold;font-size:12px;&:hover{color:var(--color-primary);}svg{width:20px;vertical-align:middle;margin-right:4px;}"]);function evalObject(source,globals,output){return eval("(function evalObject(globals){\n    Object.assign(globalThis, globals);\n    "+(output?source+"\n      return {"+output.join(",")+"};":"return "+source+";")+"\n  })")(globals)}function makeLayerDemo(config){const{Layer:Layer,getTooltip:getTooltip,props:props,mapStyle:mapStyle=_constants_defaults__WEBPACK_IMPORTED_MODULE_2__.Sr.LIGHT,initialViewState:initialViewState=INITIAL_VIEW_STATE,imports:imports}=config;function Demo(){const _getTooltip=getTooltip&&eval(getTooltip),styledGetTooltip=t=>{const e=_getTooltip&&_getTooltip(t);return e&&{text:e,style:TOOLTIP_STYLE}},layerProps=evalObject(props,imports),layer=new Layer(layerProps);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(DemoPlaceholder,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(DemoContainer,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_deck_gl_react__WEBPACK_IMPORTED_MODULE_5__.Z,{pickingRadius:5,initialViewState:initialViewState,getTooltip:styledGetTooltip,controller:!0,layers:[layer]},mapStyle&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_map_gl__WEBPACK_IMPORTED_MODULE_1__.D5,{reuseMaps:!0,mapLib:__webpack_require__.e(4613).then(__webpack_require__.t.bind(__webpack_require__,24613,23)),mapStyle:mapStyle,preventStyleDiffing:!0}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(DemoSourceLink,{onClick:()=>(0,_codepen_automation__WEBPACK_IMPORTED_MODULE_3__.C)(config,layer)},react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z"})),"Edit on Codepen"))}return config.initialViewState=initialViewState,react__WEBPACK_IMPORTED_MODULE_0__.memo(Demo)}},61413:(t,e,n)=>{"use strict";n.d(e,{$6:()=>b,J6:()=>w,LN:()=>v,N0:()=>P,Pt:()=>S,R2:()=>C,b:()=>x,eg:()=>_,sD:()=>k,sX:()=>L,xY:()=>M,zC:()=>N});var i=n(43631),o=n(62253),r=n(99147),s=n(68797),a=n(88123),l=n(31759),c=n(6735),d=n(16009),p=n(52329),u=n(76144),h=n(48148),g=n(24309),f=n(27800),m=n(62757),y=n(27260);const v=(0,m.v)({Layer:o.Z,getTooltip:"({object}) => object && `${object.from.name} to ${object.to.name}`",props:"{\n    data: '"+y.IM+"/bart-segments.json',\n    pickable: true,\n    getWidth: 12,\n    getSourcePosition: d => d.from.coordinates,\n    getTargetPosition: d => d.to.coordinates,\n    getSourceColor: d => [Math.sqrt(d.inbound), 140, 0],\n    getTargetColor: d => [Math.sqrt(d.outbound), 140, 0]\n  }"}),_=(0,m.v)({Layer:r.Z,props:"{\n    bounds: [-122.519, 37.7045, -122.355, 37.829],\n    image: '"+y.IM+"/sf-districts.png'\n  }"}),w=(0,m.v)({Layer:s.Z,getTooltip:"({object}) => object && `height: ${object.value * 5000}m`",props:"{\n    data: '"+y.IM+"/hexagons.json',\n    diskResolution: 12,\n    radius: 250,\n    extruded: true,\n    pickable: true,\n    elevationScale: 100,\n    getPosition: d => d.centroid,\n    getFillColor: d => [48, 128, d.value * 255, 255],\n    getLineColor: [0, 0, 0],\n    getLineWidth: 20,\n    getElevation: d => d.value * 50\n  }"}),P=(0,m.v)({Layer:a.Z,getTooltip:"({object}) => object && (object.properties.name || object.properties.station)",props:"{\n    data: '"+y.IM+"/bart.geo.json',\n    pickable: true,\n    stroked: false,\n    filled: true,\n    extruded: true,\n    lineWidthMinPixels: 2,\n    pointType: 'circle+text',\n    pointRadiusUnits: 'pixels',\n    getText: f => f.properties.name,\n    getTextSize: 12,\n    getFillColor: [160, 160, 180, 200],\n    getLineColor: f => {\n      const hex = f.properties.color;\n      // convert to RGB\n      return hex ? hex.match(/[0-9a-f]{2}/g).map(x => parseInt(x, 16)) : [0, 0, 0];\n    },\n    getPointRadius: 4,\n    getLineWidth: 20,\n    getElevation: 30\n  }"}),b=(0,m.v)({Layer:l.Z,getTooltip:"({object}) => object && `height: ${object.value * 5000}m`",props:"{\n    data: '"+y.IM+"/hexagons.json',\n    pickable: true,\n    extruded: true,\n    cellSize: 200,\n    elevationScale: 5000,\n    getPosition: d => d.centroid,\n    getFillColor: d => [48, 128, d.value * 255, 255],\n    getElevation: d => d.value\n  }"}),x=(0,m.v)({Layer:c.Z,getTooltip:"({object}) => object && `${object.name}\n${object.address}`",props:"{\n    data: '"+y.IM+"/bart-stations.json',\n    pickable: true,\n    iconAtlas: '"+y.IM+"/icon-atlas.png',\n    iconMapping: {\n      marker: {\n        x: 0,\n        y: 0,\n        width: 128,\n        height: 128,\n        anchorY: 128,\n        mask: true\n      }\n    },\n    sizeScale: 8,\n    getPosition: d => d.coordinates,\n    getIcon: d => 'marker',\n    getSize: d => 5,\n    getColor: d => [Math.sqrt(d.exits), 140, 0]\n  }"}),C=(0,m.v)({Layer:d.Z,getTooltip:"({object}) => object && `${object.from.name} to ${object.to.name}`",props:"{\n    data: '"+y.IM+"/bart-segments.json',\n    pickable: true,\n    getWidth: 12,\n    getSourcePosition: d => d.from.coordinates,\n    getTargetPosition: d => d.to.coordinates,\n    getColor: d => [Math.sqrt(d.inbound + d.outbound), 140, 0]\n  }"}),k=(0,m.v)({Layer:p.Z,getTooltip:"({object}) => object && object.name",props:"{\n    data: '"+y.IM+"/bart-lines.json',\n    parameters: {\n      depthMask: false\n    },\n    pickable: true,\n    widthScale: 20,\n    widthMinPixels: 2,\n    getPath: d => d.path,\n    getColor: d => {\n      const hex = d.color;\n      // convert to RGB\n      return hex.match(/[0-9a-f]{2}/g).map(x => parseInt(x, 16));\n    },\n    getWidth: d => 5\n  }"}),S=(0,m.v)({Layer:u.Z,getTooltip:"({object}) => object && object.position.join(', ')",imports:{COORDINATE_SYSTEM:i.Df},props:"{\n    data: '"+y.IM+"/pointcloud.json',\n    pickable: false,\n    coordinateSystem: COORDINATE_SYSTEM.METER_OFFSETS,\n    coordinateOrigin: [-122.4, 37.74],\n    pointSize: 2,\n    getPosition: d => d.position,\n    getNormal: d => d.normal,\n    getColor: d => d.color\n  }"}),M=(0,m.v)({Layer:h.Z,getTooltip:"({object}) => object && `${object.zipcode}\nPopulation: ${object.population}`",props:"{\n    data: '"+y.IM+"/sf-zipcodes.json',\n    pickable: true,\n    stroked: true,\n    filled: true,\n    extruded: true,\n    wireframe: true,\n    lineWidthMinPixels: 1,\n    getPolygon: d => d.contour,\n    getElevation: d => d.population / d.area / 10,\n    getFillColor: d => [d.population / d.area / 60, 140, 0],\n    getLineColor: [80, 80, 80],\n    getLineWidth: d => 1\n  }"}),L=(0,m.v)({Layer:g.Z,getTooltip:"({object}) => object && `${object.name}\n${object.address}`",props:"{\n    data: '"+y.IM+"/bart-stations.json',\n    pickable: true,\n    opacity: 0.8,\n    stroked: true,\n    radiusScale: 6,\n    radiusMinPixels: 1,\n    radiusMaxPixels: 100,\n    lineWidthMinPixels: 1,\n    getPosition: d => d.coordinates,\n    getRadius: d => Math.sqrt(d.exits),\n    getFillColor: [255, 140, 0],\n    getLineColor: [0, 0, 0]\n  }"}),N=(0,m.v)({Layer:f.Z,getTooltip:"({object}) => object && `${object.name}\n${object.address}`",props:"{\n    data: '"+y.IM+"/bart-stations.json',\n    pickable: true,\n    sizeScale: 1,\n    getPosition: d => d.coordinates,\n    getText: d => d.name,\n    getSize: 16,\n    getAngle: 0,\n    getTextAnchor: 'middle',\n    getAlignmentBaseline: 'center'\n  }"})},75501:(t,e,n)=>{"use strict";n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var i=n(87462),o=(n(67294),n(3905)),r=n(61413);const s={},a="GeoJsonLayer",l={unversionedId:"api-reference/layers/geojson-layer",id:"api-reference/layers/geojson-layer",title:"GeoJsonLayer",description:"The GeoJsonLayer renders GeoJSON formatted data as polygons, lines and points (circles, icons and/or texts).",source:"@site/../docs/api-reference/layers/geojson-layer.md",sourceDirName:"api-reference/layers",slug:"/api-reference/layers/geojson-layer",permalink:"/docs/api-reference/layers/geojson-layer",draft:!1,editUrl:"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/layers/geojson-layer.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ContourLayer",permalink:"/docs/api-reference/aggregation-layers/contour-layer"},next:{title:"GPUGridLayer (WebGL2)",permalink:"/docs/api-reference/aggregation-layers/gpu-grid-layer"}},c={},d=[{value:"Installation",id:"installation",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>data</code>",id:"data",level:5},{value:"<code>pointType</code> (String, optional)",id:"pointtype",level:5},{value:"Fill Options",id:"fill-options",level:3},{value:"<code>filled</code> (Boolean, optional)",id:"filled",level:5},{value:"<code>getFillColor</code> (Function|Array, optional) transition-enabled",id:"getfillcolor",level:5},{value:"Stroke Options",id:"stroke-options",level:3},{value:"<code>stroked</code> (Boolean, optional)",id:"stroked",level:5},{value:"<code>getLineColor</code> (Function|Array, optional) transition-enabled",id:"getlinecolor",level:5},{value:"<code>getLineWidth</code> (Function|Number, optional) transition-enabled",id:"getlinewidth",level:5},{value:"<code>lineWidthUnits</code> (String, optional)",id:"linewidthunits",level:5},{value:"<code>lineWidthScale</code> (Number, optional) transition-enabled",id:"linewidthscale",level:5},{value:"<code>lineWidthMinPixels</code> (Number, optional) transition-enabled",id:"linewidthminpixels",level:5},{value:"<code>lineWidthMaxPixels</code> (Number, optional) transition-enabled",id:"linewidthmaxpixels",level:5},{value:"<code>lineCapRounded</code> (Boolean, optional)",id:"linecaprounded",level:5},{value:"<code>lineJointRounded</code> (Boolean, optional)",id:"linejointrounded",level:5},{value:"<code>lineMiterLimit</code> (Number, optional) transition-enabled",id:"linemiterlimit",level:5},{value:"<code>lineBillboard</code> (Boolean, optional)",id:"linebillboard",level:5},{value:"3D Options",id:"3d-options",level:3},{value:"<code>extruded</code> (Boolean, optional)",id:"extruded",level:5},{value:"<code>wireframe</code> (Boolean, optional)",id:"wireframe",level:5},{value:"<code>getElevation</code> (Function|Number, optional) transition-enabled",id:"getelevation",level:5},{value:"<code>elevationScale</code> (Number, optional) transition-enabled",id:"elevationscale",level:5},{value:"<code>material</code> (Object, optional)",id:"material",level:5},{value:"<code>_full3d</code> (Boolean, optional)",id:"_full3d",level:5},{value:"pointType:circle Options",id:"pointtypecircle-options",level:3},{value:"pointType:icon Options",id:"pointtypeicon-options",level:3},{value:"pointType:text Options",id:"pointtypetext-options",level:3},{value:"Sub Layers",id:"sub-layers",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Source",id:"source",level:2}],p={toc:d},u="wrapper";function h(t){let{components:e,...n}=t;return(0,o.kt)(u,(0,i.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"geojsonlayer"},"GeoJsonLayer"),(0,o.kt)(r.N0,{mdxType:"GeoJsonLayerDemo"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoJsonLayer")," renders ",(0,o.kt)("a",{parentName:"p",href:"http://geojson.org"},"GeoJSON")," formatted data as polygons, lines and points (circles, icons and/or texts)."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"GeoJsonLayer")," is a ",(0,o.kt)("a",{parentName:"p",href:"/docs/api-reference/core/composite-layer"},"CompositeLayer"),". See the ",(0,o.kt)("a",{parentName:"p",href:"#sub-layers"},"sub layers")," that it renders."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import DeckGL from '@deck.gl/react';\nimport {GeoJsonLayer} from '@deck.gl/layers';\n\nfunction App({data, viewState}) {\n  /**\n   * Data format:\n   * Valid GeoJSON object\n   */\n  const layer = new GeoJsonLayer({\n    id: 'geojson-layer',\n    data,\n    pickable: true,\n    stroked: false,\n    filled: true,\n    extruded: true,\n    pointType: 'circle',\n    lineWidthScale: 20,\n    lineWidthMinPixels: 2,\n    getFillColor: [160, 160, 180, 200],\n    getLineColor: d => colorToRGBArray(d.properties.color),\n    getPointRadius: 100,\n    getLineWidth: 1,\n    getElevation: 30\n  });\n\n  return <DeckGL viewState={viewState}\n    layers={[layer]}\n    getTooltip={({object}) => object && (object.properties.name || object.properties.station)} />;\n}\n")),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"To install the dependencies from NPM:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install deck.gl\n# or\nnpm install @deck.gl/core @deck.gl/layers\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import {GeoJsonLayer} from '@deck.gl/layers';\nnew GeoJsonLayer({});\n")),(0,o.kt)("p",null,"To use pre-bundled scripts:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<script src="https://unpkg.com/deck.gl@^8.0.0/dist.min.js"><\/script>\n\x3c!-- or --\x3e\n<script src="https://unpkg.com/@deck.gl/core@^8.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/layers@^8.0.0/dist.min.js"><\/script>\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"new deck.GeoJsonLayer({});\n")),(0,o.kt)("h2",{id:"properties"},"Properties"),(0,o.kt)("p",null,"Inherits from all ",(0,o.kt)("a",{parentName:"p",href:"/docs/api-reference/core/layer"},"Base Layer")," and ",(0,o.kt)("a",{parentName:"p",href:"/docs/api-reference/core/composite-layer"},"CompositeLayer")," properties."),(0,o.kt)("h5",{id:"data"},(0,o.kt)("inlineCode",{parentName:"h5"},"data")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoJSONLayer")," accepts any of the following formats passed to the ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," prop:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A valid GeoJSON ",(0,o.kt)("inlineCode",{parentName:"li"},"FeatureCollection"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"Feature"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"Geometry")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"GeometryCollection")," object."),(0,o.kt)("li",{parentName:"ul"},"An array of GeoJSON ",(0,o.kt)("inlineCode",{parentName:"li"},"Feature")," objects."),(0,o.kt)("li",{parentName:"ul"},"An URL or Promise that resolves to the above formats."),(0,o.kt)("li",{parentName:"ul"},"loaders.gl's ",(0,o.kt)("a",{parentName:"li",href:"https://loaders.gl/modules/gis/docs/api-reference/geojson-to-binary"},"flat GeoJSON format"),".")),(0,o.kt)("h5",{id:"pointtype"},(0,o.kt)("inlineCode",{parentName:"h5"},"pointType")," (String, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"'circle'"))),(0,o.kt)("p",null,"How to render ",(0,o.kt)("inlineCode",{parentName:"p"},"Point")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"MultiPoint")," features in the data. Supported types are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"circle")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"icon")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"text"))),(0,o.kt)("p",null,"To use more than one type, join the names with ",(0,o.kt)("inlineCode",{parentName:"p"},"+"),", for example ",(0,o.kt)("inlineCode",{parentName:"p"},"pointType: 'icon+text'"),"."),(0,o.kt)("h3",{id:"fill-options"},"Fill Options"),(0,o.kt)("p",null,"The following props control the solid fill of ",(0,o.kt)("inlineCode",{parentName:"p"},"Polygon")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"MultiPolygon"),"\nfeatures, and the ",(0,o.kt)("inlineCode",{parentName:"p"},"Point")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"MultiPoint")," features if ",(0,o.kt)("inlineCode",{parentName:"p"},"pointType")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"'circle'"),"."),(0,o.kt)("h5",{id:"filled"},(0,o.kt)("inlineCode",{parentName:"h5"},"filled")," (Boolean, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"true"))),(0,o.kt)("p",null,"Whether to draw filled polygons (solid fill) and points (circles). Note that for each polygon,\nonly the area between the outer polygon and any holes will be filled. This\nprop is effective only when the polygon is NOT extruded."),(0,o.kt)("h5",{id:"getfillcolor"},(0,o.kt)("inlineCode",{parentName:"h5"},"getFillColor")," (",(0,o.kt)("a",{parentName:"h5",href:"/docs/developer-guide/using-layers#accessors"},"Function"),"|Array, optional) ",(0,o.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"[0, 0, 0, 255]"))),(0,o.kt)("p",null,"The solid color of the polygon and points (circles).\nFormat is ",(0,o.kt)("inlineCode",{parentName:"p"},"[r, g, b, [a]]"),". Each channel is a number between 0-255 and ",(0,o.kt)("inlineCode",{parentName:"p"},"a")," is 255 if not supplied."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If an array is provided, it is used as the fill color for all features."),(0,o.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each feature to retrieve its fill color.")),(0,o.kt)("h3",{id:"stroke-options"},"Stroke Options"),(0,o.kt)("p",null,"The following props control the ",(0,o.kt)("inlineCode",{parentName:"p"},"LineString")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"MultiLineString")," features,\nthe outline for ",(0,o.kt)("inlineCode",{parentName:"p"},"Polygon")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"MultiPolygon")," features, and the outline for ",(0,o.kt)("inlineCode",{parentName:"p"},"Point")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"MultiPoint")," features if ",(0,o.kt)("inlineCode",{parentName:"p"},"pointType")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"'circle'"),"."),(0,o.kt)("h5",{id:"stroked"},(0,o.kt)("inlineCode",{parentName:"h5"},"stroked")," (Boolean, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"true"))),(0,o.kt)("p",null,"Whether to draw an outline around polygons and points (circles). Note that\nfor complex polygons, both the outer polygon as well the outlines of\nany holes will be drawn."),(0,o.kt)("h5",{id:"getlinecolor"},(0,o.kt)("inlineCode",{parentName:"h5"},"getLineColor")," (",(0,o.kt)("a",{parentName:"h5",href:"/docs/developer-guide/using-layers#accessors"},"Function"),"|Array, optional) ",(0,o.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"[0, 0, 0, 255]"))),(0,o.kt)("p",null,"The rgba color of a line is in the format of ",(0,o.kt)("inlineCode",{parentName:"p"},"[r, g, b, [a]]"),". Each channel is a number between 0-255 and ",(0,o.kt)("inlineCode",{parentName:"p"},"a")," is 255 if not supplied."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If an array is provided, it is used as the line color for all features."),(0,o.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each feature to retrieve its line color.")),(0,o.kt)("h5",{id:"getlinewidth"},(0,o.kt)("inlineCode",{parentName:"h5"},"getLineWidth")," (",(0,o.kt)("a",{parentName:"h5",href:"/docs/developer-guide/using-layers#accessors"},"Function"),"|Number, optional) ",(0,o.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"1"))),(0,o.kt)("p",null,"The width of a line, in units specified by ",(0,o.kt)("inlineCode",{parentName:"p"},"lineWidthUnits")," (default meters)."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If a number is provided, it is used as the line width for all features."),(0,o.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each feature to retrieve its line width.")),(0,o.kt)("h5",{id:"linewidthunits"},(0,o.kt)("inlineCode",{parentName:"h5"},"lineWidthUnits")," (String, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"'meters'"))),(0,o.kt)("p",null,"The units of the line width, one of ",(0,o.kt)("inlineCode",{parentName:"p"},"'meters'"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"'common'"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"'pixels'"),". See ",(0,o.kt)("a",{parentName:"p",href:"/docs/developer-guide/coordinate-systems#supported-units"},"unit system"),"."),(0,o.kt)("h5",{id:"linewidthscale"},(0,o.kt)("inlineCode",{parentName:"h5"},"lineWidthScale")," (Number, optional) ",(0,o.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"1"))),(0,o.kt)("p",null,"A multiplier that is applied to all line widths."),(0,o.kt)("h5",{id:"linewidthminpixels"},(0,o.kt)("inlineCode",{parentName:"h5"},"lineWidthMinPixels")," (Number, optional) ",(0,o.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"0"))),(0,o.kt)("p",null,"The minimum line width in pixels. This prop can be used to prevent the line from getting too thin when zoomed out."),(0,o.kt)("h5",{id:"linewidthmaxpixels"},(0,o.kt)("inlineCode",{parentName:"h5"},"lineWidthMaxPixels")," (Number, optional) ",(0,o.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: Number.MAX_SAFE_INTEGER")),(0,o.kt)("p",null,"The maximum line width in pixels. This prop can be used to prevent the line from getting too thick when zoomed in."),(0,o.kt)("h5",{id:"linecaprounded"},(0,o.kt)("inlineCode",{parentName:"h5"},"lineCapRounded")," (Boolean, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"false"))),(0,o.kt)("p",null,"Type of line caps. If ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", draw round caps. Otherwise draw square caps."),(0,o.kt)("h5",{id:"linejointrounded"},(0,o.kt)("inlineCode",{parentName:"h5"},"lineJointRounded")," (Boolean, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"false"))),(0,o.kt)("p",null,"Type of line joint. If ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", draw round joints. Otherwise draw miter joints."),(0,o.kt)("h5",{id:"linemiterlimit"},(0,o.kt)("inlineCode",{parentName:"h5"},"lineMiterLimit")," (Number, optional) ",(0,o.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"4"))),(0,o.kt)("p",null,"The maximum extent of a joint in ratio to the stroke width.\nOnly works if ",(0,o.kt)("inlineCode",{parentName:"p"},"lineJointRounded")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,o.kt)("h5",{id:"linebillboard"},(0,o.kt)("inlineCode",{parentName:"h5"},"lineBillboard")," (Boolean, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"false"))),(0,o.kt)("p",null,"If ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", extrude the line in screen space (width always faces the camera).\nIf ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),", the width always faces up."),(0,o.kt)("h3",{id:"3d-options"},"3D Options"),(0,o.kt)("p",null,"The following props control the extrusion of ",(0,o.kt)("inlineCode",{parentName:"p"},"Polygon")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"MultiPolygon")," features."),(0,o.kt)("h5",{id:"extruded"},(0,o.kt)("inlineCode",{parentName:"h5"},"extruded")," (Boolean, optional)"),(0,o.kt)("p",null,"Extrude Polygon and MultiPolygon features along the z-axis if set to\ntrue. The height of the drawn features is obtained using the ",(0,o.kt)("inlineCode",{parentName:"p"},"getElevation")," accessor."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"false"))),(0,o.kt)("h5",{id:"wireframe"},(0,o.kt)("inlineCode",{parentName:"h5"},"wireframe")," (Boolean, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"false"))),(0,o.kt)("p",null,'Whether to generate a line wireframe of the hexagon. The outline will have\n"horizontal" lines closing the top and bottom polygons and a vertical line\n(a "strut") for each vertex on the polygon.'),(0,o.kt)("p",null,"Remarks:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"These lines are rendered with ",(0,o.kt)("inlineCode",{parentName:"li"},"GL.LINE")," and will thus always be 1 pixel wide."),(0,o.kt)("li",{parentName:"ul"},"Wireframe and solid extrusions are exclusive, you'll need to create two layers\nwith the same data if you want a combined rendering effect."),(0,o.kt)("li",{parentName:"ul"},"This is only effective if the ",(0,o.kt)("inlineCode",{parentName:"li"},"extruded")," prop is set to true.")),(0,o.kt)("h5",{id:"getelevation"},(0,o.kt)("inlineCode",{parentName:"h5"},"getElevation")," (",(0,o.kt)("a",{parentName:"h5",href:"/docs/developer-guide/using-layers#accessors"},"Function"),"|Number, optional) ",(0,o.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"1000"))),(0,o.kt)("p",null,"The elevation of a polygon feature (when ",(0,o.kt)("inlineCode",{parentName:"p"},"extruded")," is true)."),(0,o.kt)("p",null,"If a cartographic projection mode is used, height will be interpreted as meters,\notherwise will be in unit coordinates."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If a number is provided, it is used as the elevation for all polygon features."),(0,o.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each polygon feature to retrieve its elevation.")),(0,o.kt)("h5",{id:"elevationscale"},(0,o.kt)("inlineCode",{parentName:"h5"},"elevationScale")," (Number, optional) ",(0,o.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"1"))),(0,o.kt)("p",null,"Elevation multiplier. The final elevation is calculated by\n",(0,o.kt)("inlineCode",{parentName:"p"},"elevationScale * getElevation(d)"),". ",(0,o.kt)("inlineCode",{parentName:"p"},"elevationScale")," is a handy property to scale\nall polygon elevation without updating the data."),(0,o.kt)("h5",{id:"material"},(0,o.kt)("inlineCode",{parentName:"h5"},"material")," (Object, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"true"))),(0,o.kt)("p",null,"This is an object that contains material props for ",(0,o.kt)("a",{parentName:"p",href:"/docs/api-reference/core/lighting-effect"},"lighting effect")," applied on extruded polygons.\nCheck ",(0,o.kt)("a",{parentName:"p",href:"/docs/developer-guide/using-lighting#constructing-a-material-instance"},"the lighting guide")," for configurable settings."),(0,o.kt)("h5",{id:"_full3d"},(0,o.kt)("inlineCode",{parentName:"h5"},"_full3d")," (Boolean, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"false"))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note: This prop is experimental")),(0,o.kt)("p",null,"When true, polygon tesselation will be performed on the plane with the largest area, instead of the xy plane."),(0,o.kt)("p",null,"Remarks:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Only use this if you experience issues rendering features that only change on the z axis."),(0,o.kt)("li",{parentName:"ul"},"This prop is only effective with ",(0,o.kt)("inlineCode",{parentName:"li"},"XYZ")," data.")),(0,o.kt)("h3",{id:"pointtypecircle-options"},"pointType:circle Options"),(0,o.kt)("p",null,"The following props are forwarded to a ",(0,o.kt)("inlineCode",{parentName:"p"},"ScatterplotLayer")," if ",(0,o.kt)("inlineCode",{parentName:"p"},"pointType")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"'circle'"),"."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Prop name"),(0,o.kt)("th",{parentName:"tr",align:null},"Default value"),(0,o.kt)("th",{parentName:"tr",align:null},"ScatterplotLayer equivalent"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getPointRadius")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"1")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/scatterplot-layer#getradius"},"getRadius"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"pointRadiusUnits")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"'meters'")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/scatterplot-layer#radiusunits"},"radiusUnits"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"pointRadiusScale")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"1")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/scatterplot-layer#radiusscale"},"radiusScale"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"pointRadiusMinPixels")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"0")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/scatterplot-layer#radiusminpixels"},"radiusMinPixels"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"pointRadiusMaxPixels")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Number.MAX_SAFE_INTEGER")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/scatterplot-layer#radiusmaxpixels"},"radiusMaxPixels"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"pointAntialiasing")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"true")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/scatterplot-layer#antialiasing"},"antialiasing"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"pointBillboard")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"false")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/scatterplot-layer#billboard"},"billboard"))))),(0,o.kt)("h3",{id:"pointtypeicon-options"},"pointType:icon Options"),(0,o.kt)("p",null,"The following props are forwarded to an ",(0,o.kt)("inlineCode",{parentName:"p"},"IconLayer")," if ",(0,o.kt)("inlineCode",{parentName:"p"},"pointType")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"'icon'"),"."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Prop name"),(0,o.kt)("th",{parentName:"tr",align:null},"Default value"),(0,o.kt)("th",{parentName:"tr",align:null},"IconLayer equivalent"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"iconAtlas")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"null")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/icon-layer#iconatlas"},"iconAtlas"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"iconMapping")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"{}")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/icon-layer#iconmapping"},"iconMapping"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getIcon")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"f => f.properties.icon")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/icon-layer#geticon"},"getIcon"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getIconSize")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"1")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/icon-layer#getsize"},"getSize"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getIconColor")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[0, 0, 0, 255]")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/icon-layer#getcolor"},"getColor"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getIconAngle")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"0")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/icon-layer#getangle"},"getAngle"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getIconPixelOffset")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[0, 0]")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/icon-layer#getpixeloffset"},"getPixelOffset"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"iconSizeUnits")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"'pixels'")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/icon-layer#sizeunits"},"sizeUnits"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"iconSizeScale")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"1")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/icon-layer#sizescale"},"sizeScale"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"iconSizeMinPixels")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"0")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/icon-layer#sizeminpixels"},"sizeMinPixels"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"iconSizeMaxPixels")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Number.MAX_SAFE_INTEGER")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/icon-layer#sizemaxpixels"},"sizeMaxPixels"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"iconBillboard")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"true")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/icon-layer#billboard"},"billboard"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"iconAlphaCutoff")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"0.05")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/icon-layer#alphaCutoff"},"alphaCutoff"))))),(0,o.kt)("h3",{id:"pointtypetext-options"},"pointType:text Options"),(0,o.kt)("p",null,"The following props are forwarded to a ",(0,o.kt)("inlineCode",{parentName:"p"},"TextLayer")," if ",(0,o.kt)("inlineCode",{parentName:"p"},"pointType")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"'text'"),"."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Prop name"),(0,o.kt)("th",{parentName:"tr",align:null},"Default value"),(0,o.kt)("th",{parentName:"tr",align:null},"TextLayer equivalent"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getText")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"f => f.properties.text")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#gettext"},"getText"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getTextColor")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[0, 0, 0, 255]")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#getcolor"},"getColor"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getTextAngle")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"0")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#getangle"},"getAngle"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getTextSize")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"32")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#getsize"},"getSize"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getTextAnchor")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"'middle'")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#gettextanchor"},"getTextAnchor"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getTextAlignmentBaseline")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"'center'")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#getalignmentbaseline"},"getAlignmentBaseline"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getTextPixelOffset")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[0, 0]")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#getpixeloffset"},"getPixelOffset"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getTextBackgroundColor")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[255, 255, 255, 255]")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#getbackgroundcolor"},"getBackgroundColor"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getTextBorderColor")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[0, 0, 0, 255]")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#getbordercolor"},"getBorderColor"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getTextBorderWidth")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"0")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#getborderwidth"},"getBorderWidth"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textSizeUnits")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"'pixels'")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#sizeunits"},"sizeUnits"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textSizeScale")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"1")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#sizescale"},"sizeScale"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textSizeMinPixels")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"0")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#sizeminpixels"},"sizeMinPixels"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textSizeMaxPixels")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Number.MAX_SAFE_INTEGER")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#sizemaxpixels"},"sizeMaxPixels"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textCharacterSet")),(0,o.kt)("td",{parentName:"tr",align:null},"ASCII chars 32-128"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#characterset"},"characterSet"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textFontFamily")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"'Monaco, monospace'")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#fontfamily"},"fontFamily"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textFontWeight")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"'normal'")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#fontweight"},"fontWeight"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textLineHeight")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"1")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#lineheight"},"lineHeight"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textMaxWidth")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"-1")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#maxwidth"},"maxWidth"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textWordBreak")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"'break-word'")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#wordbreak"},"wordBreak"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textBackground")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"false")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#background"},"background"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textBackgroundPadding")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[0, 0]")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#backgroundpadding"},"backgroundPadding"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textOutlineColor")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"[0, 0, 0, 255]")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#outlinecolor"},"outlineColor"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textOutlineWidth")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"0")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#outlinewidth"},"outlineWidth"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textBillboard")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"true")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#billboard"},"billboard"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"textFontSettings")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"{}")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/layers/text-layer#fontSettings"},"fontSettings"))))),(0,o.kt)("h2",{id:"sub-layers"},"Sub Layers"),(0,o.kt)("p",null,"The GeoJsonLayer renders the following sublayers:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"polygons-fill")," - a ",(0,o.kt)("a",{parentName:"li",href:"/docs/api-reference/layers/solid-polygon-layer"},"SolidPolygonLayer")," rendering all the ",(0,o.kt)("inlineCode",{parentName:"li"},"Polygon")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"MultiPolygon")," features."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"polygons-stroke")," - a ",(0,o.kt)("a",{parentName:"li",href:"/docs/api-reference/layers/path-layer"},"PathLayer")," rendering the outline of all the ",(0,o.kt)("inlineCode",{parentName:"li"},"Polygon")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"MultiPolygon")," features. Only rendered if ",(0,o.kt)("inlineCode",{parentName:"li"},"stroked: true")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"extruded: false"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"linestrings")," - a ",(0,o.kt)("a",{parentName:"li",href:"/docs/api-reference/layers/path-layer"},"PathLayer")," rendering all the ",(0,o.kt)("inlineCode",{parentName:"li"},"LineString")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"MultiLineString")," features."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"points-circle")," - a ",(0,o.kt)("a",{parentName:"li",href:"/docs/api-reference/layers/scatterplot-layer"},"ScatterplotLayer")," rendering all the ",(0,o.kt)("inlineCode",{parentName:"li"},"Point")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"MultiPoint")," features if ",(0,o.kt)("inlineCode",{parentName:"li"},"pointType")," is ",(0,o.kt)("inlineCode",{parentName:"li"},"'circle'"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"points-icon")," - an ",(0,o.kt)("a",{parentName:"li",href:"/docs/api-reference/layers/icon-layer"},"IconLayer")," rendering all the ",(0,o.kt)("inlineCode",{parentName:"li"},"Point")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"MultiPoint")," features if ",(0,o.kt)("inlineCode",{parentName:"li"},"pointType")," is ",(0,o.kt)("inlineCode",{parentName:"li"},"'icon'"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"points-text")," - a ",(0,o.kt)("a",{parentName:"li",href:"/docs/api-reference/layers/text-layer"},"TextLayer")," rendering all the ",(0,o.kt)("inlineCode",{parentName:"li"},"Point")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"MultiPoint")," features if ",(0,o.kt)("inlineCode",{parentName:"li"},"pointType")," is ",(0,o.kt)("inlineCode",{parentName:"li"},"'text'"),".")),(0,o.kt)("h2",{id:"remarks"},"Remarks"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Geometry transition can be enabled with ",(0,o.kt)("inlineCode",{parentName:"li"},"props.transitions: {geometry: <transition_settings>}"),"."),(0,o.kt)("li",{parentName:"ul"},"Input data must adhere to the ",(0,o.kt)("a",{parentName:"li",href:"https://tools.ietf.org/html/rfc7946"},"GeoJSON specification"),". Most GIS software support exporting to GeoJSON format. You may validate your data with free tools such as ",(0,o.kt)("a",{parentName:"li",href:"https://geojson.io/"},"this"),"."),(0,o.kt)("li",{parentName:"ul"},"The GeoJsonLayer renders 3D geometries if each feature's ",(0,o.kt)("inlineCode",{parentName:"li"},"coordinates")," contain 3D points.")),(0,o.kt)("h2",{id:"source"},"Source"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/visgl/deck.gl/tree/master/modules/layers/src/geojson-layer"},"modules/layers/src/geojson-layer")))}h.isMDXComponent=!0},96070:()=>{},39875:(t,e,n)=>{"use strict";n.d(e,{Z:()=>o});const i=1e20;class o{constructor({fontSize:t=24,buffer:e=3,radius:n=8,cutoff:i=.25,fontFamily:o="sans-serif",fontWeight:r="normal",fontStyle:s="normal"}={}){this.buffer=e,this.cutoff=i,this.radius=n;const a=this.size=t+4*e,l=this._createCanvas(a),c=this.ctx=l.getContext("2d",{willReadFrequently:!0});c.font=`${s} ${r} ${t}px ${o}`,c.textBaseline="alphabetic",c.textAlign="left",c.fillStyle="black",this.gridOuter=new Float64Array(a*a),this.gridInner=new Float64Array(a*a),this.f=new Float64Array(a),this.z=new Float64Array(a+1),this.v=new Uint16Array(a)}_createCanvas(t){const e=document.createElement("canvas");return e.width=e.height=t,e}draw(t){const{width:e,actualBoundingBoxAscent:n,actualBoundingBoxDescent:o,actualBoundingBoxLeft:s,actualBoundingBoxRight:a}=this.ctx.measureText(t),l=Math.ceil(n),c=Math.max(0,Math.min(this.size-this.buffer,Math.ceil(a-s))),d=Math.min(this.size-this.buffer,l+Math.ceil(o)),p=c+2*this.buffer,u=d+2*this.buffer,h=Math.max(p*u,0),g=new Uint8ClampedArray(h),f={data:g,width:p,height:u,glyphWidth:c,glyphHeight:d,glyphTop:l,glyphLeft:0,glyphAdvance:e};if(0===c||0===d)return f;const{ctx:m,buffer:y,gridInner:v,gridOuter:_}=this;m.clearRect(y,y,c,d),m.fillText(t,y,y+l);const w=m.getImageData(y,y,c,d);_.fill(i,0,h),v.fill(0,0,h);for(let r=0;r<d;r++)for(let t=0;t<c;t++){const e=w.data[4*(r*c+t)+3]/255;if(0===e)continue;const n=(r+y)*p+t+y;if(1===e)_[n]=0,v[n]=i;else{const t=.5-e;_[n]=t>0?t*t:0,v[n]=t<0?t*t:0}}r(_,0,0,p,u,p,this.f,this.v,this.z),r(v,y,y,c,d,p,this.f,this.v,this.z);for(let i=0;i<h;i++){const t=Math.sqrt(_[i])-Math.sqrt(v[i]);g[i]=Math.round(255-255*(t/this.radius+this.cutoff))}return f}}function r(t,e,n,i,o,r,a,l,c){for(let d=e;d<e+i;d++)s(t,n*r+d,r,o,a,l,c);for(let d=n;d<n+o;d++)s(t,d*r+e,1,i,a,l,c)}function s(t,e,n,o,r,s,a){s[0]=0,a[0]=-i,a[1]=i,r[0]=t[e];for(let l=1,c=0,d=0;l<o;l++){r[l]=t[e+l*n];const o=l*l;do{const t=s[c];d=(r[l]-r[t]+o-t*t)/(l-t)/2}while(d<=a[c]&&--c>-1);c++,s[c]=l,a[c]=d,a[c+1]=i}for(let i=0,l=0;i<o;i++){for(;a[l+1]<i;)l++;const o=s[l],c=i-o;t[e+i*n]=r[o]+c*c}}}}]);