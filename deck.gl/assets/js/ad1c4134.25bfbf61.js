"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1234],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>k});var l=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=l.createContext({}),c=function(e){var t=l.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return l.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=c(a),m=n,k=p["".concat(s,".").concat(m)]||p[m]||u[m]||r;return a?l.createElement(k,i(i({ref:t},d),{},{components:a})):l.createElement(k,i({ref:t},d))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:n,i[1]=o;for(var c=2;c<r;c++)i[c]=a[c];return l.createElement.apply(null,i)}return l.createElement.apply(null,a)}m.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>i});var l=a(67294),n=a(86010);const r={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:a,className:i}=e;return l.createElement("div",{role:"tabpanel",className:(0,n.Z)(r.tabItem,i),hidden:a},t)}},74866:(e,t,a)=>{a.d(t,{Z:()=>v});var l=a(83117),n=a(67294),r=a(86010),i=a(12466),o=a(16550),s=a(91980),c=a(67392),d=a(50012);function p(e){return function(e){return n.Children.map(e,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))}(e).map((e=>{let{props:{value:t,label:a,attributes:l,default:n}}=e;return{value:t,label:a,attributes:l,default:n}}))}function u(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=null!=t?t:p(a);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,a])}function m(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function k(e){let{queryString:t=!1,groupId:a}=e;const l=(0,o.k6)(),r=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:t,groupId:a});return[(0,s._X)(r),(0,n.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(l.location.search);t.set(r,e),l.replace({...l.location,search:t.toString()})}),[r,l])]}function h(e){const{defaultValue:t,queryString:a=!1,groupId:l}=e,r=u(e),[i,o]=(0,n.useState)((()=>function(e){var t;let{defaultValue:a,tabValues:l}=e;if(0===l.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!m({value:a,tabValues:l}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+a+'" but none of its children has the corresponding value. Available values are: '+l.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return a}const n=null!=(t=l.find((e=>e.default)))?t:l[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:r}))),[s,c]=k({queryString:a,groupId:l}),[p,h]=function(e){let{groupId:t}=e;const a=function(e){return e?"docusaurus.tab."+e:null}(t),[l,r]=(0,d.Nk)(a);return[l,(0,n.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:l}),f=(()=>{const e=null!=s?s:p;return m({value:e,tabValues:r})?e:null})();(0,n.useLayoutEffect)((()=>{f&&o(f)}),[f]);return{selectedValue:i,selectValue:(0,n.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error("Can't select invalid tab value="+e);o(e),c(e),h(e)}),[c,h,r]),tabValues:r}}var f=a(72389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:a,selectedValue:o,selectValue:s,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:p}=(0,i.o5)(),u=e=>{const t=e.currentTarget,a=d.indexOf(t),l=c[a].value;l!==o&&(p(t),s(l))},m=e=>{var t;let a=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{var l;const t=d.indexOf(e.currentTarget)+1;a=null!=(l=d[t])?l:d[0];break}case"ArrowLeft":{var n;const t=d.indexOf(e.currentTarget)-1;a=null!=(n=d[t])?n:d[d.length-1];break}}null==(t=a)||t.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},t)},c.map((e=>{let{value:t,label:a,attributes:i}=e;return n.createElement("li",(0,l.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>d.push(e),onKeyDown:m,onClick:u},i,{className:(0,r.Z)("tabs__item",g.tabItem,null==i?void 0:i.className,{"tabs__item--active":o===t})}),null!=a?a:t)})))}function b(e){let{lazy:t,children:a,selectedValue:l}=e;if(a=Array.isArray(a)?a:[a],t){const e=a.find((e=>e.props.value===l));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==l}))))}function N(e){const t=h(e);return n.createElement("div",{className:(0,r.Z)("tabs-container",g.tabList)},n.createElement(y,(0,l.Z)({},e,t)),n.createElement(b,(0,l.Z)({},e,t)))}function v(e){const t=(0,f.Z)();return n.createElement(N,(0,l.Z)({key:String(t)},e))}},2972:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>k,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var l=a(83117),n=(a(67294),a(3905)),r=a(74866),i=a(85162);const o={},s="Tile3DLayer",c={unversionedId:"api-reference/geo-layers/tile-3d-layer",id:"api-reference/geo-layers/tile-3d-layer",title:"Tile3DLayer",description:"The Tile3DLayer renders 3d tiles data formatted according to the 3D Tiles Specification and ESRI I3S, supported by the Tiles3DLoader.",source:"@site/../docs/api-reference/geo-layers/tile-3d-layer.md",sourceDirName:"api-reference/geo-layers",slug:"/api-reference/geo-layers/tile-3d-layer",permalink:"/deck.gl/docs/api-reference/geo-layers/tile-3d-layer",draft:!1,editUrl:"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/geo-layers/tile-3d-layer.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"TileLayer",permalink:"/deck.gl/docs/api-reference/geo-layers/tile-layer"},next:{title:"TripsLayer",permalink:"/deck.gl/docs/api-reference/geo-layers/trips-layer"}},d={},p=[{value:"Example",id:"example",level:2},{value:"Load 3D Tiles from Cesium ION",id:"load-3d-tiles-from-cesium-ion",level:3},{value:"Load I3S Tiles from ArcGIS",id:"load-i3s-tiles-from-arcgis",level:3},{value:"Load 3D Tiles from Google Maps",id:"load-3d-tiles-from-google-maps",level:3},{value:"Installation",id:"installation",level:2},{value:"Properties",id:"properties",level:2},{value:"Render Options",id:"render-options",level:3},{value:"<code>opacity</code> (number, Optional)",id:"opacity",level:4},{value:"<code>pointSize</code> (number, Optional)",id:"pointsize",level:4},{value:"Data Properties",id:"data-properties",level:3},{value:"<code>data</code> (string)",id:"data",level:4},{value:"<code>loader</code> (object)",id:"loader",level:4},{value:"<code>loadOptions</code> (object, Optional)",id:"loadoptions",level:4},{value:"<code>pickable</code> (boolean, Optional)",id:"pickable",level:4},{value:"Data Accessors",id:"data-accessors",level:3},{value:"<code>getPointColor</code> (Accessor&lt;Color&gt;, Optional)",id:"getpointcolor",level:4},{value:"Callbacks",id:"callbacks",level:3},{value:"<code>onTilesetLoad</code> (Function, optional)",id:"ontilesetload",level:4},{value:"<code>onTileLoad</code> (Function, optional)",id:"ontileload",level:4},{value:"<code>onTileUnload</code> (Function, optional)",id:"ontileunload",level:4},{value:"<code>onTileError</code> (Function, optional)",id:"ontileerror",level:4},{value:"<code>_getMeshColor</code> (Function, optional)",id:"_getmeshcolor",level:4},{value:"Sub Layers",id:"sub-layers",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Source",id:"source",level:2}],u={toc:p},m="wrapper";function k(e){let{components:t,...a}=e;return(0,n.kt)(m,(0,l.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"tile3dlayer"},"Tile3DLayer"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"Tile3DLayer")," renders 3d tiles data formatted according to the ",(0,n.kt)("a",{parentName:"p",href:"https://www.opengeospatial.org/standards/3DTiles"},"3D Tiles Specification")," and ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Esri/i3s-spec"},"ESRI I3S"),", supported by the ",(0,n.kt)("a",{parentName:"p",href:"https://loaders.gl/modules/3d-tiles/docs/api-reference/tiles-3d-loader"},"Tiles3DLoader"),"."),(0,n.kt)("p",null,"Tile3DLayer is a ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/composite-layer"},"CompositeLayer"),". Base on each tile type, it uses a ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/layers/point-cloud-layer"},"PointCloudLayer"),", a ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/mesh-layers/scenegraph-layer"},"ScenegraphLayer")," or ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/mesh-layers/simple-mesh-layer"},"SimpleMeshLayer")," to render the geometries."),(0,n.kt)("p",null,"References"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification"},"3D Tiles")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Esri/i3s-spec"},"ESRI I3S"))),(0,n.kt)("h2",{id:"example"},"Example"),(0,n.kt)("h3",{id:"load-3d-tiles-from-cesium-ion"},"Load 3D Tiles from Cesium ION"),(0,n.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,n.kt)(i.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"import {Deck} from '@deck.gl/core';\nimport {Tile3DLayer} from '@deck.gl/geo-layers';\nimport {CesiumIonLoader} from '@loaders.gl/3d-tiles';\n\nconst layer = new Tile3DLayer({\n  id: 'tile-3d-layer',\n  // Tileset json file url\n  data: 'https://assets.cesium.com/43978/tileset.json',\n  loader: CesiumIonLoader,\n  loadOptions: {\n    // Set up Ion account: https://cesium.com/docs/tutorials/getting-started/#your-first-app\n    'cesium-ion': {accessToken: '<ion_access_token_for_your_asset>'}\n  },\n  onTilesetLoad: tileset => {\n    // Recenter to cover the tileset\n    const {cartographicCenter, zoom} = tileset;\n    deckInstance.setProps({\n      initialViewState: {\n        longitude: cartographicCenter[0],\n        latitude: cartographicCenter[1],\n        zoom\n      }\n    });\n  },\n  pointSize: 2\n});\n\nconst deckInstance = new Deck({\n  initialViewState: {\n    longitude: 10,\n    latitude: 50,\n    zoom: 2\n  },\n  controller: true,\n  layers: [layer]\n});\n"))),(0,n.kt)(i.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"import {Deck} from '@deck.gl/core';\nimport {Tile3DLayer} from '@deck.gl/geo-layers';\nimport {CesiumIonLoader} from '@loaders.gl/3d-tiles';\nimport type {Tileset3D} from '@loaders.gl/tiles';\n\nconst layer = new Tile3DLayer({\n  id: 'tile-3d-layer',\n  // Tileset json file url\n  data: 'https://assets.cesium.com/43978/tileset.json',\n  loader: CesiumIonLoader,\n  loadOptions: {\n    // Set up Ion account: https://cesium.com/docs/tutorials/getting-started/#your-first-app\n    'cesium-ion': {accessToken: '<ion_access_token_for_your_asset>'}\n  },\n  onTilesetLoad: (tileset: Tileset3D) => {\n    // Recenter to cover the tileset\n    const {cartographicCenter, zoom} = tileset;\n    deckInstance.setProps({\n      initialViewState: {\n        longitude: cartographicCenter[0],\n        latitude: cartographicCenter[1],\n        zoom\n      }\n    });\n  },\n  pointSize: 2\n});\n\nconst deckInstance = new Deck({\n  initialViewState: {\n    longitude: 10,\n    latitude: 50,\n    zoom: 2\n  },\n  controller: true,\n  layers: [layer]\n});\n"))),(0,n.kt)(i.Z,{value:"react",label:"React",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, {useState} from 'react';\nimport DeckGL from '@deck.gl/react';\nimport {Tile3DLayer} from '@deck.gl/geo-layers';\nimport {CesiumIonLoader} from '@loaders.gl/3d-tiles';\nimport type {MapViewState} from '@deck.gl/core';\nimport type {Tileset3D} from '@loaders.gl/tiles';\n\nfunction App() {\n  const [initialViewState, setInitialViewState] = useState<MapViewState>({\n    longitude: 10,\n    latitude: 50,\n    zoom: 2\n  });\n\n  const layer = new Tile3DLayer({\n    id: 'tile-3d-layer',\n    // Tileset json file url\n    data: 'https://assets.cesium.com/43978/tileset.json',\n    loader: CesiumIonLoader,\n    loadOptions: {\n      // Set up Ion account: https://cesium.com/docs/tutorials/getting-started/#your-first-app\n      'cesium-ion': {accessToken: '<ion_access_token_for_your_asset>'}\n    },\n    onTilesetLoad: (tileset: Tileset3D) => {\n      // Recenter to cover the tileset\n      const {cartographicCenter, zoom} = tileset;\n      setInitialViewState({\n        longitude: cartographicCenter[0],\n        latitude: cartographicCenter[1],\n        zoom\n      });\n    },\n    pointSize: 2\n  });\n\n  return <DeckGL\n    initialViewState={initialViewState}\n    controller\n    layers={[layer]}\n  />;\n}\n")))),(0,n.kt)("h3",{id:"load-i3s-tiles-from-arcgis"},"Load I3S Tiles from ArcGIS"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"import {Tile3DLayer} from '@deck.gl/geo-layers';\nimport {I3SLoader} from '@loaders.gl/i3s';\n\nconst layer = new Tile3DLayer({\n  id: 'tile-3d-layer',\n  // Tileset entry point: Indexed 3D layer file url\n  data: 'https://tiles.arcgis.com/tiles/z2tnIkrLQ2BRzr6P/arcgis/rest/services/SanFrancisco_Bldgs/SceneServer/layers/0',\n  loader: I3SLoader\n});\n")),(0,n.kt)("h3",{id:"load-3d-tiles-from-google-maps"},"Load 3D Tiles from Google Maps"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"import {Tile3DLayer} from '@deck.gl/geo-layers';\n\nconst layer = new Tile3DLayer({\n  id: 'tile-3d-layer',\n  data: 'https://tile.googleapis.com/v1/3dtiles/root.json',\n  loadOptions: {\n    // https://developers.google.com/maps/documentation/tile/3d-tiles\n    fetch: {headers: {'X-GOOG-API-KEY': '<google_maps_api_key>'}}\n  }\n});\n")),(0,n.kt)("h2",{id:"installation"},"Installation"),(0,n.kt)("p",null,"To install the dependencies:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm install deck.gl\n# or\nnpm install @deck.gl/core @deck.gl/layers @deck.gl/mesh-layers @deck.gl/geo-layers\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"import {Tile3DLayer} from '@deck.gl/geo-layers';\nimport type {Tile3DLayerProps} from '@deck.gl/geo-layers';\n\nnew Tile3DLayer<TileDataT>(...props: Tile3DLayerProps<TileDataT>[]);\n")),(0,n.kt)("p",null,"To use pre-bundled scripts:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-html"},'<script src="https://unpkg.com/deck.gl@^9.0.0/dist.min.js"><\/script>\n\x3c!-- or --\x3e\n<script src="https://unpkg.com/@deck.gl/core@^9.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/layers@^9.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/mesh-layers@^9.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/geo-layers@^9.0.0/dist.min.js"><\/script>\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"new deck.Tile3DLayer({});\n")),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("p",null,"Inherits from all ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/layer"},"Base Layer")," and ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/composite-layer"},"CompositeLayer")," properties."),(0,n.kt)("p",null,"Along with other options as below,"),(0,n.kt)("h3",{id:"render-options"},"Render Options"),(0,n.kt)("h4",{id:"opacity"},(0,n.kt)("inlineCode",{parentName:"h4"},"opacity")," (number, Optional)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default ",(0,n.kt)("inlineCode",{parentName:"li"},"1.0"))),(0,n.kt)("p",null,"The opacity of the layer. The same as defined in ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/layer"},"layer"),"."),(0,n.kt)("h4",{id:"pointsize"},(0,n.kt)("inlineCode",{parentName:"h4"},"pointSize")," (number, Optional)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default ",(0,n.kt)("inlineCode",{parentName:"li"},"1.0"))),(0,n.kt)("p",null,"Global radius of all points in pixels.\nThis value is only applied when ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#introduction"},"tile format")," is ",(0,n.kt)("inlineCode",{parentName:"p"},"pnts"),"."),(0,n.kt)("h3",{id:"data-properties"},"Data Properties"),(0,n.kt)("h4",{id:"data"},(0,n.kt)("inlineCode",{parentName:"h4"},"data")," (string)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A URL to fetch tiles entry point of ",(0,n.kt)("inlineCode",{parentName:"li"},"3D Tiles")," ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#tileset-json"},"Tileset JSON")," file or ",(0,n.kt)("inlineCode",{parentName:"li"},"Indexed 3D Scene Layer")," file ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/Esri/i3s-spec"},"I3S"),".")),(0,n.kt)("h4",{id:"loader"},(0,n.kt)("inlineCode",{parentName:"h4"},"loader")," (object)"),(0,n.kt)("p",null,"Default ",(0,n.kt)("a",{parentName:"p",href:"https://loaders.gl/modules/3d-tiles/docs/api-reference/tiles-3d-loader"},(0,n.kt)("inlineCode",{parentName:"a"},"Tiles3DLoader"))),(0,n.kt)("p",null,"A loader which is used to decode the fetched tiles. Available options are ",(0,n.kt)("a",{parentName:"p",href:"https://loaders.gl/docs/modules/3d-tiles/api-reference/cesium-ion-loader"},(0,n.kt)("inlineCode",{parentName:"a"},"CesiumIonLoader")),", ",(0,n.kt)("a",{parentName:"p",href:"https://loaders.gl/modules/3d-tiles/docs/api-reference/tiles-3d-loader"},(0,n.kt)("inlineCode",{parentName:"a"},"Tiles3DLoader")),", ",(0,n.kt)("a",{parentName:"p",href:"https://loaders.gl/modules/i3s/docs/api-reference/i3s-loader"},(0,n.kt)("inlineCode",{parentName:"a"},"I3SLoader")),"."),(0,n.kt)("h4",{id:"loadoptions"},(0,n.kt)("inlineCode",{parentName:"h4"},"loadOptions")," (object, Optional)"),(0,n.kt)("p",null,"On top of the ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/layer#loadoptions"},"default options"),", also support the following keys:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"cesium-ion"),": options for the ",(0,n.kt)("inlineCode",{parentName:"li"},"CesiumIonLoader")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"3d-tiles"),": options for the ",(0,n.kt)("inlineCode",{parentName:"li"},"Tiles3DLoader")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"i3s"),": options for the ",(0,n.kt)("inlineCode",{parentName:"li"},"I3SLoader"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"tileset"),": Forward parameters to the ",(0,n.kt)("a",{parentName:"li",href:"https://loaders.gl/modules/tiles/docs/api-reference/tileset-3d#constructor-1"},(0,n.kt)("inlineCode",{parentName:"a"},"Tileset3D"))," instance after fetching the tileset metadata.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"import {CesiumIonLoader} from '@loaders.gl/3d-tiles';\nimport {Tile3DLayer} from '@deck.gl/geo-layers';\n\nconst layer = new Tile3DLayer({\n  id: 'tile-3d-layer',\n  data: 'https://assets.cesium.com/43978/tileset.json',\n  loader: CesiumIonLoader,\n  loadOptions: {\n    tileset: {\n      throttleRequests: false,\n    },\n    'cesium-ion': {accessToken: '<ion_access_token_for_your_asset>'}\n  }\n})\n")),(0,n.kt)("h4",{id:"pickable"},(0,n.kt)("inlineCode",{parentName:"h4"},"pickable")," (boolean, Optional)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: false")),(0,n.kt)("p",null,"When ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/developer-guide/custom-layers/picking"},(0,n.kt)("inlineCode",{parentName:"a"},"picking"))," is enabled, ",(0,n.kt)("inlineCode",{parentName:"p"},"info.object")," will be a ",(0,n.kt)("a",{parentName:"p",href:"https://loaders.gl/docs/specifications/category-3d-tiles#tileheader-fields"},"Tile3DHeader")," object."),(0,n.kt)("h3",{id:"data-accessors"},"Data Accessors"),(0,n.kt)("h4",{id:"getpointcolor"},(0,n.kt)("inlineCode",{parentName:"h4"},"getPointColor")," (",(0,n.kt)("a",{parentName:"h4",href:"/deck.gl/docs/developer-guide/using-layers#accessors"},"Accessor","<","Color",">"),", Optional)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default ",(0,n.kt)("inlineCode",{parentName:"li"},"[0, 0, 0, 255]"))),(0,n.kt)("p",null,"The rgba color at the target, in ",(0,n.kt)("inlineCode",{parentName:"p"},"r, g, b, [a]"),". Each component is in the 0-255 range.\nThis value is only applied when ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#introduction"},"tile format")," is ",(0,n.kt)("inlineCode",{parentName:"p"},"pnts")," and no ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/AnalyticalGraphicsInc/3d-tiles/blob/master/specification/TileFormats/PointCloud/README.md#point-colors"},"color properties")," are defined in point cloud tile file."),(0,n.kt)("h3",{id:"callbacks"},"Callbacks"),(0,n.kt)("h4",{id:"ontilesetload"},(0,n.kt)("inlineCode",{parentName:"h4"},"onTilesetLoad")," (Function, optional)"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"onTilesetLoad")," is a function that is called when Tileset JSON file is loaded. ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#tileset-json"},"Tileset")," object is passed in the callback."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"onTilesetLoad: (tileset) => {}"))),(0,n.kt)("h4",{id:"ontileload"},(0,n.kt)("inlineCode",{parentName:"h4"},"onTileLoad")," (Function, optional)"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"onTileLoad")," is a function that is called when a tile in the tileset hierarchy is loaded. ",(0,n.kt)("a",{parentName:"p",href:"https://loaders.gl/modules/3d-tiles/modules/3d-tiles/docs/api-reference/tile-3d"},"Tile3D")," object is passed in the callback."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"onTileLoad: (tileHeader) => {}"))),(0,n.kt)("h4",{id:"ontileunload"},(0,n.kt)("inlineCode",{parentName:"h4"},"onTileUnload")," (Function, optional)"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"onTileUnload")," is a function that is called when a tile is unloaded. ",(0,n.kt)("a",{parentName:"p",href:"https://loaders.gl/modules/3d-tiles/modules/3d-tiles/docs/api-reference/tile-3d"},"Tile3D")," object is passed in the callback."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"onTileUnload: (tileHeader) => {}"))),(0,n.kt)("h4",{id:"ontileerror"},(0,n.kt)("inlineCode",{parentName:"h4"},"onTileError")," (Function, optional)"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"onTileError")," is a function that is called when a tile failed to load."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"onTileError: (tileHeader, url, message) => {}"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"url"),": the url of the failed tile."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"message"),": the error message.")))),(0,n.kt)("h4",{id:"_getmeshcolor"},(0,n.kt)("inlineCode",{parentName:"h4"},"_getMeshColor")," (Function, optional)"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"_getMeshColor")," is a function which allows to change color of mesh based on properties of ",(0,n.kt)("a",{parentName:"p",href:"https://loaders.gl/docs/specifications/category-3d-tiles#tileheader-fields"},"tileHeader")," object.\nIt recieves ",(0,n.kt)("inlineCode",{parentName:"p"},"tileHeader")," object as argument and return type is array of ","[r, g, b]"," values in the 0-255 range.\nThis value is only applied when tile format is ",(0,n.kt)("inlineCode",{parentName:"p"},"mesh"),".\nCan be used only for I3S debugging purposes."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"_getMeshColor: (tileHeader) => [255, 255, 255]"))),(0,n.kt)("h2",{id:"sub-layers"},"Sub Layers"),(0,n.kt)("p",null,"The Tile3DLayer renders the following sublayers based on tile ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#introduction"},"format"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"scenegraph")," - a ",(0,n.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/mesh-layers/scenegraph-layer"},"ScenegraphLayer")," rendering all the tiles with Batched 3D Model format (",(0,n.kt)("inlineCode",{parentName:"li"},"b3dm"),") or Instanced 3D Model format (",(0,n.kt)("inlineCode",{parentName:"li"},"i3dm"),").",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"_lighting")," is default to ",(0,n.kt)("inlineCode",{parentName:"li"},"pbr"),"."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"pointcloud")," - a ",(0,n.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/layers/point-cloud-layer"},"PointCloudLayer")," rendering all the tiles with Point Cloud format (",(0,n.kt)("inlineCode",{parentName:"li"},"pnts"),")."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"mesh")," - a ",(0,n.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/mesh-layers/simple-mesh-layer"},"SimpleMeshLayer")," rendering all the tiles ESRI ",(0,n.kt)("inlineCode",{parentName:"li"},"MeshPyramids")," data.")),(0,n.kt)("p",null,"Follow ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/composite-layer#_subLayerProp"},"CompositeLayer")," and example in this layer doc to see how to override sub layer props."),(0,n.kt)("h2",{id:"remarks"},"Remarks"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("inlineCode",{parentName:"li"},"Tile3DLayer")," can be rendered in multiple views. A tile is loaded if it is required by any of the viewports, and shared across all views via a single cache system.")),(0,n.kt)("h2",{id:"source"},"Source"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/visgl/deck.gl/tree/master/modules/geo-layers/src/tile-3d-layer"},"modules/geo-layers/src/tile-3d-layer")))}k.isMDXComponent=!0}}]);