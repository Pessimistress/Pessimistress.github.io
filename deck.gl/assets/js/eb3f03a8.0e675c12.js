"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[3972],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),p=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(u.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,f=d["".concat(u,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(f,l(l({ref:t},s),{},{components:n})):a.createElement(f,l({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},21207:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(83117),r=(n(67294),n(3905));const i={},l="Attribute (Internal)",o={unversionedId:"api-reference/core/attribute",id:"api-reference/core/attribute",title:"Attribute (Internal)",description:"This class helps deck.gl manage attributes. It integrates into the luma.gl Model.setAttributes() method by implementing the Attribute.getValue() method. luma.gl checks for the presence of this method on any attribute passed in.",source:"@site/../docs/api-reference/core/attribute.md",sourceDirName:"api-reference/core",slug:"/api-reference/core/attribute",permalink:"/deck.gl/docs/api-reference/core/attribute",draft:!1,editUrl:"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/core/attribute.md",tags:[],version:"current",frontMatter:{}},u={},p=[{value:"Usage",id:"usage",level:2},{value:"Methods",id:"methods",level:2},{value:"constructor",id:"constructor",level:3},{value:"delete",id:"delete",level:3},{value:"update",id:"update",level:3},{value:"getBuffer",id:"getbuffer",level:3}],s={toc:p},d="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"attribute-internal"},"Attribute (Internal)"),(0,r.kt)("p",null,"This class helps deck.gl manage attributes. It integrates into the luma.gl ",(0,r.kt)("inlineCode",{parentName:"p"},"Model.setAttributes()")," method by implementing the ",(0,r.kt)("inlineCode",{parentName:"p"},"Attribute.getValue()")," method. luma.gl checks for the presence of this method on any attribute passed in."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Create model object by passing shaders, uniforms, geometry and render it by passing updated uniforms."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import {Attribute} from '@deck.gl/core';\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// construct the model.\nconst positions = new Attribute({\n  id: 'vertexPositions',\n  size: 3,\n  value: new Float32Array([0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0])\n});\n\n// and on each frame update any uniforms (typically matrices) and call render.\nmodel.setAttributes({positions});\nmodel.draw();\n")),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("p",null,"The constructor for the Attribute class. Use this to create a new Attribute."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"new Attribute(gl, options);")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gl")," - WebGL context."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"size")," (number) - The number of components in each element the buffer (1-4)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," (string, optional) - Identifier of the attribute. Cannot be updated."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"type")," (string, optional) - Type of the attribute. If not supplied will be inferred from ",(0,r.kt)("inlineCode",{parentName:"li"},"value"),". Cannot be updated."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"isIndexed")," (boolean, optional) - If the attribute is element index. Default ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),". Cannot be updated."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"constant")," (boolean, optional) - If the attribute is a constant. Default ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"isInstanced")," (boolean, optional) - Whether buffer contains instance data. Default ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"normalized")," (boolean, optional) - Default ",(0,r.kt)("inlineCode",{parentName:"li"},"false")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"integer")," (boolean, optional) - Default ",(0,r.kt)("inlineCode",{parentName:"li"},"false")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"offset")," (number, optional) - where the data starts in the buffer. Default ",(0,r.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"stride")," (number, optional) - an additional offset between each element in the buffer. Default ",(0,r.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value")," (TypedArray) - value of the attribute.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"constant")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"true"),", the length of ",(0,r.kt)("inlineCode",{parentName:"li"},"value")," should match ",(0,r.kt)("inlineCode",{parentName:"li"},"size")),(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"constant")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),", the length of ",(0,r.kt)("inlineCode",{parentName:"li"},"value")," should be ",(0,r.kt)("inlineCode",{parentName:"li"},"size")," multiplies the number of vertices."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"buffer")," (Buffer) - an external buffer for the attribute.")),(0,r.kt)("h3",{id:"delete"},"delete"),(0,r.kt)("p",null,"Free GPU resources associated with this attribute."),(0,r.kt)("h3",{id:"update"},"update"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"attribute.update({value: newValue});\n")),(0,r.kt)("p",null,"Update attribute options. See ",(0,r.kt)("inlineCode",{parentName:"p"},"constructor")," for possible options."),(0,r.kt)("h3",{id:"getbuffer"},"getBuffer"),(0,r.kt)("p",null,"Returns a ",(0,r.kt)("inlineCode",{parentName:"p"},"Buffer")," object associated with this attribute, if any."))}c.isMDXComponent=!0}}]);